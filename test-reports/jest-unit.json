{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":1,"numPassedTests":20,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":20,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1756124826349,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["QualityRibbon Logic & Utilities","📊 Source Configuration Mapping"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 📊 Source Configuration Mapping should map unified source to Fresh badge","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should map unified source to Fresh badge"},{"ancestorTitles":["QualityRibbon Logic & Utilities","📊 Source Configuration Mapping"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 📊 Source Configuration Mapping should map cache source to Cache badge","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should map cache source to Cache badge"},{"ancestorTitles":["QualityRibbon Logic & Utilities","📊 Source Configuration Mapping"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 📊 Source Configuration Mapping should map llm source to LLM badge","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should map llm source to LLM badge"},{"ancestorTitles":["QualityRibbon Logic & Utilities","📊 Source Configuration Mapping"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 📊 Source Configuration Mapping should map heuristic source to Fast badge","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should map heuristic source to Fast badge"},{"ancestorTitles":["QualityRibbon Logic & Utilities","📊 Source Configuration Mapping"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 📊 Source Configuration Mapping should handle invalid source with fallback","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid source with fallback"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎨 Quality Level Configuration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎨 Quality Level Configuration should map high quality to High badge with green color","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should map high quality to High badge with green color"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎨 Quality Level Configuration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎨 Quality Level Configuration should map medium quality to Med badge with orange color","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should map medium quality to Med badge with orange color"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎨 Quality Level Configuration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎨 Quality Level Configuration should map low quality to Low badge with red color","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should map low quality to Low badge with red color"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎨 Quality Level Configuration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎨 Quality Level Configuration should handle invalid quality with fallback","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid quality with fallback"},{"ancestorTitles":["QualityRibbon Logic & Utilities","⏰ Age Formatting Logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities ⏰ Age Formatting Logic should format age correctly for different time periods","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should format age correctly for different time periods"},{"ancestorTitles":["QualityRibbon Logic & Utilities","⏰ Age Formatting Logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities ⏰ Age Formatting Logic should handle edge cases in age calculation","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should handle edge cases in age calculation"},{"ancestorTitles":["QualityRibbon Logic & Utilities","⏰ Age Formatting Logic"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities ⏰ Age Formatting Logic should handle very large time periods","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle very large time periods"},{"ancestorTitles":["QualityRibbon Logic & Utilities","📏 Sample Size Formatting"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 📏 Sample Size Formatting should format valid sample sizes correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should format valid sample sizes correctly"},{"ancestorTitles":["QualityRibbon Logic & Utilities","📏 Sample Size Formatting"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 📏 Sample Size Formatting should return null for invalid sample sizes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return null for invalid sample sizes"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🔄 Integration Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🔄 Integration Tests should provide consistent mapping between all components","invocations":1,"location":null,"numPassingAsserts":25,"retryReasons":[],"status":"passed","title":"should provide consistent mapping between all components"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🔄 Integration Tests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🔄 Integration Tests should handle realistic data scenarios","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"should handle realistic data scenarios"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎯 Task Requirements Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎯 Task Requirements Validation should support all required source mappings per task spec","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should support all required source mappings per task spec"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎯 Task Requirements Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎯 Task Requirements Validation should support all required quality mappings per task spec","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should support all required quality mappings per task spec"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎯 Task Requirements Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎯 Task Requirements Validation should format sample sizes as n=X per task spec","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should format sample sizes as n=X per task spec"},{"ancestorTitles":["QualityRibbon Logic & Utilities","🎯 Task Requirements Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QualityRibbon Logic & Utilities 🎯 Task Requirements Validation should format age as now/m/h/d per task spec","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should format age as now/m/h/d per task spec"}],"endTime":1756124826537,"message":"","name":"/Users/adilyoltay/Desktop/obsesslesmobilenew/obslessless-clean/__tests__/unit/QualityRibbon.test.tsx","startTime":1756124826374,"status":"passed","summary":""}],"wasInterrupted":false}
