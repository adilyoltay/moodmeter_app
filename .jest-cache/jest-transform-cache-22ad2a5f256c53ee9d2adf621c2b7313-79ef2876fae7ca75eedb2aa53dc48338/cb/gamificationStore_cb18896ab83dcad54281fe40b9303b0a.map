{"version":3,"names":["_zustand","require","_asyncStorage","_interopRequireDefault","Haptics","_interopRequireWildcard","_storage","_supabase","_featureFlags","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ACHIEVEMENTS","id","title","description","category","icon","rarity","criteria","type","target","healingPoints","MICRO_REWARDS","voice_mood_checkin","points","message","trigger","mood_manual_checkin","breathwork_completed","first_activity_of_day","streak_milestone_7","streak_milestone_21","multi_module_day_2","multi_module_day_3","weekly_consistency_5","useGamificationStore","exports","create","profile","streakCurrent","streakBest","unlockedAchievements","healingPointsToday","healingPointsTotal","streakLevel","lastActivityDate","Date","toISOString","split","lastFirstActivityAwardDate","undefined","streakMilestonesAwarded","modulesActiveDate","modulesActiveToday","multiModuleDayAwarded","weekKey","activeDaysThisWeek","weeklyConsistencyAwarded","achievements","lastMicroReward","lastPointsCalculation","currentMissions","isLoading","currentUserId","setUserId","userId","initializeGamification","_initializeGamification","_asyncToGenerator2","uid","console","warn","storageKey","StorageKeys","GAMIFICATION","stored","AsyncStorage","getItem","JSON","parse","today","lastKey","String","daysDiff","_lastKey$split$map","map","parseInt","_lastKey$split$map2","_slicedToArray2","y1","m1","d1","now","y2","getUTCFullYear","m2","getUTCMonth","d2","getUTCDate","t1","UTC","t2","Math","floor","_unused","error","_x","apply","arguments","updateStreak","_updateStreak","_get","updatedProfile","assign","max","saveProfile","_lastKey$split$map3","_lastKey$split$map4","_unused2","newStreak","_get2","awardMicroReward","checkAchievements","_checkAchievements","data","_get3","newlyUnlocked","achievement","includes","shouldUnlock","unlockedAt","push","notificationAsync","NotificationFeedbackType","Success","length","_x2","_x3","_awardMicroReward","context","_profile$modulesActiv","state","reward","trackModule","mod","setMods","Set","add","Array","from","_get4","_unused3","modsCount","getISOWeek","d","date","getFullYear","getMonth","getDate","setUTCDate","getUTCDay","yearStart","weekNo","ceil","padStart","currentWeekKey","milestone","awarded","isWeekend","getDay","streakMult","min","difficultyMult","durationBonus","dur","Number","durationMs","minutes","round","diff","difficulty","toLowerCase","computed","details","toFixed","baseMsg","join","impactAsync","ImpactFeedbackStyle","Light","_x4","_x5","getStreakInfo","_get5","levelInfo","seedling","name","nextLevel","warrior","master","currentLevel","current","best","level","levelName","levelDescription","nextLevelAt","_saveProfile","_get6","setItem","stringify","supabaseService","updateGamificationProfile","healing_points_total","healing_points_today","streak_count","streak_last_update","micro_rewards","log","dbError","awardUnifiedPoints","_awardUnifiedPoints","action","moduleData","_get7","basePoints","contextMultipliers","totalPoints","reasoning","FEATURE_FLAGS","isEnabled","staticReward","difficultyBonus","streakMultiplier","progressBonus","timingBonus","consistencyBonus","achievementMultiplier","honestyBonus","improvementBonus","detailBonus","breakdown","reason","pointsCalculation","_get8","_x6","generateUnifiedMissions","_generateUnifiedMissions","_get9","missions","updateMissionProgress","_updateMissionProgress","getMissionsForToday"],"sources":["gamificationStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as Haptics from 'expo-haptics';\nimport { \n  UserGamificationProfile, \n  AchievementDefinition, \n  StreakInfo,\n  MicroRewardTrigger,\n  MicroReward\n} from '@/types/gamification';\nimport { StorageKeys } from '@/utils/storage';\nimport supabaseService from '@/services/supabase';\nimport { \n  unifiedGamificationService, \n  UnifiedPointsCalculation, \n  UnifiedMission \n} from '@/services/staticGamification';\nimport { FEATURE_FLAGS } from '@/constants/featureFlags';\n\n// Achievement definitions based on documentation\nconst ACHIEVEMENTS: AchievementDefinition[] = [\n  // Terapi Kahramanı 🛡️\n  {\n    id: 'first_session',\n    title: 'İlk Adım',\n    description: 'İlk terapi egzersizini tamamla. En zor olan ilk adımı attın. Bu cesaretin bir sembolüdür.',\n    category: 'Resistance',\n    icon: 'trophy',\n    rarity: 'Common',\n    criteria: { type: 'milestone', target: 1 },\n    healingPoints: 20,\n  },\n  {\n    id: 'anxiety_reducer',\n    title: 'Kaygı Azaltıcısı',\n    description: 'Kompulsiyonla başa çıkarken kaygını %50\\'den fazla azalt. Kaygının doğal olarak azaldığını gözlemledin. Bu, OKB yönetiminin temelidir.',\n    category: 'Resistance',\n    icon: 'shield-check',\n    rarity: 'Rare',\n    criteria: { type: 'percentage', target: 50 },\n    healingPoints: 50,\n  },\n  {\n    id: 'therapy_warrior',\n    title: 'Terapi Savaşçısı',\n    description: '10 terapi egzersizi tamamla. Zorluklarla yüzleşme konusunda ustalaşıyorsun.',\n    category: 'Resistance',\n    icon: 'sword-cross',\n    rarity: 'Epic',\n    criteria: { type: 'count', target: 10 },\n    healingPoints: 100,\n  },\n  \n  // Direnç Ustası 💪\n  {\n    id: 'resistance_wall',\n    title: 'Direnç Duvarı',\n    description: 'Bir günde 5 kompulsiyona karşı diren. Kompulsiyonlara \"hayır\" deme gücünü gösterdin. Kontrol sende.',\n    category: 'Resistance',\n    icon: 'hand-front-right',\n    rarity: 'Rare',\n    criteria: { type: 'count', target: 5 },\n    healingPoints: 40,\n  },\n  {\n    id: 'high_resistance_master',\n    title: 'Yüksek Direnç Ustası',\n    description: '20 kez 8/10 üzeri direnç göster. İrade gücün güçleniyor.',\n    category: 'Resistance',\n    icon: 'arm-flex',\n    rarity: 'Epic',\n    criteria: { type: 'count', target: 20 },\n    healingPoints: 80,\n  },\n  \n  // Farkındalık Bilgesi 🧠\n  {\n    id: 'mindful_tracker',\n    title: 'Farkındalık Takipçisi',\n    description: '7 gün üst üste kompulsiyon kaydı tut. Kendini gözlemleme becerisini geliştiriyorsun.',\n    category: 'Mindfulness',\n    icon: 'brain',\n    rarity: 'Common',\n    criteria: { type: 'streak', target: 7 },\n    healingPoints: 30,\n  },\n  {\n    id: 'pattern_recognizer',\n    title: 'Örüntü Tanıyıcı',\n    description: '50 kompulsiyon kaydı oluştur. Tetikleyicilerini ve örüntülerini tanımaya başladın.',\n    category: 'Mindfulness',\n    icon: 'eye-check',\n    rarity: 'Rare',\n    criteria: { type: 'count', target: 50 },\n    healingPoints: 60,\n  },\n];\n\n// Micro-reward definitions\nconst MICRO_REWARDS: Record<MicroRewardTrigger, MicroReward> = {\n  voice_mood_checkin: {\n    points: 1,\n    message: '+1 ✨ Mood Check‑in',\n    trigger: 'voice_mood_checkin'\n  },\n  mood_manual_checkin: {\n    points: 1,\n    message: '+1 ✍️ Mood (manuel) kaydı',\n    trigger: 'mood_manual_checkin'\n  },\n  breathwork_completed: {\n    points: 2,\n    message: '+2 🌬️ Breathwork tamamlandı',\n    trigger: 'breathwork_completed'\n  },\n  first_activity_of_day: {\n    points: 3,\n    message: '+3 ☀️ Günün ilk aktivitesi',\n    trigger: 'first_activity_of_day'\n  },\n  streak_milestone_7: {\n    points: 10,\n    message: '+10 🔥 7 Günlük Streak!',\n    trigger: 'streak_milestone_7'\n  },\n  streak_milestone_21: {\n    points: 25,\n    message: '+25 🔥 21 Günlük Streak!',\n    trigger: 'streak_milestone_21'\n  },\n  multi_module_day_2: {\n    points: 3,\n    message: '+3 🧩 2 modülde aktif oldun',\n    trigger: 'multi_module_day_2'\n  },\n  multi_module_day_3: {\n    points: 5,\n    message: '+5 🧩 3 modülde aktif oldun',\n    trigger: 'multi_module_day_3'\n  },\n  weekly_consistency_5: {\n    points: 7,\n    message: '+7 📆 Haftada 5 gün aktif!',\n    trigger: 'weekly_consistency_5'\n  },\n};\n\ninterface GamificationState {\n  profile: UserGamificationProfile;\n  achievements: AchievementDefinition[];\n  lastMicroReward?: MicroReward;\n  lastPointsCalculation?: UnifiedPointsCalculation;\n  currentMissions: UnifiedMission[];\n  isLoading: boolean;\n  currentUserId?: string;\n  \n  // Actions\n  setUserId: (userId: string) => void;\n  initializeGamification: (userId?: string) => Promise<void>;\n  updateStreak: () => Promise<void>;\n  checkAchievements: (type: 'compulsion', data?: any) => Promise<AchievementDefinition[]>;\n  awardMicroReward: (trigger: MicroRewardTrigger, context?: any) => Promise<void>;\n  \n  // Unified Gamification\n  awardUnifiedPoints: (action: string, context?: any, moduleData?: any) => Promise<UnifiedPointsCalculation>;\n  generateUnifiedMissions: () => Promise<UnifiedMission[]>;\n  updateMissionProgress: (missionId: string, increment?: number) => Promise<boolean>;\n  getMissionsForToday: () => UnifiedMission[];\n  \n  getStreakInfo: () => StreakInfo;\n  saveProfile: () => Promise<void>;\n}\n\nexport const useGamificationStore = create<GamificationState>((set, get) => ({\n  profile: {\n    streakCurrent: 0,\n    streakBest: 0,\n    unlockedAchievements: [],\n    healingPointsToday: 0,\n    healingPointsTotal: 0,\n    streakLevel: 'seedling',\n    lastActivityDate: new Date().toISOString().split('T')[0],\n    // Runtime flags default\n    lastFirstActivityAwardDate: undefined,\n    streakMilestonesAwarded: [],\n    modulesActiveDate: undefined,\n    modulesActiveToday: [],\n    multiModuleDayAwarded: 0,\n    weekKey: undefined,\n    activeDaysThisWeek: 0,\n    weeklyConsistencyAwarded: false,\n  },\n  achievements: ACHIEVEMENTS,\n  lastMicroReward: undefined,\n  lastPointsCalculation: undefined,\n  currentMissions: [],\n  isLoading: true,\n  currentUserId: undefined,\n\n  setUserId: (userId: string) => {\n    set({ currentUserId: userId });\n  },\n\n  initializeGamification: async (userId?: string) => {\n    try {\n      const uid = userId || get().currentUserId;\n      if (!uid) {\n        console.warn('No userId provided for gamification initialization');\n        set({ isLoading: false });\n        return;\n      }\n\n      const storageKey = StorageKeys.GAMIFICATION(uid);\n      const stored = await AsyncStorage.getItem(storageKey);\n      if (stored) {\n        const profile = JSON.parse(stored);\n        // Check if streak should be reset (UTC-safe by date keys)\n        const today = new Date().toISOString().split('T')[0];\n        const lastKey = String(profile.lastActivityDate || today);\n        const daysDiff = (() => {\n          try {\n            const [y1,m1,d1] = lastKey.split('-').map((n: string) => parseInt(n, 10));\n            const now = new Date();\n            const y2 = now.getUTCFullYear();\n            const m2 = now.getUTCMonth()+1;\n            const d2 = now.getUTCDate();\n            const t1 = Date.UTC(y1, (m1-1), d1);\n            const t2 = Date.UTC(y2, (m2-1), d2);\n            return Math.floor((t2 - t1)/86400000);\n          } catch { return 0; }\n        })();\n        \n        if (daysDiff > 1) {\n          // Streak broken\n          profile.streakCurrent = 0;\n        }\n        \n        // Reset daily points if new day\n        if (profile.lastActivityDate !== today) {\n          profile.healingPointsToday = 0;\n          // Reset daily runtime flags\n          profile.modulesActiveDate = today;\n          profile.modulesActiveToday = [];\n          profile.multiModuleDayAwarded = 0;\n          profile.lastFirstActivityAwardDate = undefined;\n        }\n        \n        set({ profile, isLoading: false, currentUserId: uid });\n      } else {\n        set({ isLoading: false, currentUserId: uid });\n      }\n    } catch (error) {\n      console.error('Failed to load gamification profile:', error);\n      set({ isLoading: false });\n    }\n  },\n\n  updateStreak: async () => {\n    const { profile } = get();\n    const today = new Date().toISOString().split('T')[0];\n    \n    // If today is already recorded but streak hasn't started yet (fresh profile), start at 1\n    if (profile.lastActivityDate === today) {\n      if (profile.streakCurrent === 0) {\n        const updatedProfile = {\n          ...profile,\n          streakCurrent: 1,\n          streakBest: Math.max(1, profile.streakBest),\n          streakLevel: 'seedling' as const,\n          lastActivityDate: today,\n        };\n        set({ profile: updatedProfile });\n        await get().saveProfile();\n      }\n      // Already processed for today\n      return;\n    }\n    \n    const lastKey = String(profile.lastActivityDate || today);\n    const daysDiff = (() => {\n      try {\n        const [y1,m1,d1] = lastKey.split('-').map((n: string) => parseInt(n, 10));\n        const now = new Date();\n        const y2 = now.getUTCFullYear();\n        const m2 = now.getUTCMonth()+1;\n        const d2 = now.getUTCDate();\n        const t1 = Date.UTC(y1, (m1-1), d1);\n        const t2 = Date.UTC(y2, (m2-1), d2);\n        return Math.floor((t2 - t1)/86400000);\n      } catch { return 0; }\n    })();\n    \n    let newStreak = profile.streakCurrent;\n    \n    if (daysDiff === 1) {\n      // Continue streak\n      newStreak = profile.streakCurrent + 1;\n    } else if (daysDiff > 1) {\n      // Streak broken\n      newStreak = 1;\n    }\n    \n    // Update streak level\n    let streakLevel: 'seedling' | 'warrior' | 'master' = 'seedling';\n    if (newStreak >= 21) {\n      streakLevel = 'master';\n    } else if (newStreak >= 7) {\n      streakLevel = 'warrior';\n    }\n    \n    const updatedProfile: UserGamificationProfile = {\n      ...profile,\n      streakCurrent: newStreak,\n      streakBest: Math.max(newStreak, profile.streakBest),\n      streakLevel,\n      lastActivityDate: today,\n      healingPointsToday: 0, // Reset daily points\n    };\n    \n    set({ profile: updatedProfile });\n    await get().saveProfile();\n\n    // 🎯 Streak milestone micro-rewards (once per milestone)\n    try {\n      const { awardMicroReward } = get();\n      if (newStreak === 7) {\n        await awardMicroReward('streak_milestone_7');\n      } else if (newStreak === 21) {\n        await awardMicroReward('streak_milestone_21');\n      }\n    } catch (e) {\n      console.warn('⚠️ Streak milestone reward failed:', e);\n    }\n  },\n\n  checkAchievements: async (type: 'compulsion', data?: any) => {\n    const { profile, achievements } = get();\n    const newlyUnlocked: AchievementDefinition[] = [];\n    \n    for (const achievement of achievements) {\n      if (profile.unlockedAchievements.includes(achievement.id)) {\n        continue; // Already unlocked\n      }\n      \n      let shouldUnlock = false;\n      \n      switch (achievement.id) {\n        // compulsion-based achievements removed\n          \n        case 'mindful_tracker':\n          if (profile.streakCurrent >= 7) {\n            shouldUnlock = true;\n          }\n          break;\n          \n        // Add more achievement checks here\n      }\n      \n      if (shouldUnlock) {\n        achievement.unlockedAt = new Date();\n        newlyUnlocked.push(achievement);\n        profile.unlockedAchievements.push(achievement.id);\n        profile.healingPointsTotal += achievement.healingPoints;\n        \n        // Haptic feedback for achievement\n        await Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n      }\n    }\n    \n    if (newlyUnlocked.length > 0) {\n      set({ profile });\n      await get().saveProfile();\n    }\n    \n    return newlyUnlocked;\n  },\n\n  awardMicroReward: async (trigger: MicroRewardTrigger, context?: any) => {\n    const today = new Date().toISOString().split('T')[0];\n    const state = get();\n    let { profile } = state;\n\n    const reward = MICRO_REWARDS[trigger];\n    if (!reward) {\n      console.warn(`⚠️ Micro reward not found for trigger: ${trigger}`);\n      return;\n    }\n\n    // Reset daily module set if date changed\n    if (profile.modulesActiveDate !== today) {\n      profile = {\n        ...profile,\n        modulesActiveDate: today,\n        modulesActiveToday: [],\n        multiModuleDayAwarded: 0,\n      };\n    }\n\n    // Implicit first-activity-of-day bonus (before main reward)\n    if (trigger !== 'first_activity_of_day' && profile.lastFirstActivityAwardDate !== today) {\n      await state.awardMicroReward('first_activity_of_day');\n      profile = get().profile; // refresh local ref after mutation\n    }\n\n    // Track modules for multi-module bonuses\n    const trackModule = (mod: string) => {\n      const setMods = new Set(profile.modulesActiveToday || []);\n      setMods.add(mod);\n      profile = { ...profile, modulesActiveToday: Array.from(setMods), modulesActiveDate: today };\n      set({ profile });\n    };\n\n    if (trigger === 'voice_mood_checkin' || trigger === 'mood_manual_checkin') {\n      trackModule('mood');\n    } else if (trigger === 'breathwork_completed') {\n      trackModule('breathwork');\n    }\n\n    // Ensure streak increments for breathwork as daily mindful activity\n    if (trigger === 'breathwork_completed') {\n      try {\n        const { updateStreak } = get();\n        await updateStreak();\n      } catch {}\n    }\n\n    // Evaluate multi-module thresholds (only once per level)\n    const modsCount = profile.modulesActiveToday?.length || 0;\n    if (trigger !== 'multi_module_day_2' && trigger !== 'multi_module_day_3') {\n      if (modsCount >= 2 && (profile.multiModuleDayAwarded || 0) < 2) {\n        // award 2-modules bonus\n        await state.awardMicroReward('multi_module_day_2');\n        profile = { ...get().profile, multiModuleDayAwarded: 2 };\n        set({ profile });\n      }\n      if (modsCount >= 3 && (profile.multiModuleDayAwarded || 0) < 3) {\n        await state.awardMicroReward('multi_module_day_3');\n        profile = { ...get().profile, multiModuleDayAwarded: 3 };\n        set({ profile });\n      }\n    }\n\n    // Gating: first_activity_of_day only once per day\n    if (trigger === 'first_activity_of_day') {\n      if (profile.lastFirstActivityAwardDate === today) return; // already awarded today\n      // Weekly consistency tracking\n      const getISOWeek = (d: Date) => {\n        const date = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n        // Thursday in current week decides the year\n        date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay()||7));\n        const yearStart = new Date(Date.UTC(date.getUTCFullYear(),0,1));\n        const weekNo = Math.ceil((((date as any) - (yearStart as any)) / 86400000 + 1)/7);\n        return `${date.getUTCFullYear()}-W${String(weekNo).padStart(2,'0')}`;\n      };\n      const now = new Date();\n      const currentWeekKey = getISOWeek(now);\n      let activeDaysThisWeek = profile.activeDaysThisWeek || 0;\n      let weekKey = profile.weekKey;\n      let weeklyConsistencyAwarded = !!profile.weeklyConsistencyAwarded;\n      if (weekKey !== currentWeekKey) {\n        weekKey = currentWeekKey;\n        activeDaysThisWeek = 0;\n        weeklyConsistencyAwarded = false;\n      }\n      activeDaysThisWeek += 1;\n      profile = { \n        ...profile, \n        lastFirstActivityAwardDate: today,\n        weekKey,\n        activeDaysThisWeek,\n        weeklyConsistencyAwarded,\n      };\n      set({ profile });\n      // Weekly consistency bonus at 5 days (once per week)\n      if (activeDaysThisWeek >= 5 && !weeklyConsistencyAwarded) {\n        await state.awardMicroReward('weekly_consistency_5');\n        set({ profile: { ...get().profile, weeklyConsistencyAwarded: true } });\n      }\n    }\n\n    // Gating: streak milestones only once per milestone\n    if (trigger === 'streak_milestone_7' || trigger === 'streak_milestone_21') {\n      const milestone = trigger === 'streak_milestone_7' ? 7 : 21;\n      const awarded = new Set(profile.streakMilestonesAwarded || []);\n      if (awarded.has(milestone)) return; // already awarded\n      awarded.add(milestone);\n      profile = { ...profile, streakMilestonesAwarded: Array.from(awarded) };\n      set({ profile });\n    }\n\n    // Final award apply (with deterministic multipliers)\n    const isWeekend = [0, 6].includes(new Date().getDay());\n    const streakMult = 1 + Math.min(5, Math.floor((profile.streakCurrent || 0) / 7)) * 0.1; // +10% per 7 days, capped +50%\n    let difficultyMult = 1;\n    let durationBonus = 0;\n    if (trigger === 'breathwork_completed') {\n      const dur = Number(context?.durationMs || 0);\n      const minutes = Math.max(0, Math.round(dur / 60000));\n      // +1 puan her 5 dakikada bir (maks. +3)\n      durationBonus = Math.min(3, Math.floor(minutes / 5));\n      const diff = (context?.difficulty || '').toLowerCase();\n      if (diff === 'medium') difficultyMult = 1.2; else if (diff === 'hard') difficultyMult = 1.5; else difficultyMult = 1.0;\n    }\n    let computed = Math.round(reward.points * difficultyMult * streakMult) + durationBonus;\n    if (isWeekend) computed *= 2;\n    const updatedProfile = {\n      ...profile,\n      healingPointsToday: (profile.healingPointsToday || 0) + computed,\n      healingPointsTotal: (profile.healingPointsTotal || 0) + computed,\n    };\n\n    set({ \n      profile: updatedProfile,\n      lastMicroReward: {\n        ...reward,\n        points: computed,\n        message: (() => {\n          const details: string[] = [];\n          if (trigger === 'breathwork_completed') {\n            if (context?.durationMs) details.push(`${Math.round(context.durationMs/60000)}dk`);\n            if (difficultyMult > 1) details.push(`zorluk x${difficultyMult}`);\n          }\n          if (streakMult > 1) details.push(`streak x${streakMult.toFixed(1)}`);\n          const baseMsg = reward.message + (details.length ? ` (${details.join(', ')})` : '');\n          return isWeekend ? `${baseMsg} x2` : baseMsg;\n        })(),\n      }\n    });\n\n    await state.saveProfile();\n    await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n  },\n\n  getStreakInfo: () => {\n    const { profile } = get();\n    \n    const levelInfo = {\n      seedling: {\n        name: 'Fidan 🌱',\n        description: 'İlk adımların çok değerli.',\n        nextLevel: 7,\n        icon: 'sprout',\n      },\n      warrior: {\n        name: 'Savaşçı ⚔️',\n        description: 'Kararlılığınla beynine yeni yollar öğretiyorsun.',\n        nextLevel: 21,\n        icon: 'sword-cross',\n      },\n      master: {\n        name: 'Usta 🧘',\n        description: 'Bu artık bir alışkanlık. Zorluklarla başa çıkma becerinde ustalaşıyorsun.',\n        nextLevel: undefined,\n        icon: 'meditation',\n      },\n    };\n    \n    const currentLevel = levelInfo[profile.streakLevel];\n    \n    return {\n      current: profile.streakCurrent,\n      best: profile.streakBest,\n      level: profile.streakLevel,\n      levelName: currentLevel.name,\n      levelDescription: currentLevel.description,\n      nextLevelAt: currentLevel.nextLevel,\n      icon: currentLevel.icon,\n    };\n  },\n\n  saveProfile: async () => {\n    const { profile, currentUserId } = get();\n    if (!currentUserId) {\n      console.warn('No userId to save gamification profile.');\n      return;\n    }\n    try {\n      // Save to AsyncStorage (offline first)\n      const storageKey = StorageKeys.GAMIFICATION(currentUserId);\n      await AsyncStorage.setItem(storageKey, JSON.stringify(profile));\n\n      // Save to Supabase database\n      try {\n        await supabaseService.updateGamificationProfile(currentUserId, {\n          healing_points_total: profile.healingPointsTotal || 0,\n          healing_points_today: profile.healingPointsToday || 0,\n          streak_count: profile.streakCurrent || 0,\n          streak_last_update: new Date(profile.lastActivityDate || new Date()).toISOString().split('T')[0],\n          level: profile.streakLevel === 'seedling' ? 1 : profile.streakLevel === 'warrior' ? 2 : 3,\n          achievements: profile.unlockedAchievements || [],\n          micro_rewards: [],\n        });\n        console.log('✅ Gamification profile saved to database');\n      } catch (dbError) {\n        console.error('❌ Database save failed (offline mode):', dbError);\n        // Continue with offline mode - data is already in AsyncStorage\n      }\n    } catch (error) {\n      console.error('Failed to save gamification profile:', error);\n    }\n  },\n\n  // =============================================================================\n  // DYNAMIC GAMIFICATION METHODS (Week 2)\n  // =============================================================================\n\n  awardUnifiedPoints: async (action: string, context: any = {}, moduleData?: any) => {\n    const { currentUserId } = get();\n    if (!currentUserId) {\n      console.warn('No userId to award unified points.');\n      return { basePoints: 0, contextMultipliers: {}, totalPoints: 0, reasoning: ['No user ID'] } as any;\n    }\n\n    if (!FEATURE_FLAGS.isEnabled('AI_DYNAMIC_GAMIFICATION')) {\n      // Fall back to static micro reward system\n      const staticReward = MICRO_REWARDS[action as MicroRewardTrigger];\n      if (staticReward) {\n        await get().awardMicroReward(action as MicroRewardTrigger);\n        return {\n          basePoints: staticReward.points,\n          contextMultipliers: {\n            difficultyBonus: 1, streakMultiplier: 1, progressBonus: 1,\n            timingBonus: 1, consistencyBonus: 1, achievementMultiplier: 1,\n            honestyBonus: 1, improvementBonus: 1, detailBonus: 1\n          },\n          totalPoints: staticReward.points,\n          reasoning: [`Static reward: ${staticReward.points} points`],\n          breakdown: [{ reason: `Static ${action}`, points: staticReward.points }]\n        };\n      }\n      return { \n        basePoints: 0, \n        contextMultipliers: {\n          difficultyBonus: 1, streakMultiplier: 1, progressBonus: 1,\n          timingBonus: 1, consistencyBonus: 1, achievementMultiplier: 1,\n          honestyBonus: 1, improvementBonus: 1, detailBonus: 1\n        }, \n        totalPoints: 0, \n        reasoning: ['Feature disabled'],\n        breakdown: []\n      } as any;\n    }\n\n    try {\n      // const pointsCalculation = await unifiedGamificationService.awardUnifiedPoints(\n      //   currentUserId,\n      //   action,\n      //   context,\n      //   moduleData\n      // );\n      \n      // Fallback calculation since AI service is disabled\n      const pointsCalculation = { basePoints: 0, totalPoints: 0 } as any;\n\n      // Update local state with calculation\n      set({ lastPointsCalculation: pointsCalculation });\n\n      // Update profile with new points (service already updated storage)\n      const { profile } = get();\n      set({\n        profile: {\n          ...profile,\n          healingPointsToday: profile.healingPointsToday + pointsCalculation.totalPoints,\n          healingPointsTotal: profile.healingPointsTotal + pointsCalculation.totalPoints\n        }\n      });\n\n      // Haptic feedback based on points earned\n      if (pointsCalculation.totalPoints >= 50) {\n        await Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success);\n      } else {\n        await Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n      }\n\n      return pointsCalculation;\n    } catch (error) {\n      console.error('Unified points award failed:', error);\n      return { \n        basePoints: 0, \n        contextMultipliers: {\n          difficultyBonus: 1, streakMultiplier: 1, progressBonus: 1,\n          timingBonus: 1, consistencyBonus: 1, achievementMultiplier: 1,\n          honestyBonus: 1, improvementBonus: 1, detailBonus: 1\n        }, \n        totalPoints: 0, \n        reasoning: ['Error occurred'],\n        breakdown: []\n      } as any;\n    }\n  },\n\n  generateUnifiedMissions: async () => {\n    const { currentUserId } = get();\n    if (!currentUserId) {\n      console.warn('No userId to generate unified missions.');\n      return [];\n    }\n\n    if (!FEATURE_FLAGS.isEnabled('AI_DYNAMIC_MISSIONS')) {\n      return [];\n    }\n\n    try {\n      // const missions = await unifiedGamificationService.generateUnifiedMissions(currentUserId);\n      const missions = [] as any; // AI service disabled\n      \n      // Update local state with missions\n      set({ currentMissions: missions });\n\n      return missions;\n    } catch (error) {\n      console.error('Unified mission generation failed:', error);\n      return [];\n    }\n  },\n\n  updateMissionProgress: async () => {\n    // Missions system disabled (AI off) — return false as stub\n    console.warn('updateMissionProgress is disabled');\n    return false;\n  },\n\n  getMissionsForToday: () => {\n    // Missions system disabled — return empty list\n    return [] as UnifiedMission[];\n  },\n\n})); \n"],"mappings":"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","ignoreList":[]}