a643c023ea7c5a80b57db5a267579da9
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommonEventBuilder = void 0;
var _base = require("./base");
function touch() {
  return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
    nativeEvent: {
      changedTouches: [],
      identifier: 0,
      locationX: 0,
      locationY: 0,
      pageX: 0,
      pageY: 0,
      target: 0,
      timestamp: Date.now(),
      touches: []
    },
    currentTarget: {
      measure: function measure() {}
    }
  });
}
var CommonEventBuilder = exports.CommonEventBuilder = {
  touch: touch,
  responderGrant: function responderGrant() {
    return Object.assign({}, touch(), {
      dispatchConfig: {
        registrationName: 'onResponderGrant'
      }
    });
  },
  responderRelease: function responderRelease() {
    return Object.assign({}, touch(), {
      dispatchConfig: {
        registrationName: 'onResponderRelease'
      }
    });
  },
  focus: function focus() {
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        target: 0
      }
    });
  },
  blur: function blur() {
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        target: 0
      }
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYmFzZSIsInJlcXVpcmUiLCJ0b3VjaCIsIk9iamVjdCIsImFzc2lnbiIsImJhc2VTeW50aGV0aWNFdmVudCIsIm5hdGl2ZUV2ZW50IiwiY2hhbmdlZFRvdWNoZXMiLCJpZGVudGlmaWVyIiwibG9jYXRpb25YIiwibG9jYXRpb25ZIiwicGFnZVgiLCJwYWdlWSIsInRhcmdldCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJ0b3VjaGVzIiwiY3VycmVudFRhcmdldCIsIm1lYXN1cmUiLCJDb21tb25FdmVudEJ1aWxkZXIiLCJleHBvcnRzIiwicmVzcG9uZGVyR3JhbnQiLCJkaXNwYXRjaENvbmZpZyIsInJlZ2lzdHJhdGlvbk5hbWUiLCJyZXNwb25kZXJSZWxlYXNlIiwiZm9jdXMiLCJibHVyIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3VzZXItZXZlbnQvZXZlbnQtYnVpbGRlci9jb21tb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZVN5bnRoZXRpY0V2ZW50IH0gZnJvbSAnLi9iYXNlJztcblxuLyoqXG4gKiBFeHBlcmltZW50YWwgdmFsdWVzOlxuICogLSBpT1M6IGB7XCJjaGFuZ2VkVG91Y2hlc1wiOiBbW0NpcmN1bGFyXV0sIFwiaWRlbnRpZmllclwiOiAxLCBcImxvY2F0aW9uWFwiOiAyNTMsIFwibG9jYXRpb25ZXCI6IDMwLjMzMzMyODI0NzA3MDMxMiwgXCJwYWdlWFwiOiAyNzMsIFwicGFnZVlcIjogMTQxLjMzMzMyODI0NzA3MDMsIFwidGFyZ2V0XCI6IDc1LCBcInRpbWVzdGFtcFwiOiA4NzU5Mjg2ODIuMDQ1MDgzNCwgXCJ0b3VjaGVzXCI6IFtbQ2lyY3VsYXJdXX1gXG4gKiAtIEFuZHJvaWQ6IGB7XCJjaGFuZ2VkVG91Y2hlc1wiOiBbW0NpcmN1bGFyXV0sIFwiaWRlbnRpZmllclwiOiAwLCBcImxvY2F0aW9uWFwiOiAxNjAsIFwibG9jYXRpb25ZXCI6IDQwLjM2MzYzNjAxNjg0NTcsIFwicGFnZVhcIjogMTgwLCBcInBhZ2VZXCI6IDE0MC4zNjM2MzIyMDIxNDg0NCwgXCJ0YXJnZXRcIjogNTMsIFwidGFyZ2V0U3VyZmFjZVwiOiAtMSwgXCJ0aW1lc3RhbXBcIjogMTAyOTA4MDUsIFwidG91Y2hlc1wiOiBbW0NpcmN1bGFyXV19YFxuICovXG5mdW5jdGlvbiB0b3VjaCgpIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5iYXNlU3ludGhldGljRXZlbnQoKSxcbiAgICBuYXRpdmVFdmVudDoge1xuICAgICAgY2hhbmdlZFRvdWNoZXM6IFtdLFxuICAgICAgaWRlbnRpZmllcjogMCxcbiAgICAgIGxvY2F0aW9uWDogMCxcbiAgICAgIGxvY2F0aW9uWTogMCxcbiAgICAgIHBhZ2VYOiAwLFxuICAgICAgcGFnZVk6IDAsXG4gICAgICB0YXJnZXQ6IDAsXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXG4gICAgICB0b3VjaGVzOiBbXSxcbiAgICB9LFxuICAgIGN1cnJlbnRUYXJnZXQ6IHsgbWVhc3VyZTogKCkgPT4ge30gfSxcbiAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IENvbW1vbkV2ZW50QnVpbGRlciA9IHtcbiAgdG91Y2gsXG5cbiAgcmVzcG9uZGVyR3JhbnQ6ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4udG91Y2goKSxcbiAgICAgIGRpc3BhdGNoQ29uZmlnOiB7IHJlZ2lzdHJhdGlvbk5hbWU6ICdvblJlc3BvbmRlckdyYW50JyB9LFxuICAgIH07XG4gIH0sXG5cbiAgcmVzcG9uZGVyUmVsZWFzZTogKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAuLi50b3VjaCgpLFxuICAgICAgZGlzcGF0Y2hDb25maWc6IHsgcmVnaXN0cmF0aW9uTmFtZTogJ29uUmVzcG9uZGVyUmVsZWFzZScgfSxcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBFeHBlcmltZW50YWwgdmFsdWVzOlxuICAgKiAtIGlPUzogYHtcImV2ZW50Q291bnRcIjogMCwgXCJ0YXJnZXRcIjogNzUsIFwidGV4dFwiOiBcIlwifWBcbiAgICogLSBBbmRyb2lkOiBge1widGFyZ2V0XCI6IDUzfWBcbiAgICovXG4gIGZvY3VzOiAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmJhc2VTeW50aGV0aWNFdmVudCgpLFxuICAgICAgbmF0aXZlRXZlbnQ6IHtcbiAgICAgICAgdGFyZ2V0OiAwLFxuICAgICAgfSxcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBFeHBlcmltZW50YWwgdmFsdWVzOlxuICAgKiAtIGlPUzogYHtcImV2ZW50Q291bnRcIjogMCwgXCJ0YXJnZXRcIjogNzUsIFwidGV4dFwiOiBcIlwifWBcbiAgICogLSBBbmRyb2lkOiBge1widGFyZ2V0XCI6IDUzfWBcbiAgICovXG4gIGJsdXI6ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uYmFzZVN5bnRoZXRpY0V2ZW50KCksXG4gICAgICBuYXRpdmVFdmVudDoge1xuICAgICAgICB0YXJnZXQ6IDAsXG4gICAgICB9LFxuICAgIH07XG4gIH0sXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFPQSxTQUFTQyxLQUFLQSxDQUFBLEVBQUc7RUFDZixPQUFBQyxNQUFBLENBQUFDLE1BQUEsS0FDSyxJQUFBSixLQUFBLENBQUFLLGtCQUFrQixFQUFDLENBQUM7SUFDdkJDLFdBQVcsRUFBRTtNQUNYQyxjQUFjLEVBQUUsRUFBRTtNQUNsQkMsVUFBVSxFQUFFLENBQUM7TUFDYkMsU0FBUyxFQUFFLENBQUM7TUFDWkMsU0FBUyxFQUFFLENBQUM7TUFDWkMsS0FBSyxFQUFFLENBQUM7TUFDUkMsS0FBSyxFQUFFLENBQUM7TUFDUkMsTUFBTSxFQUFFLENBQUM7TUFDVEMsU0FBUyxFQUFFQyxJQUFJLENBQUNDLEdBQUcsQ0FBQyxDQUFDO01BQ3JCQyxPQUFPLEVBQUU7SUFDWCxDQUFDO0lBQ0RDLGFBQWEsRUFBRTtNQUFFQyxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBQSxFQUFRLENBQUM7SUFBRTtFQUFBO0FBRXZDO0FBRU8sSUFBTUMsa0JBQWtCLEdBQUFDLE9BQUEsQ0FBQUQsa0JBQUEsR0FBRztFQUNoQ2xCLEtBQUssRUFBTEEsS0FBSztFQUVMb0IsY0FBYyxFQUFFLFNBQWhCQSxjQUFjQSxDQUFBLEVBQVE7SUFDcEIsT0FBQW5CLE1BQUEsQ0FBQUMsTUFBQSxLQUNLRixLQUFLLENBQUMsQ0FBQztNQUNWcUIsY0FBYyxFQUFFO1FBQUVDLGdCQUFnQixFQUFFO01BQW1CO0lBQUE7RUFFM0QsQ0FBQztFQUVEQyxnQkFBZ0IsRUFBRSxTQUFsQkEsZ0JBQWdCQSxDQUFBLEVBQVE7SUFDdEIsT0FBQXRCLE1BQUEsQ0FBQUMsTUFBQSxLQUNLRixLQUFLLENBQUMsQ0FBQztNQUNWcUIsY0FBYyxFQUFFO1FBQUVDLGdCQUFnQixFQUFFO01BQXFCO0lBQUE7RUFFN0QsQ0FBQztFQU9ERSxLQUFLLEVBQUUsU0FBUEEsS0FBS0EsQ0FBQSxFQUFRO0lBQ1gsT0FBQXZCLE1BQUEsQ0FBQUMsTUFBQSxLQUNLLElBQUFKLEtBQUEsQ0FBQUssa0JBQWtCLEVBQUMsQ0FBQztNQUN2QkMsV0FBVyxFQUFFO1FBQ1hPLE1BQU0sRUFBRTtNQUNWO0lBQUE7RUFFSixDQUFDO0VBT0RjLElBQUksRUFBRSxTQUFOQSxJQUFJQSxDQUFBLEVBQVE7SUFDVixPQUFBeEIsTUFBQSxDQUFBQyxNQUFBLEtBQ0ssSUFBQUosS0FBQSxDQUFBSyxrQkFBa0IsRUFBQyxDQUFDO01BQ3ZCQyxXQUFXLEVBQUU7UUFDWE8sTUFBTSxFQUFFO01BQ1Y7SUFBQTtFQUVKO0FBQ0YsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==