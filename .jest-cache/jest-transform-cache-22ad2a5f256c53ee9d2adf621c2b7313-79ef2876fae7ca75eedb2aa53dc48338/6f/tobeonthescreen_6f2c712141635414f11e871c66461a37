8e4c8c3f2e8f04a116442afa568ed01e
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toBeOnTheScreen = toBeOnTheScreen;
var _jestMatcherUtils = require("jest-matcher-utils");
var _redent = _interopRequireDefault(require("redent"));
var _componentTree = require("../helpers/component-tree");
var _formatElement = require("../helpers/format-element");
var _screen = require("../screen");
var _utils = require("./utils");
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function toBeOnTheScreen(element) {
  var _this = this;
  if (element !== null || !this.isNot) {
    (0, _utils.checkHostElement)(element, toBeOnTheScreen, this);
  }
  var pass = element === null ? false : _screen.screen.UNSAFE_root === (0, _componentTree.getUnsafeRootElement)(element);
  var errorFound = function errorFound() {
    return `expected element tree not to contain element, but found\n${(0, _redent.default)((0, _formatElement.formatElement)(element), 2)}`;
  };
  var errorNotFound = function errorNotFound() {
    return `element could not be found in the element tree`;
  };
  return {
    pass: pass,
    message: function message() {
      return [(0, _jestMatcherUtils.matcherHint)(`${_this.isNot ? '.not' : ''}.toBeOnTheScreen`, 'element', ''), '', (0, _jestMatcherUtils.RECEIVED_COLOR)(_this.isNot ? errorFound() : errorNotFound())].join('\n');
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdE1hdGNoZXJVdGlscyIsInJlcXVpcmUiLCJfcmVkZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9jb21wb25lbnRUcmVlIiwiX2Zvcm1hdEVsZW1lbnQiLCJfc2NyZWVuIiwiX3V0aWxzIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidG9CZU9uVGhlU2NyZWVuIiwiZWxlbWVudCIsIl90aGlzIiwiaXNOb3QiLCJjaGVja0hvc3RFbGVtZW50IiwicGFzcyIsInNjcmVlbiIsIlVOU0FGRV9yb290IiwiZ2V0VW5zYWZlUm9vdEVsZW1lbnQiLCJlcnJvckZvdW5kIiwiZm9ybWF0RWxlbWVudCIsImVycm9yTm90Rm91bmQiLCJtZXNzYWdlIiwibWF0Y2hlckhpbnQiLCJSRUNFSVZFRF9DT0xPUiIsImpvaW4iXSwic291cmNlcyI6WyIuLi8uLi9zcmMvbWF0Y2hlcnMvdG8tYmUtb24tdGhlLXNjcmVlbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFJlYWN0VGVzdEluc3RhbmNlIH0gZnJvbSAncmVhY3QtdGVzdC1yZW5kZXJlcic7XG5pbXBvcnQgeyBtYXRjaGVySGludCwgUkVDRUlWRURfQ09MT1IgfSBmcm9tICdqZXN0LW1hdGNoZXItdXRpbHMnO1xuaW1wb3J0IHJlZGVudCBmcm9tICdyZWRlbnQnO1xuXG5pbXBvcnQgeyBnZXRVbnNhZmVSb290RWxlbWVudCB9IGZyb20gJy4uL2hlbHBlcnMvY29tcG9uZW50LXRyZWUnO1xuaW1wb3J0IHsgZm9ybWF0RWxlbWVudCB9IGZyb20gJy4uL2hlbHBlcnMvZm9ybWF0LWVsZW1lbnQnO1xuaW1wb3J0IHsgc2NyZWVuIH0gZnJvbSAnLi4vc2NyZWVuJztcbmltcG9ydCB7IGNoZWNrSG9zdEVsZW1lbnQgfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHRvQmVPblRoZVNjcmVlbih0aGlzOiBqZXN0Lk1hdGNoZXJDb250ZXh0LCBlbGVtZW50OiBSZWFjdFRlc3RJbnN0YW5jZSkge1xuICBpZiAoZWxlbWVudCAhPT0gbnVsbCB8fCAhdGhpcy5pc05vdCkge1xuICAgIGNoZWNrSG9zdEVsZW1lbnQoZWxlbWVudCwgdG9CZU9uVGhlU2NyZWVuLCB0aGlzKTtcbiAgfVxuXG4gIGNvbnN0IHBhc3MgPSBlbGVtZW50ID09PSBudWxsID8gZmFsc2UgOiBzY3JlZW4uVU5TQUZFX3Jvb3QgPT09IGdldFVuc2FmZVJvb3RFbGVtZW50KGVsZW1lbnQpO1xuXG4gIGNvbnN0IGVycm9yRm91bmQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIGBleHBlY3RlZCBlbGVtZW50IHRyZWUgbm90IHRvIGNvbnRhaW4gZWxlbWVudCwgYnV0IGZvdW5kXFxuJHtyZWRlbnQoXG4gICAgICBmb3JtYXRFbGVtZW50KGVsZW1lbnQpLFxuICAgICAgMixcbiAgICApfWA7XG4gIH07XG5cbiAgY29uc3QgZXJyb3JOb3RGb3VuZCA9ICgpID0+IHtcbiAgICByZXR1cm4gYGVsZW1lbnQgY291bGQgbm90IGJlIGZvdW5kIGluIHRoZSBlbGVtZW50IHRyZWVgO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgcGFzcyxcbiAgICBtZXNzYWdlOiAoKSA9PiB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICBtYXRjaGVySGludChgJHt0aGlzLmlzTm90ID8gJy5ub3QnIDogJyd9LnRvQmVPblRoZVNjcmVlbmAsICdlbGVtZW50JywgJycpLFxuICAgICAgICAnJyxcbiAgICAgICAgUkVDRUlWRURfQ09MT1IodGhpcy5pc05vdCA/IGVycm9yRm91bmQoKSA6IGVycm9yTm90Rm91bmQoKSksXG4gICAgICBdLmpvaW4oJ1xcbicpO1xuICAgIH0sXG4gIH07XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLElBQUFBLGlCQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxPQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFFQSxJQUFBRyxjQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxjQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxPQUFBLEdBQUFMLE9BQUE7QUFDQSxJQUFBTSxNQUFBLEdBQUFOLE9BQUE7QUFBMkMsU0FBQUUsdUJBQUFLLENBQUE7RUFBQSxPQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxHQUFBRCxDQUFBO0lBQUFFLE9BQUEsRUFBQUY7RUFBQTtBQUFBO0FBRXBDLFNBQVNHLGVBQWVBLENBQTRCQyxPQUEwQixFQUFFO0VBQUEsSUFBQUMsS0FBQTtFQUNyRixJQUFJRCxPQUFPLEtBQUssSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDRSxLQUFLLEVBQUU7SUFDbkMsSUFBQVAsTUFBQSxDQUFBUSxnQkFBZ0IsRUFBQ0gsT0FBTyxFQUFFRCxlQUFlLEVBQUUsSUFBSSxDQUFDO0VBQ2xEO0VBRUEsSUFBTUssSUFBSSxHQUFHSixPQUFPLEtBQUssSUFBSSxHQUFHLEtBQUssR0FBR04sT0FBQSxDQUFBVyxNQUFNLENBQUNDLFdBQVcsS0FBSyxJQUFBZCxjQUFBLENBQUFlLG9CQUFvQixFQUFDUCxPQUFPLENBQUM7RUFFNUYsSUFBTVEsVUFBVSxHQUFHLFNBQWJBLFVBQVVBLENBQUEsRUFBUztJQUN2QixPQUFPLDREQUE0RCxJQUFBbEIsT0FBQSxDQUFBUSxPQUFNLEVBQ3ZFLElBQUFMLGNBQUEsQ0FBQWdCLGFBQWEsRUFBQ1QsT0FBTyxDQUFDLEVBQ3RCLENBQ0YsQ0FBQyxFQUFFO0VBQ0wsQ0FBQztFQUVELElBQU1VLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBQSxFQUFTO0lBQzFCLE9BQU8sZ0RBQWdEO0VBQ3pELENBQUM7RUFFRCxPQUFPO0lBQ0xOLElBQUksRUFBSkEsSUFBSTtJQUNKTyxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBQSxFQUFRO01BQ2IsT0FBTyxDQUNMLElBQUF2QixpQkFBQSxDQUFBd0IsV0FBVyxFQUFDLEdBQUdYLEtBQUksQ0FBQ0MsS0FBSyxHQUFHLE1BQU0sR0FBRyxFQUFFLGtCQUFrQixFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFDekUsRUFBRSxFQUNGLElBQUFkLGlCQUFBLENBQUF5QixjQUFjLEVBQUNaLEtBQUksQ0FBQ0MsS0FBSyxHQUFHTSxVQUFVLENBQUMsQ0FBQyxHQUFHRSxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQzVELENBQUNJLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDZDtFQUNGLENBQUM7QUFDSCIsImlnbm9yZUxpc3QiOltdfQ==