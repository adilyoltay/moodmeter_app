{"version":3,"names":["_getJestObj","mock","RN","jest","requireActual","Object","assign","InteractionManager","runAfterInteractions","cb","cancel","_require","require","createSupabaseTestClient","client","__esModule","default","supabaseClient","_interopRequireDefault","_asyncToGenerator2","_require4","_require2","unifiedPipeline","_require3","userId","process","env","TEST_SEED_USER_ID","supabase","cleanup","_cleanup","apply","arguments","from","delete","eq","describe","beforeAll","TEST_MODE","TEST_TTL_MS","TEST_PIPELINE_STUB","EXPO_PUBLIC_ENABLE_AI","afterAll","it","moods","Array","length","_","i","timestamp","Date","now","mood_score","type","content","context","source","_yield$supabase$from$","select","data","error","expect","toBeNull","events","map","r","String","event_type","some","e","includes","toBe"],"sources":["LiveTelemetrySupabase.spec.ts"],"sourcesContent":["/**\n * Live Supabase Tests â€” Telemetry (QRlive)\n * Tags: [QRlive:telemetry:started] [QRlive:telemetry:completed]\n */\njest.mock('react-native', () => {\n  const RN = jest.requireActual('react-native');\n  return {\n    ...RN,\n    InteractionManager: {\n      runAfterInteractions: (cb: any) => { if (typeof cb === 'function') cb(); return { cancel: () => {} }; },\n    },\n  };\n});\n\njest.mock('@/services/supabase', () => {\n  const { createSupabaseTestClient } = require('./utils/supabaseTestClient');\n  const client = createSupabaseTestClient();\n  return {\n    __esModule: true,\n    default: { supabaseClient: client },\n    supabaseClient: client,\n  };\n});\n\nconst { unifiedPipeline } = require('@/features/ai/core/UnifiedAIPipeline');\nconst { createSupabaseTestClient } = require('./utils/supabaseTestClient');\n\nconst userId = process.env.TEST_SEED_USER_ID || 'test-user-live-1';\nconst supabase = createSupabaseTestClient();\n\nasync function cleanup() {\n  await supabase.from('ai_telemetry').delete().eq('user_id', userId);\n}\n\ndescribe('Live Telemetry Supabase', () => {\n  beforeAll(async () => {\n    process.env.TEST_MODE = '1';\n    process.env.TEST_TTL_MS = '5000';\n    process.env.TEST_PIPELINE_STUB = '0';\n    process.env.EXPO_PUBLIC_ENABLE_AI = 'true';\n    await cleanup();\n  });\n\n  afterAll(async () => {\n    await cleanup();\n  });\n\n  it('[QRlive:telemetry:started] and [QRlive:telemetry:completed] are recorded', async () => {\n    const moods = Array.from({ length: 6 }, (_, i) => ({ timestamp: Date.now() - i * 900e3, mood_score: 6 }));\n    await unifiedPipeline.process({ userId, type: 'data', content: { moods }, context: { source: 'mood' } });\n\n    const { data, error } = await supabase\n      .from('ai_telemetry')\n      .select('event_type')\n      .eq('user_id', userId);\n    expect(error).toBeNull();\n    const events = (data || []).map(r => String(r.event_type));\n    expect(events.some(e => e.includes('unified_pipeline_started'))).toBe(true);\n    expect(events.some(e => e.includes('unified_pipeline_completed'))).toBe(true);\n  });\n});\n\n\n"],"mappings":"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","ignoreList":[]}