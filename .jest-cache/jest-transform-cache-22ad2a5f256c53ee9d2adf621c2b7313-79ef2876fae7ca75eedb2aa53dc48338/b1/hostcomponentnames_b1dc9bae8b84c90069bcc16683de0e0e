268bf77431b26672a8532c847d2845ca
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isHostImage = isHostImage;
exports.isHostModal = isHostModal;
exports.isHostScrollView = isHostScrollView;
exports.isHostSwitch = isHostSwitch;
exports.isHostText = isHostText;
exports.isHostTextInput = isHostTextInput;
var HOST_TEXT_NAMES = ['Text', 'RCTText'];
var HOST_TEXT_INPUT_NAMES = ['TextInput'];
var HOST_IMAGE_NAMES = ['Image'];
var HOST_SWITCH_NAMES = ['RCTSwitch'];
var HOST_SCROLL_VIEW_NAMES = ['RCTScrollView'];
var HOST_MODAL_NAMES = ['Modal'];
function isHostText(element) {
  return typeof (element == null ? void 0 : element.type) === 'string' && HOST_TEXT_NAMES.includes(element.type);
}
function isHostTextInput(element) {
  return typeof (element == null ? void 0 : element.type) === 'string' && HOST_TEXT_INPUT_NAMES.includes(element.type);
}
function isHostImage(element) {
  return typeof (element == null ? void 0 : element.type) === 'string' && HOST_IMAGE_NAMES.includes(element.type);
}
function isHostSwitch(element) {
  return typeof (element == null ? void 0 : element.type) === 'string' && HOST_SWITCH_NAMES.includes(element.type);
}
function isHostScrollView(element) {
  return typeof (element == null ? void 0 : element.type) === 'string' && HOST_SCROLL_VIEW_NAMES.includes(element.type);
}
function isHostModal(element) {
  return typeof (element == null ? void 0 : element.type) === 'string' && HOST_MODAL_NAMES.includes(element.type);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJIT1NUX1RFWFRfTkFNRVMiLCJIT1NUX1RFWFRfSU5QVVRfTkFNRVMiLCJIT1NUX0lNQUdFX05BTUVTIiwiSE9TVF9TV0lUQ0hfTkFNRVMiLCJIT1NUX1NDUk9MTF9WSUVXX05BTUVTIiwiSE9TVF9NT0RBTF9OQU1FUyIsImlzSG9zdFRleHQiLCJlbGVtZW50IiwidHlwZSIsImluY2x1ZGVzIiwiaXNIb3N0VGV4dElucHV0IiwiaXNIb3N0SW1hZ2UiLCJpc0hvc3RTd2l0Y2giLCJpc0hvc3RTY3JvbGxWaWV3IiwiaXNIb3N0TW9kYWwiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvaGVscGVycy9ob3N0LWNvbXBvbmVudC1uYW1lcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFJlYWN0VGVzdEluc3RhbmNlIH0gZnJvbSAncmVhY3QtdGVzdC1yZW5kZXJlcic7XG5cbmltcG9ydCB0eXBlIHsgSG9zdFRlc3RJbnN0YW5jZSB9IGZyb20gJy4vY29tcG9uZW50LXRyZWUnO1xuXG5jb25zdCBIT1NUX1RFWFRfTkFNRVMgPSBbJ1RleHQnLCAnUkNUVGV4dCddO1xuY29uc3QgSE9TVF9URVhUX0lOUFVUX05BTUVTID0gWydUZXh0SW5wdXQnXTtcbmNvbnN0IEhPU1RfSU1BR0VfTkFNRVMgPSBbJ0ltYWdlJ107XG5jb25zdCBIT1NUX1NXSVRDSF9OQU1FUyA9IFsnUkNUU3dpdGNoJ107XG5jb25zdCBIT1NUX1NDUk9MTF9WSUVXX05BTUVTID0gWydSQ1RTY3JvbGxWaWV3J107XG5jb25zdCBIT1NUX01PREFMX05BTUVTID0gWydNb2RhbCddO1xuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZ2l2ZW4gZWxlbWVudCBpcyBhIGhvc3QgVGV4dCBlbGVtZW50LlxuICogQHBhcmFtIGVsZW1lbnQgVGhlIGVsZW1lbnQgdG8gY2hlY2suXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0hvc3RUZXh0KGVsZW1lbnQ6IFJlYWN0VGVzdEluc3RhbmNlKTogZWxlbWVudCBpcyBIb3N0VGVzdEluc3RhbmNlIHtcbiAgcmV0dXJuIHR5cGVvZiBlbGVtZW50Py50eXBlID09PSAnc3RyaW5nJyAmJiBIT1NUX1RFWFRfTkFNRVMuaW5jbHVkZXMoZWxlbWVudC50eXBlKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIGVsZW1lbnQgaXMgYSBob3N0IFRleHRJbnB1dCBlbGVtZW50LlxuICogQHBhcmFtIGVsZW1lbnQgVGhlIGVsZW1lbnQgdG8gY2hlY2suXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0hvc3RUZXh0SW5wdXQoZWxlbWVudDogUmVhY3RUZXN0SW5zdGFuY2UpOiBlbGVtZW50IGlzIEhvc3RUZXN0SW5zdGFuY2Uge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQ/LnR5cGUgPT09ICdzdHJpbmcnICYmIEhPU1RfVEVYVF9JTlBVVF9OQU1FUy5pbmNsdWRlcyhlbGVtZW50LnR5cGUpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZ2l2ZW4gZWxlbWVudCBpcyBhIGhvc3QgSW1hZ2UgZWxlbWVudC5cbiAqIEBwYXJhbSBlbGVtZW50IFRoZSBlbGVtZW50IHRvIGNoZWNrLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNIb3N0SW1hZ2UoZWxlbWVudDogUmVhY3RUZXN0SW5zdGFuY2UpOiBlbGVtZW50IGlzIEhvc3RUZXN0SW5zdGFuY2Uge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQ/LnR5cGUgPT09ICdzdHJpbmcnICYmIEhPU1RfSU1BR0VfTkFNRVMuaW5jbHVkZXMoZWxlbWVudC50eXBlKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIGVsZW1lbnQgaXMgYSBob3N0IFN3aXRjaCBlbGVtZW50LlxuICogQHBhcmFtIGVsZW1lbnQgVGhlIGVsZW1lbnQgdG8gY2hlY2suXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0hvc3RTd2l0Y2goZWxlbWVudDogUmVhY3RUZXN0SW5zdGFuY2UpOiBlbGVtZW50IGlzIEhvc3RUZXN0SW5zdGFuY2Uge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQ/LnR5cGUgPT09ICdzdHJpbmcnICYmIEhPU1RfU1dJVENIX05BTUVTLmluY2x1ZGVzKGVsZW1lbnQudHlwZSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBlbGVtZW50IGlzIGEgaG9zdCBTY3JvbGxWaWV3IGVsZW1lbnQuXG4gKiBAcGFyYW0gZWxlbWVudCBUaGUgZWxlbWVudCB0byBjaGVjay5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzSG9zdFNjcm9sbFZpZXcoZWxlbWVudDogUmVhY3RUZXN0SW5zdGFuY2UpOiBlbGVtZW50IGlzIEhvc3RUZXN0SW5zdGFuY2Uge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQ/LnR5cGUgPT09ICdzdHJpbmcnICYmIEhPU1RfU0NST0xMX1ZJRVdfTkFNRVMuaW5jbHVkZXMoZWxlbWVudC50eXBlKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIGVsZW1lbnQgaXMgYSBob3N0IE1vZGFsIGVsZW1lbnQuXG4gKiBAcGFyYW0gZWxlbWVudCBUaGUgZWxlbWVudCB0byBjaGVjay5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzSG9zdE1vZGFsKGVsZW1lbnQ6IFJlYWN0VGVzdEluc3RhbmNlKTogZWxlbWVudCBpcyBIb3N0VGVzdEluc3RhbmNlIHtcbiAgcmV0dXJuIHR5cGVvZiBlbGVtZW50Py50eXBlID09PSAnc3RyaW5nJyAmJiBIT1NUX01PREFMX05BTUVTLmluY2x1ZGVzKGVsZW1lbnQudHlwZSk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBSUEsSUFBTUEsZUFBZSxHQUFHLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQztBQUMzQyxJQUFNQyxxQkFBcUIsR0FBRyxDQUFDLFdBQVcsQ0FBQztBQUMzQyxJQUFNQyxnQkFBZ0IsR0FBRyxDQUFDLE9BQU8sQ0FBQztBQUNsQyxJQUFNQyxpQkFBaUIsR0FBRyxDQUFDLFdBQVcsQ0FBQztBQUN2QyxJQUFNQyxzQkFBc0IsR0FBRyxDQUFDLGVBQWUsQ0FBQztBQUNoRCxJQUFNQyxnQkFBZ0IsR0FBRyxDQUFDLE9BQU8sQ0FBQztBQU0zQixTQUFTQyxVQUFVQSxDQUFDQyxPQUEwQixFQUErQjtFQUNsRixPQUFPLFFBQU9BLE9BQU8sb0JBQVBBLE9BQU8sQ0FBRUMsSUFBSSxNQUFLLFFBQVEsSUFBSVIsZUFBZSxDQUFDUyxRQUFRLENBQUNGLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDO0FBQ3BGO0FBTU8sU0FBU0UsZUFBZUEsQ0FBQ0gsT0FBMEIsRUFBK0I7RUFDdkYsT0FBTyxRQUFPQSxPQUFPLG9CQUFQQSxPQUFPLENBQUVDLElBQUksTUFBSyxRQUFRLElBQUlQLHFCQUFxQixDQUFDUSxRQUFRLENBQUNGLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDO0FBQzFGO0FBTU8sU0FBU0csV0FBV0EsQ0FBQ0osT0FBMEIsRUFBK0I7RUFDbkYsT0FBTyxRQUFPQSxPQUFPLG9CQUFQQSxPQUFPLENBQUVDLElBQUksTUFBSyxRQUFRLElBQUlOLGdCQUFnQixDQUFDTyxRQUFRLENBQUNGLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDO0FBQ3JGO0FBTU8sU0FBU0ksWUFBWUEsQ0FBQ0wsT0FBMEIsRUFBK0I7RUFDcEYsT0FBTyxRQUFPQSxPQUFPLG9CQUFQQSxPQUFPLENBQUVDLElBQUksTUFBSyxRQUFRLElBQUlMLGlCQUFpQixDQUFDTSxRQUFRLENBQUNGLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDO0FBQ3RGO0FBTU8sU0FBU0ssZ0JBQWdCQSxDQUFDTixPQUEwQixFQUErQjtFQUN4RixPQUFPLFFBQU9BLE9BQU8sb0JBQVBBLE9BQU8sQ0FBRUMsSUFBSSxNQUFLLFFBQVEsSUFBSUosc0JBQXNCLENBQUNLLFFBQVEsQ0FBQ0YsT0FBTyxDQUFDQyxJQUFJLENBQUM7QUFDM0Y7QUFNTyxTQUFTTSxXQUFXQSxDQUFDUCxPQUEwQixFQUErQjtFQUNuRixPQUFPLFFBQU9BLE9BQU8sb0JBQVBBLE9BQU8sQ0FBRUMsSUFBSSxNQUFLLFFBQVEsSUFBSUgsZ0JBQWdCLENBQUNJLFFBQVEsQ0FBQ0YsT0FBTyxDQUFDQyxJQUFJLENBQUM7QUFDckYiLCJpZ25vcmVMaXN0IjpbXX0=