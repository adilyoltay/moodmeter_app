{"version":3,"names":["_getJestObj","mock","__esModule","default","supabaseClient","from","jest","fn","select","eq","maybeSingle","_asyncToGenerator2","data","error","upsert","delete","like","actual","requireActual","Object","assign","trackAIInteraction","_interopRequireDefault","require","_asyncStorage","_UnifiedAIPipeline","_seedData","_require","actualTelemetry","AIEventType","describe","userId","TEST_ENV","SEED_USER_ID","beforeAll","process","env","TEST_MODE","TEST_TTL_MS","TEST_PIPELINE_STUB","TEST_SEED_USER_ID","EXPO_PUBLIC_ENABLE_AI","beforeEach","clearAllMocks","AsyncStorage","clear","it","now","Date","compulsions","Array","length","_","i","id","user_id","type","intensity","duration_minutes","resistance_level","timestamp","toISOString","res","unifiedPipeline","content","context","source","expect","metadata","toBe","second"],"sources":["SystemOCDPipeline.spec.tsx"],"sourcesContent":["/**\n * ðŸ§ª System-Mode Tests â€” OCD (Real UnifiedAIPipeline)\n *\n * Verifies OCD path using compulsion-like data to exercise pattern recognition.\n * Tags: [QRsys:ocd:fresh|cache|hidden]\n */\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { unifiedPipeline } from '@/features/ai/core/UnifiedAIPipeline';\n\nconst actualTelemetry = jest.requireActual('@/features/ai/telemetry/aiTelemetry');\nimport type { AIEventType as AIEventTypeType } from '@/features/ai/telemetry/aiTelemetry';\nconst AIEventType: typeof actualTelemetry.AIEventType = actualTelemetry.AIEventType;\n\nimport { TEST_ENV } from '../fixtures/seedData';\n\njest.mock('@/services/supabase', () => ({\n  __esModule: true,\n  default: {\n    supabaseClient: {\n      from: jest.fn(() => ({\n        select: jest.fn(() => ({ eq: jest.fn(() => ({ maybeSingle: jest.fn(async () => ({ data: null, error: null })) })) })),\n        upsert: jest.fn(async () => ({ data: null, error: null })),\n        delete: jest.fn(() => ({ eq: jest.fn(async () => ({ data: null, error: null })) })),\n        like: jest.fn(() => ({ delete: jest.fn(() => ({ eq: jest.fn(async () => ({ data: null, error: null })) })) })),\n        eq: jest.fn(() => ({ maybeSingle: jest.fn(async () => ({ data: null, error: null })) })),\n      }))\n    }\n  }\n}));\n\njest.mock('@/features/ai/telemetry/aiTelemetry', () => {\n  const actual = jest.requireActual('@/features/ai/telemetry/aiTelemetry');\n  return {\n    __esModule: true,\n    ...actual,\n    trackAIInteraction: jest.fn(async () => {}),\n  };\n});\n\ndescribe('System OCD - Unified Pipeline', () => {\n  const userId = TEST_ENV.SEED_USER_ID;\n\n  beforeAll(() => {\n    process.env.TEST_MODE = '1';\n    process.env.TEST_TTL_MS = '5000';\n    process.env.TEST_PIPELINE_STUB = '0';\n    process.env.TEST_SEED_USER_ID = userId;\n    process.env.EXPO_PUBLIC_ENABLE_AI = 'true';\n  });\n\n  beforeEach(async () => {\n    jest.clearAllMocks();\n    await (AsyncStorage as any).clear();\n  });\n\n  it('[QRsys:ocd:fresh] processes fresh with compulsion-like OCD data', async () => {\n    const now = Date.now();\n    // Minimal compulsion-like dataset for OCD\n    const compulsions = Array.from({ length: 8 }, (_, i) => ({\n      id: `ocd_${userId}_${i}`,\n      user_id: userId,\n      type: i % 2 === 0 ? 'washing' : 'checking',\n      intensity: 6,\n      duration_minutes: 15,\n      resistance_level: 3,\n      timestamp: new Date(now - i * 6 * 60 * 60 * 1000).toISOString(),\n    }));\n\n    const res = await unifiedPipeline.process({ userId, type: 'data', content: { compulsions }, context: { source: 'tracking' } });\n    expect(res.metadata.source).toBe('fresh');\n  });\n\n  it('[QRsys:ocd:cache] returns cached result on repeat', async () => {\n    const now = Date.now();\n    const compulsions = Array.from({ length: 5 }, (_, i) => ({\n      id: `ocd_${userId}_med_${i}`,\n      user_id: userId,\n      type: 'checking',\n      intensity: 5,\n      duration_minutes: 10,\n      resistance_level: 2,\n      timestamp: new Date(now - i * 12 * 60 * 60 * 1000).toISOString(),\n    }));\n\n    await unifiedPipeline.process({ userId, type: 'data', content: { compulsions }, context: { source: 'tracking' } });\n    const second = await unifiedPipeline.process({ userId, type: 'data', content: { compulsions }, context: { source: 'tracking' } });\n    expect(second.metadata.source).toBe('cache');\n  });\n\n  it('[QRsys:ocd:hidden] has no qualityMetadata (UI hides)', async () => {\n    const res = await unifiedPipeline.process({ userId, type: 'data', content: {}, context: { source: 'tracking' } });\n    expect('qualityMetadata' in (res as any)).toBe(false);\n  });\n});\n\n"],"mappings":"AAgBAA,WAAA,GAAKC,IAAI,4BAAwB;EAAA,OAAO;IACtCC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,cAAc,EAAE;QACdC,IAAI,EAAEC,IAAI,CAACC,EAAE,CAAC;UAAA,OAAO;YACnBC,MAAM,EAAEF,IAAI,CAACC,EAAE,CAAC;cAAA,OAAO;gBAAEE,EAAE,EAAEH,IAAI,CAACC,EAAE,CAAC;kBAAA,OAAO;oBAAEG,WAAW,EAAEJ,IAAI,CAACC,EAAE,KAAAI,kBAAA,CAAAR,OAAA,EAAC;sBAAA,OAAa;wBAAES,IAAI,EAAE,IAAI;wBAAEC,KAAK,EAAE;sBAAK,CAAC;oBAAA,CAAC;kBAAE,CAAC;gBAAA,CAAC;cAAE,CAAC;YAAA,CAAC,CAAC;YACrHC,MAAM,EAAER,IAAI,CAACC,EAAE,KAAAI,kBAAA,CAAAR,OAAA,EAAC;cAAA,OAAa;gBAAES,IAAI,EAAE,IAAI;gBAAEC,KAAK,EAAE;cAAK,CAAC;YAAA,CAAC,EAAC;YAC1DE,MAAM,EAAET,IAAI,CAACC,EAAE,CAAC;cAAA,OAAO;gBAAEE,EAAE,EAAEH,IAAI,CAACC,EAAE,KAAAI,kBAAA,CAAAR,OAAA,EAAC;kBAAA,OAAa;oBAAES,IAAI,EAAE,IAAI;oBAAEC,KAAK,EAAE;kBAAK,CAAC;gBAAA,CAAC;cAAE,CAAC;YAAA,CAAC,CAAC;YACnFG,IAAI,EAAEV,IAAI,CAACC,EAAE,CAAC;cAAA,OAAO;gBAAEQ,MAAM,EAAET,IAAI,CAACC,EAAE,CAAC;kBAAA,OAAO;oBAAEE,EAAE,EAAEH,IAAI,CAACC,EAAE,KAAAI,kBAAA,CAAAR,OAAA,EAAC;sBAAA,OAAa;wBAAES,IAAI,EAAE,IAAI;wBAAEC,KAAK,EAAE;sBAAK,CAAC;oBAAA,CAAC;kBAAE,CAAC;gBAAA,CAAC;cAAE,CAAC;YAAA,CAAC,CAAC;YAC9GJ,EAAE,EAAEH,IAAI,CAACC,EAAE,CAAC;cAAA,OAAO;gBAAEG,WAAW,EAAEJ,IAAI,CAACC,EAAE,KAAAI,kBAAA,CAAAR,OAAA,EAAC;kBAAA,OAAa;oBAAES,IAAI,EAAE,IAAI;oBAAEC,KAAK,EAAE;kBAAK,CAAC;gBAAA,CAAC;cAAE,CAAC;YAAA,CAAC;UACzF,CAAC;QAAA,CAAC;MACJ;IACF;EACF,CAAC;AAAA,CAAC,CAAC;AAEHb,WAAA,GAAKC,IAAI,4CAAwC,YAAM;EACrD,IAAMgB,MAAM,GAAGX,IAAI,CAACY,aAAa,0CAAsC,CAAC;EACxE,OAAAC,MAAA,CAAAC,MAAA;IACElB,UAAU,EAAE;EAAI,GACbe,MAAM;IACTI,kBAAkB,EAAEf,IAAI,CAACC,EAAE,KAAAI,kBAAA,CAAAR,OAAA,EAAC,aAAY,CAAC,CAAC;EAAC;AAE/C,CAAC,CAAC;AAAC,IAAAmB,sBAAA,GAAAC,OAAA;AAAA,IAAAZ,kBAAA,GAAAW,sBAAA,CAAAC,OAAA;AA/BH,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,kBAAA,GAAAF,OAAA;AAMA,IAAAG,SAAA,GAAAH,OAAA;AAAgD,SAAAvB,YAAA;EAAA,IAAA2B,QAAA,GAAAJ,OAAA;IAAAjB,IAAA,GAAAqB,QAAA,CAAArB,IAAA;EAAAN,WAAA,YAAAA,YAAA;IAAA,OAAAM,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAJhD,IAAMsB,eAAe,GAAGtB,IAAI,CAACY,aAAa,0CAAsC,CAAC;AAEjF,IAAMW,WAA+C,GAAGD,eAAe,CAACC,WAAW;AA4BnFC,QAAQ,CAAC,+BAA+B,EAAE,YAAM;EAC9C,IAAMC,MAAM,GAAGC,kBAAQ,CAACC,YAAY;EAEpCC,SAAS,CAAC,YAAM;IACdC,OAAO,CAACC,GAAG,CAACC,SAAS,GAAG,GAAG;IAC3BF,OAAO,CAACC,GAAG,CAACE,WAAW,GAAG,MAAM;IAChCH,OAAO,CAACC,GAAG,CAACG,kBAAkB,GAAG,GAAG;IACpCJ,OAAO,CAACC,GAAG,CAACI,iBAAiB,GAAGT,MAAM;IACtCI,OAAO,CAACC,GAAG,CAACK,qBAAqB,GAAG,MAAM;EAC5C,CAAC,CAAC;EAEFC,UAAU,KAAA/B,kBAAA,CAAAR,OAAA,EAAC,aAAY;IACrBG,IAAI,CAACqC,aAAa,CAAC,CAAC;IACpB,MAAOC,qBAAY,CAASC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAC;EAEFC,EAAE,CAAC,iEAAiE,MAAAnC,kBAAA,CAAAR,OAAA,EAAE,aAAY;IAChF,IAAM4C,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IAEtB,IAAME,WAAW,GAAGC,KAAK,CAAC7C,IAAI,CAAC;MAAE8C,MAAM,EAAE;IAAE,CAAC,EAAE,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAM;QACvDC,EAAE,EAAE,OAAOvB,MAAM,IAAIsB,CAAC,EAAE;QACxBE,OAAO,EAAExB,MAAM;QACfyB,IAAI,EAAEH,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,UAAU;QAC1CI,SAAS,EAAE,CAAC;QACZC,gBAAgB,EAAE,EAAE;QACpBC,gBAAgB,EAAE,CAAC;QACnBC,SAAS,EAAE,IAAIZ,IAAI,CAACD,GAAG,GAAGM,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACQ,WAAW,CAAC;MAChE,CAAC;IAAA,CAAC,CAAC;IAEH,IAAMC,GAAG,SAASC,kCAAe,CAAC5B,OAAO,CAAC;MAAEJ,MAAM,EAANA,MAAM;MAAEyB,IAAI,EAAE,MAAM;MAAEQ,OAAO,EAAE;QAAEf,WAAW,EAAXA;MAAY,CAAC;MAAEgB,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAW;IAAE,CAAC,CAAC;IAC9HC,MAAM,CAACL,GAAG,CAACM,QAAQ,CAACF,MAAM,CAAC,CAACG,IAAI,CAAC,OAAO,CAAC;EAC3C,CAAC,EAAC;EAEFvB,EAAE,CAAC,mDAAmD,MAAAnC,kBAAA,CAAAR,OAAA,EAAE,aAAY;IAClE,IAAM4C,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IACtB,IAAME,WAAW,GAAGC,KAAK,CAAC7C,IAAI,CAAC;MAAE8C,MAAM,EAAE;IAAE,CAAC,EAAE,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAM;QACvDC,EAAE,EAAE,OAAOvB,MAAM,QAAQsB,CAAC,EAAE;QAC5BE,OAAO,EAAExB,MAAM;QACfyB,IAAI,EAAE,UAAU;QAChBC,SAAS,EAAE,CAAC;QACZC,gBAAgB,EAAE,EAAE;QACpBC,gBAAgB,EAAE,CAAC;QACnBC,SAAS,EAAE,IAAIZ,IAAI,CAACD,GAAG,GAAGM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACQ,WAAW,CAAC;MACjE,CAAC;IAAA,CAAC,CAAC;IAEH,MAAME,kCAAe,CAAC5B,OAAO,CAAC;MAAEJ,MAAM,EAANA,MAAM;MAAEyB,IAAI,EAAE,MAAM;MAAEQ,OAAO,EAAE;QAAEf,WAAW,EAAXA;MAAY,CAAC;MAAEgB,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAW;IAAE,CAAC,CAAC;IAClH,IAAMI,MAAM,SAASP,kCAAe,CAAC5B,OAAO,CAAC;MAAEJ,MAAM,EAANA,MAAM;MAAEyB,IAAI,EAAE,MAAM;MAAEQ,OAAO,EAAE;QAAEf,WAAW,EAAXA;MAAY,CAAC;MAAEgB,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAW;IAAE,CAAC,CAAC;IACjIC,MAAM,CAACG,MAAM,CAACF,QAAQ,CAACF,MAAM,CAAC,CAACG,IAAI,CAAC,OAAO,CAAC;EAC9C,CAAC,EAAC;EAEFvB,EAAE,CAAC,sDAAsD,MAAAnC,kBAAA,CAAAR,OAAA,EAAE,aAAY;IACrE,IAAM2D,GAAG,SAASC,kCAAe,CAAC5B,OAAO,CAAC;MAAEJ,MAAM,EAANA,MAAM;MAAEyB,IAAI,EAAE,MAAM;MAAEQ,OAAO,EAAE,CAAC,CAAC;MAAEC,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAW;IAAE,CAAC,CAAC;IACjHC,MAAM,CAAC,iBAAiB,IAAKL,GAAW,CAAC,CAACO,IAAI,CAAC,KAAK,CAAC;EACvD,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}