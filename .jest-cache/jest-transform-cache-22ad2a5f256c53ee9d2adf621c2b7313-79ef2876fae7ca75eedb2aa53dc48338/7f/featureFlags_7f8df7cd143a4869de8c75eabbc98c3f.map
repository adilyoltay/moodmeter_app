{"version":3,"names":["_expoConstants","_interopRequireDefault","require","_Constants$expoConfig2","getAIMasterEnabled","_Constants$expoConfig","enableAI","Constants","expoConfig","extra","EXPO_PUBLIC_ENABLE_AI","_env2","env","AI_MASTER_ENABLED","AI_PROMPT_LOGGING_ENV","EXPO_PUBLIC_AI_PROMPT_LOGGING","resolveChatEnabled","_Constants$expoConfig3","_Constants$expoConfig4","chatEnv","EXPO_PUBLIC_ENABLE_AI_CHAT","AI_CHAT_ENABLED","__DEV__","_Constants$expoConfig5","console","log","expoConfigExtra","processEnv","window","setTimeout","then","_ref","trackAIInteraction","AIEventType","SYSTEM_STATUS","aiMasterEnabled","environment","enabledFeatureCount","Object","values","featureFlagState","filter","Boolean","length","catch","AI_ENABLED","AI_RUNTIME_MODULES","AI_CHAT","AI_ONBOARDING","AI_INSIGHTS","AI_VOICE","AI_CBT_ENGINE","AI_EXTERNAL_API","AI_THERAPEUTIC_PROMPTS","AI_REAL_RESPONSES","AI_INSIGHTS_ENGINE_V2","AI_PATTERN_RECOGNITION_V2","AI_SMART_NOTIFICATIONS","AI_ADAPTIVE_INTERVENTIONS","AI_CONTEXT_INTELLIGENCE","AI_JITAI_SYSTEM","AI_ADVANCED_PERSONALIZATION","AI_MODEL_OPTIMIZATION","AI_PERFORMANCE_MONITORING","AI_ADVANCED_ANALYTICS","AI_DASHBOARD","AI_YBOCS_ANALYSIS","AI_USER_PROFILING","AI_TREATMENT_PLANNING","AI_RISK_ASSESSMENT","AI_ONBOARDING_UI","AI_ONBOARDING_CONTEXT_INTEGRATION","AI_ONBOARDING_INTERVENTIONS_INTEGRATION","AI_ART_THERAPY","AI_PREDICTIVE_INTERVENTION","AI_CORE_ANALYSIS","AI_LLM_GATING","AI_PROGRESSIVE","AI_ONBOARDING_REFINE","AI_THERAPY_STAIRCASE","AI_UNIFIED_PIPELINE","AI_UNIFIED_PIPELINE_PERCENTAGE","AI_UNIFIED_VOICE","AI_UNIFIED_PATTERNS","AI_UNIFIED_INSIGHTS","AI_UNIFIED_CBT","AI_BREATHWORK_SUGGESTIONS","AI_DYNAMIC_GAMIFICATION","AI_DYNAMIC_MISSIONS","AI_SMART_ROUTING","AI_FORM_PREFILLING","MULTI_INTENT_VOICE","AI_TRIGGER_DETECTION","TURKISH_CULTURAL_OCD","AI_OCD_PATTERN_ANALYSIS","LLM_ROUTER","LLM_REFRAME","LLM_COACH_ADAPT","LLM_PDF_SUMMARY","JITAI_TIME","JITAI_GEOFENCE","AI_PROMPT_LOGGING","DEBUG_MODE","MOCK_API_RESPONSES","EXPO_PUBLIC_MOCK_API","AI_TELEMETRY","PERFORMANCE_MONITORING","ERROR_REPORTING","SAFETY_CHECKS","CONTENT_FILTERING","RATE_LIMITING","featureUsageLog","FEATURE_FLAGS","exports","assign","isEnabled","feature","startsWith","warn","global","__OBSESSLESS_KILL_SWITCH","value","disableAll","_disableAll","_asyncToGenerator2","default","keys","forEach","key","_yield$import","EMERGENCY_SHUTDOWN","timestamp","Date","toISOString","reason","previousFlags","_unused","_yield$import2","AsyncStorage","setItem","_unused2","apply","arguments","setFlag","getUsageStats","reactivateAll","_Constants$expoConfig6","masterEnabled","AI_CONFIG","DEFAULT_PROVIDER","_Constants$expoConfig7","raw","EXPO_PUBLIC_AI_PROVIDER","lower","String","toLowerCase","PROVIDER_PRIORITY","CHAT_REQUIRES_EXTERNAL_AI","INSIGHTS_USES_LOCAL_AI","VOICE_USES_HYBRID_AI","MAX_TOKENS","TEMPERATURE_LIMIT","SAFETY_THRESHOLD","MAX_REQUESTS_PER_MINUTE","MAX_REQUESTS_PER_HOUR"],"sources":["featureFlags.ts"],"sourcesContent":["/**\n * üõ°Ô∏è ObsessLess Feature Flag System - FAZ 0: G√ºvenlik ve Stabilite Hazƒ±rlƒ±ƒüƒ±\n * \n * Bu sistem \"Kapsamlƒ± Yol Haritasƒ±\" belgesindeki G√∂rev 0.0.1 gereksinimlerine uygun olarak\n * tasarlanmƒ±≈ütƒ±r. T√ºm AI √∂zellikleri tek bir master switch ile kontrol edilir.\n * \n * KRƒ∞Tƒ∞K: Bu dosyadaki deƒüi≈üiklikler prod√ºksiyonu etkileyebilir!\n */\n\nimport Constants from 'expo-constants';\n\n// üéØ MASTER AI SWITCH - Tek bir toggle ile t√ºm AI √∂zellikleri kontrol edilir\nconst getAIMasterEnabled = () => {\n  // Expo config ve process env √ºzerinden kontrol (prod dahil)\n  const enableAI = (Constants.expoConfig?.extra?.EXPO_PUBLIC_ENABLE_AI === 'true') ||\n                   (process.env.EXPO_PUBLIC_ENABLE_AI === 'true');\n  return enableAI;\n};\n\nconst AI_MASTER_ENABLED = getAIMasterEnabled();\n\n// Ge√ßici: Prompt logging toggle (varsayƒ±lan kapalƒ±, env ile a√ßƒ±labilir)\nconst AI_PROMPT_LOGGING_ENV = (Constants.expoConfig?.extra?.EXPO_PUBLIC_AI_PROMPT_LOGGING === 'true') ||\n                              (process.env.EXPO_PUBLIC_AI_PROMPT_LOGGING === 'true');\n\n// üí¨ AI_CHAT i√ßin baƒüƒ±msƒ±z override desteƒüi\nconst resolveChatEnabled = (): boolean => {\n  const chatEnv = (Constants.expoConfig?.extra?.EXPO_PUBLIC_ENABLE_AI_CHAT ?? process.env.EXPO_PUBLIC_ENABLE_AI_CHAT);\n  if (typeof chatEnv === 'string') {\n    return chatEnv === 'true';\n  }\n  // Varsayƒ±lan: master switch ile aynƒ±\n  return AI_MASTER_ENABLED;\n};\nconst AI_CHAT_ENABLED = resolveChatEnabled();\n\n// Debug logging (development only) ve telemetry\nif (__DEV__) {\n  console.log('üîß Feature Flags Debug:', {\n    __DEV__,\n    expoConfigExtra: Constants.expoConfig?.extra?.EXPO_PUBLIC_ENABLE_AI,\n    processEnv: process.env.EXPO_PUBLIC_ENABLE_AI,\n    AI_MASTER_ENABLED\n  });\n}\n\n// AI Master Switch durumunu telemetriye g√∂nder\nif (typeof window !== 'undefined') {\n  // Browser/mobile environment\n  setTimeout(() => {\n    import('@/features/ai/telemetry/aiTelemetry').then(({ trackAIInteraction, AIEventType }) => {\n      trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n        aiMasterEnabled: AI_MASTER_ENABLED,\n        environment: __DEV__ ? 'development' : 'production',\n        enabledFeatureCount: Object.values(featureFlagState).filter(Boolean).length\n      });\n    }).catch(() => {\n      // Telemetry y√ºklenemezse sessizce devam et\n    });\n  }, 1000);\n}\n\n// Feature flag deƒüerlerini runtime'da deƒüi≈ütirmek i√ßin mutable obje\nconst featureFlagState: Record<string, boolean | number> = {\n  // üéØ MASTER AI SWITCH\n  AI_ENABLED: AI_MASTER_ENABLED,\n  // üß© AI RUNTIME MODULES: Onboarding‚Äôdan baƒüƒ±msƒ±z ek analiz/telemetry mod√ºlleri\n  AI_RUNTIME_MODULES: AI_MASTER_ENABLED,\n  \n  // ü§ñ T√ºm AI Features - Master switch'e baƒülƒ±\n  AI_CHAT: AI_CHAT_ENABLED,\n  AI_ONBOARDING: AI_MASTER_ENABLED,\n  AI_INSIGHTS: AI_MASTER_ENABLED,\n  AI_VOICE: AI_MASTER_ENABLED,\n  AI_CBT_ENGINE: AI_MASTER_ENABLED,\n  AI_EXTERNAL_API: AI_MASTER_ENABLED,\n  AI_THERAPEUTIC_PROMPTS: AI_MASTER_ENABLED,\n  AI_REAL_RESPONSES: AI_MASTER_ENABLED,\n  AI_INSIGHTS_ENGINE_V2: AI_MASTER_ENABLED,\n  AI_PATTERN_RECOGNITION_V2: AI_MASTER_ENABLED,\n  AI_SMART_NOTIFICATIONS: AI_MASTER_ENABLED,\n  // Removed deprecated flags\n  AI_ADAPTIVE_INTERVENTIONS: AI_MASTER_ENABLED,\n  AI_CONTEXT_INTELLIGENCE: AI_MASTER_ENABLED,\n  AI_JITAI_SYSTEM: AI_MASTER_ENABLED,\n  AI_ADVANCED_PERSONALIZATION: AI_MASTER_ENABLED,\n  AI_MODEL_OPTIMIZATION: AI_MASTER_ENABLED,\n  AI_PERFORMANCE_MONITORING: AI_MASTER_ENABLED,\n  AI_ADVANCED_ANALYTICS: AI_MASTER_ENABLED,\n  AI_DASHBOARD: AI_MASTER_ENABLED,\n  // Onboarding Flow varsayƒ±lan olarak aktif; ayrƒ± V2 flag kaldƒ±rƒ±ldƒ±\n  AI_YBOCS_ANALYSIS: AI_MASTER_ENABLED,\n  AI_USER_PROFILING: AI_MASTER_ENABLED,\n  AI_TREATMENT_PLANNING: AI_MASTER_ENABLED,\n  AI_RISK_ASSESSMENT: AI_MASTER_ENABLED,\n  AI_ONBOARDING_UI: AI_MASTER_ENABLED,\n  AI_ONBOARDING_CONTEXT_INTEGRATION: AI_MASTER_ENABLED,\n  AI_ONBOARDING_INTERVENTIONS_INTEGRATION: AI_MASTER_ENABLED,\n  AI_ART_THERAPY: false, // TEMPORARILY DISABLED - ge√ßici olarak kapatƒ±ldƒ±\n\n  AI_PREDICTIVE_INTERVENTION: AI_MASTER_ENABLED,\n  // KALDIRILDI: AI_CRISIS_DETECTION\n  \n    // üöÄ CoreAnalysisService v1 flags\n  AI_CORE_ANALYSIS: true, // Yeni CoreAnalysisService (ACTIVATED)\n  AI_LLM_GATING: true, // LLM gating logic (ACTIVATED)\n  AI_PROGRESSIVE: true, // Progressive UI updates (ACTIVATED)\n  AI_ONBOARDING_REFINE: true, // Onboarding skeleton->refine (ACTIVATED)\n  AI_THERAPY_STAIRCASE: true, // Deterministic therapy difficulty (ACTIVATED)\n  \n  // üéØ Unified AI Pipeline flags (NEW - Jan 2025) - ACTIVATED\n  AI_UNIFIED_PIPELINE: true, // Master toggle for unified pipeline (ACTIVATED)\n  AI_UNIFIED_PIPELINE_PERCENTAGE: 100, // Full rollout for activation (100%)\n  AI_UNIFIED_VOICE: true, // Voice module in pipeline\n  AI_UNIFIED_PATTERNS: true, // Pattern recognition in pipeline\n  AI_UNIFIED_INSIGHTS: true, // Insights generation in pipeline\n  AI_UNIFIED_CBT: true, // CBT analysis in pipeline\n  \n  // üå¨Ô∏è Breathwork Suggestions (NEW - Week 2)\n  AI_BREATHWORK_SUGGESTIONS: true, // AI-powered breathwork recommendations\n  \n  // üéÆ Dynamic Gamification (NEW - Week 2)\n  AI_DYNAMIC_GAMIFICATION: true, // Context-based dynamic points calculation\n  AI_DYNAMIC_MISSIONS: true, // AI-generated daily missions\n  \n  // üóÇÔ∏è Smart Routing & Prefilling (NEW - Week 2)\n  AI_SMART_ROUTING: true, // Intelligent screen navigation with context\n  AI_FORM_PREFILLING: true, // Automatic form prefilling from analysis\n  \n  // üéØ Multi-Intent Voice Analysis (NEW - Jan 2025)\n  MULTI_INTENT_VOICE: AI_MASTER_ENABLED, // √áoklu mod√ºl desteƒüi\n  \n  // üéØ OCD AI Services (NEW - Critical for OCD functionality)\n  AI_TRIGGER_DETECTION: AI_MASTER_ENABLED, // OCD trigger detection service\n  TURKISH_CULTURAL_OCD: AI_MASTER_ENABLED, // Turkish cultural adaptation for OCD\n  AI_OCD_PATTERN_ANALYSIS: AI_MASTER_ENABLED, // OCD pattern recognition\n  \n  // üîÄ LLM Flags (aliases ‚Üí AI master)\n  LLM_ROUTER: AI_MASTER_ENABLED,\n  LLM_REFRAME: AI_MASTER_ENABLED,\n  LLM_COACH_ADAPT: AI_MASTER_ENABLED,\n  LLM_PDF_SUMMARY: AI_MASTER_ENABLED,\n  \n  // ‚è∞ JITAI granular flags\n  JITAI_TIME: AI_MASTER_ENABLED,\n  JITAI_GEOFENCE: false,\n  \n  // üìù Prompt Logging (sanitized) ‚Äì ge√ßici debugging toggle\n  AI_PROMPT_LOGGING: !!AI_PROMPT_LOGGING_ENV,\n  \n  // üîß Development Features\n  DEBUG_MODE: __DEV__,\n  MOCK_API_RESPONSES: __DEV__ && process.env.EXPO_PUBLIC_MOCK_API === 'true',\n  \n  // üìä Telemetry Features\n  AI_TELEMETRY: AI_MASTER_ENABLED, // Master switch ile kontrol edilir\n  PERFORMANCE_MONITORING: true,\n  ERROR_REPORTING: true,\n  \n  // üö® Safety Features (Always Enabled)\n  SAFETY_CHECKS: true,\n  CONTENT_FILTERING: true,\n  RATE_LIMITING: true,\n  \n  // üõ°Ô∏è (Removed) ERP Module Feature Flag\n  // ERP_MODULE_ENABLED: false, // Removed ERP module\n};\n\n// Feature flag logging i√ßin\nconst featureUsageLog: Record<string, number> = {};\n\nexport const FEATURE_FLAGS = {\n  ...featureFlagState,\n  \n  /**\n   * üîç Feature durumunu kontrol eder\n   * Kullanƒ±m loglamasƒ± ve runtime kontrolleri i√ßerir\n   */\n  isEnabled: (feature: keyof typeof featureFlagState): boolean => {\n    // Kullanƒ±m sayacƒ±\n    featureUsageLog[feature] = (featureUsageLog[feature] || 0) + 1;\n    \n    // Geli≈ütirme modunda log\n    if (__DEV__) {\n      console.log(`üè≥Ô∏è Feature Flag Check: ${feature} = ${featureFlagState[feature]}`);\n    }\n    \n    // Master AI switch kontrol√º\n    if (feature.startsWith('AI_') && feature !== 'AI_ENABLED' && !featureFlagState.AI_ENABLED) {\n      return false;\n    }\n    \n    // Additional runtime checks\n    if (feature.startsWith('AI_') && !featureFlagState.SAFETY_CHECKS) {\n      console.warn('‚ö†Ô∏è AI features disabled: Safety checks are off');\n      return false;\n    }\n    \n    // Remote kill switch capability (gelecekte API'den kontrol edilebilir)\n    if (typeof (global as any).__OBSESSLESS_KILL_SWITCH !== 'undefined') {\n      console.warn('üö® Emergency kill switch activated');\n      return false;\n    }\n    \n    // Handle number values (like percentages) - treat as enabled if > 0\n    const value = featureFlagState[feature];\n    if (typeof value === 'number') {\n      return value > 0;\n    }\n    \n    return !!value;\n  },\n  \n  /**\n   * üö® Acil durum fonksiyonu - T√ºm AI √∂zelliklerini kapatƒ±r\n   */\n  disableAll: async (): Promise<void> => {\n    console.warn('üö® EMERGENCY: Disabling all AI features');\n    \n    Object.keys(featureFlagState).forEach(key => {\n      if (key.startsWith('AI_')) {\n        featureFlagState[key] = false;\n      }\n    });\n    \n    // Global kill switch aktive et\n    (global as any).__OBSESSLESS_KILL_SWITCH = true;\n    \n    // Telemetry + persist\n    try {\n      const { trackAIInteraction, AIEventType } = await import('@/features/ai/telemetry/aiTelemetry');\n      await trackAIInteraction(AIEventType.EMERGENCY_SHUTDOWN, {\n        timestamp: new Date().toISOString(),\n        reason: 'feature_flags_disabled',\n        previousFlags: { ...featureFlagState }\n      });\n    } catch {}\n    try {\n      const { default: AsyncStorage } = await import('@react-native-async-storage/async-storage');\n      await AsyncStorage.setItem('emergency_shutdown_timestamp', new Date().toISOString());\n    } catch {}\n  },\n  \n  /**\n   * üîß Runtime'da feature flag deƒüi≈ütirme (sadece development)\n   * Master AI switch deƒüi≈ütirildiƒüinde t√ºm AI √∂zellikleri etkilenir\n   */\n  setFlag: (feature: keyof typeof featureFlagState, value: boolean | number): void => {\n    if (!__DEV__) {\n      console.warn('‚ö†Ô∏è Feature flag changes only allowed in development');\n      return;\n    }\n    \n    console.log(`üîß Changing feature flag: ${feature} = ${value}`);\n    \n    // Master AI switch deƒüi≈ütiriliyorsa t√ºm AI √∂zelliklerini g√ºncelle\n    if (feature === 'AI_ENABLED') {\n      Object.keys(featureFlagState).forEach(key => {\n        if (key.startsWith('AI_')) {\n          featureFlagState[key] = value;\n        }\n      });\n    } else {\n      featureFlagState[feature] = value;\n    }\n  },\n  \n  /**\n   * üìä Feature kullanƒ±m istatistikleri\n   */\n  getUsageStats: (): Record<string, number> => {\n    return { ...featureUsageLog };\n  },\n  \n  /**\n   * üîÑ T√ºm AI √∂zelliklerini yeniden aktifle≈ütir (development only)\n   */\n  reactivateAll: (): void => {\n    if (!__DEV__) {\n      console.warn('‚ö†Ô∏è Feature reactivation only allowed in development');\n      return;\n    }\n    \n    console.log('üîÑ Reactivating all AI features');\n    delete (global as any).__OBSESSLESS_KILL_SWITCH;\n    \n    // Master switch'i aktifle≈ütir\n    const masterEnabled = (Constants.expoConfig?.extra?.EXPO_PUBLIC_ENABLE_AI === 'true') ||\n                          (process.env.EXPO_PUBLIC_ENABLE_AI === 'true');\n    Object.keys(featureFlagState).forEach(key => {\n      if (key.startsWith('AI_')) {\n        featureFlagState[key] = masterEnabled;\n      }\n    });\n  }\n} as const;\n\n// AI Configuration - Yol Haritasƒ± Uyumlu\nexport const AI_CONFIG = {\n  // Default provider - environment'tan override edilebilir\n  DEFAULT_PROVIDER: (() => {\n    const raw = (Constants.expoConfig?.extra?.EXPO_PUBLIC_AI_PROVIDER as string) ||\n                (process.env.EXPO_PUBLIC_AI_PROVIDER as string) ||\n                'gemini';\n    const lower = String(raw).toLowerCase();\n    // Gemini-only: ba≈üka deƒüer gelirse gemini'ye d√º≈ü\n    return (lower === 'gemini' ? 'gemini' : 'gemini') as 'gemini';\n  })(),\n  \n  // Provider priorities (single provider)\n  PROVIDER_PRIORITY: ['gemini'] as const,\n  \n  // Feature-specific AI requirements\n  CHAT_REQUIRES_EXTERNAL_AI: true,\n  INSIGHTS_USES_LOCAL_AI: true,\n  VOICE_USES_HYBRID_AI: true,\n  \n  // Safety configurations\n  MAX_TOKENS: 4000,\n  TEMPERATURE_LIMIT: 0.8,\n  SAFETY_THRESHOLD: 0.9,\n  \n  // Rate limiting\n  MAX_REQUESTS_PER_MINUTE: 60,\n  MAX_REQUESTS_PER_HOUR: 1000,\n} as const;\n"],"mappings":";;;;;;;AASA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAuC,IAAAC,sBAAA;AAGvC,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAAA,IAAAC,qBAAA;EAE/B,IAAMC,QAAQ,GAAI,EAAAD,qBAAA,GAAAE,sBAAS,CAACC,UAAU,cAAAH,qBAAA,GAApBA,qBAAA,CAAsBI,KAAK,qBAA3BJ,qBAAA,CAA6BK,qBAAqB,MAAK,MAAM,IAC7DC,KAAA,CAAAC,GAAA,CAAAF,qBAAA,KAAsC,MAAO;EAC/D,OAAOJ,QAAQ;AACjB,CAAC;AAED,IAAMO,iBAAiB,GAAGT,kBAAkB,CAAC,CAAC;AAG9C,IAAMU,qBAAqB,GAAI,EAAAX,sBAAA,GAAAI,sBAAS,CAACC,UAAU,cAAAL,sBAAA,GAApBA,sBAAA,CAAsBM,KAAK,qBAA3BN,sBAAA,CAA6BY,6BAA6B,MAAK,MAAM,IACrEJ,KAAA,CAAAC,GAAA,CAAAG,6BAAA,KAA8C,MAAO;AAGpF,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAkB;EAAA,IAAAC,sBAAA,EAAAC,sBAAA;EACxC,IAAMC,OAAO,IAAAF,sBAAA,IAAAC,sBAAA,GAAIX,sBAAS,CAACC,UAAU,cAAAU,sBAAA,GAApBA,sBAAA,CAAsBT,KAAK,qBAA3BS,sBAAA,CAA6BE,0BAA0B,YAAAH,sBAAA,GAAAN,KAAA,CAAAC,GAAA,CAAAQ,0BAA2C;EACnH,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;IAC/B,OAAOA,OAAO,KAAK,MAAM;EAC3B;EAEA,OAAON,iBAAiB;AAC1B,CAAC;AACD,IAAMQ,eAAe,GAAGL,kBAAkB,CAAC,CAAC;AAG5C,IAAIM,OAAO,EAAE;EAAA,IAAAC,sBAAA;EACXC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;IACrCH,OAAO,EAAPA,OAAO;IACPI,eAAe,GAAAH,sBAAA,GAAEhB,sBAAS,CAACC,UAAU,cAAAe,sBAAA,GAApBA,sBAAA,CAAsBd,KAAK,qBAA3Bc,sBAAA,CAA6Bb,qBAAqB;IACnEiB,UAAU,EAAAhB,KAAA,CAAAC,GAAA,CAAAF,qBAAmC;IAC7CG,iBAAiB,EAAjBA;EACF,CAAC,CAAC;AACJ;AAGA,IAAI,OAAOe,MAAM,KAAK,WAAW,EAAE;EAEjCC,UAAU,CAAC,YAAM;IACf,MAAM,uCAAsC,CAAC,CAACC,IAAI,CAAC,UAAAC,IAAA,EAAyC;MAAA,IAAtCC,kBAAkB,GAAAD,IAAA,CAAlBC,kBAAkB;QAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;MACnFD,kBAAkB,CAACC,WAAW,CAACC,aAAa,EAAE;QAC5CC,eAAe,EAAEtB,iBAAiB;QAClCuB,WAAW,EAAEd,OAAO,GAAG,aAAa,GAAG,YAAY;QACnDe,mBAAmB,EAAEC,MAAM,CAACC,MAAM,CAACC,gBAAgB,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC;MACvE,CAAC,CAAC;IACJ,CAAC,CAAC,CAACC,KAAK,CAAC,YAAM,CAEf,CAAC,CAAC;EACJ,CAAC,EAAE,IAAI,CAAC;AACV;AAGA,IAAMJ,gBAAkD,GAAG;EAEzDK,UAAU,EAAEhC,iBAAiB;EAE7BiC,kBAAkB,EAAEjC,iBAAiB;EAGrCkC,OAAO,EAAE1B,eAAe;EACxB2B,aAAa,EAAEnC,iBAAiB;EAChCoC,WAAW,EAAEpC,iBAAiB;EAC9BqC,QAAQ,EAAErC,iBAAiB;EAC3BsC,aAAa,EAAEtC,iBAAiB;EAChCuC,eAAe,EAAEvC,iBAAiB;EAClCwC,sBAAsB,EAAExC,iBAAiB;EACzCyC,iBAAiB,EAAEzC,iBAAiB;EACpC0C,qBAAqB,EAAE1C,iBAAiB;EACxC2C,yBAAyB,EAAE3C,iBAAiB;EAC5C4C,sBAAsB,EAAE5C,iBAAiB;EAEzC6C,yBAAyB,EAAE7C,iBAAiB;EAC5C8C,uBAAuB,EAAE9C,iBAAiB;EAC1C+C,eAAe,EAAE/C,iBAAiB;EAClCgD,2BAA2B,EAAEhD,iBAAiB;EAC9CiD,qBAAqB,EAAEjD,iBAAiB;EACxCkD,yBAAyB,EAAElD,iBAAiB;EAC5CmD,qBAAqB,EAAEnD,iBAAiB;EACxCoD,YAAY,EAAEpD,iBAAiB;EAE/BqD,iBAAiB,EAAErD,iBAAiB;EACpCsD,iBAAiB,EAAEtD,iBAAiB;EACpCuD,qBAAqB,EAAEvD,iBAAiB;EACxCwD,kBAAkB,EAAExD,iBAAiB;EACrCyD,gBAAgB,EAAEzD,iBAAiB;EACnC0D,iCAAiC,EAAE1D,iBAAiB;EACpD2D,uCAAuC,EAAE3D,iBAAiB;EAC1D4D,cAAc,EAAE,KAAK;EAErBC,0BAA0B,EAAE7D,iBAAiB;EAI7C8D,gBAAgB,EAAE,IAAI;EACtBC,aAAa,EAAE,IAAI;EACnBC,cAAc,EAAE,IAAI;EACpBC,oBAAoB,EAAE,IAAI;EAC1BC,oBAAoB,EAAE,IAAI;EAG1BC,mBAAmB,EAAE,IAAI;EACzBC,8BAA8B,EAAE,GAAG;EACnCC,gBAAgB,EAAE,IAAI;EACtBC,mBAAmB,EAAE,IAAI;EACzBC,mBAAmB,EAAE,IAAI;EACzBC,cAAc,EAAE,IAAI;EAGpBC,yBAAyB,EAAE,IAAI;EAG/BC,uBAAuB,EAAE,IAAI;EAC7BC,mBAAmB,EAAE,IAAI;EAGzBC,gBAAgB,EAAE,IAAI;EACtBC,kBAAkB,EAAE,IAAI;EAGxBC,kBAAkB,EAAE9E,iBAAiB;EAGrC+E,oBAAoB,EAAE/E,iBAAiB;EACvCgF,oBAAoB,EAAEhF,iBAAiB;EACvCiF,uBAAuB,EAAEjF,iBAAiB;EAG1CkF,UAAU,EAAElF,iBAAiB;EAC7BmF,WAAW,EAAEnF,iBAAiB;EAC9BoF,eAAe,EAAEpF,iBAAiB;EAClCqF,eAAe,EAAErF,iBAAiB;EAGlCsF,UAAU,EAAEtF,iBAAiB;EAC7BuF,cAAc,EAAE,KAAK;EAGrBC,iBAAiB,EAAE,CAAC,CAACvF,qBAAqB;EAG1CwF,UAAU,EAAEhF,OAAO;EACnBiF,kBAAkB,EAAEjF,OAAO,IAAIX,KAAA,CAAAC,GAAA,CAAA4F,oBAAA,KAAqC,MAAM;EAG1EC,YAAY,EAAE5F,iBAAiB;EAC/B6F,sBAAsB,EAAE,IAAI;EAC5BC,eAAe,EAAE,IAAI;EAGrBC,aAAa,EAAE,IAAI;EACnBC,iBAAiB,EAAE,IAAI;EACvBC,aAAa,EAAE;AAIjB,CAAC;AAGD,IAAMC,eAAuC,GAAG,CAAC,CAAC;AAE3C,IAAMC,aAAa,GAAAC,OAAA,CAAAD,aAAA,GAAA1E,MAAA,CAAA4E,MAAA,KACrB1E,gBAAgB;EAMnB2E,SAAS,EAAE,SAAXA,SAASA,CAAGC,OAAsC,EAAc;IAE9DL,eAAe,CAACK,OAAO,CAAC,GAAG,CAACL,eAAe,CAACK,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IAG9D,IAAI9F,OAAO,EAAE;MACXE,OAAO,CAACC,GAAG,CAAC,2BAA2B2F,OAAO,MAAM5E,gBAAgB,CAAC4E,OAAO,CAAC,EAAE,CAAC;IAClF;IAGA,IAAIA,OAAO,CAACC,UAAU,CAAC,KAAK,CAAC,IAAID,OAAO,KAAK,YAAY,IAAI,CAAC5E,gBAAgB,CAACK,UAAU,EAAE;MACzF,OAAO,KAAK;IACd;IAGA,IAAIuE,OAAO,CAACC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC7E,gBAAgB,CAACoE,aAAa,EAAE;MAChEpF,OAAO,CAAC8F,IAAI,CAAC,gDAAgD,CAAC;MAC9D,OAAO,KAAK;IACd;IAGA,IAAI,OAAQC,MAAM,CAASC,wBAAwB,KAAK,WAAW,EAAE;MACnEhG,OAAO,CAAC8F,IAAI,CAAC,oCAAoC,CAAC;MAClD,OAAO,KAAK;IACd;IAGA,IAAMG,KAAK,GAAGjF,gBAAgB,CAAC4E,OAAO,CAAC;IACvC,IAAI,OAAOK,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOA,KAAK,GAAG,CAAC;IAClB;IAEA,OAAO,CAAC,CAACA,KAAK;EAChB,CAAC;EAKDC,UAAU;IAAA,IAAAC,WAAA,OAAAC,kBAAA,CAAAC,OAAA,EAAE,aAA2B;MACrCrG,OAAO,CAAC8F,IAAI,CAAC,yCAAyC,CAAC;MAEvDhF,MAAM,CAACwF,IAAI,CAACtF,gBAAgB,CAAC,CAACuF,OAAO,CAAC,UAAAC,GAAG,EAAI;QAC3C,IAAIA,GAAG,CAACX,UAAU,CAAC,KAAK,CAAC,EAAE;UACzB7E,gBAAgB,CAACwF,GAAG,CAAC,GAAG,KAAK;QAC/B;MACF,CAAC,CAAC;MAGDT,MAAM,CAASC,wBAAwB,GAAG,IAAI;MAG/C,IAAI;QACF,IAAAS,aAAA,SAAkD,MAAM,uCAAsC,CAAC;UAAvFjG,kBAAkB,GAAAiG,aAAA,CAAlBjG,kBAAkB;UAAEC,WAAW,GAAAgG,aAAA,CAAXhG,WAAW;QACvC,MAAMD,kBAAkB,CAACC,WAAW,CAACiG,kBAAkB,EAAE;UACvDC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UACnCC,MAAM,EAAE,wBAAwB;UAChCC,aAAa,EAAAjG,MAAA,CAAA4E,MAAA,KAAO1E,gBAAgB;QACtC,CAAC,CAAC;MACJ,CAAC,CAAC,OAAAgG,OAAA,EAAM,CAAC;MACT,IAAI;QACF,IAAAC,cAAA,SAAwC,MAAM,CAAC,2CAA2C,CAAC;UAA1EC,YAAY,GAAAD,cAAA,CAArBZ,OAAO;QACf,MAAMa,YAAY,CAACC,OAAO,CAAC,8BAA8B,EAAE,IAAIP,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;MACtF,CAAC,CAAC,OAAAO,QAAA,EAAM,CAAC;IACX,CAAC;IAAA,SAzBDlB,UAAUA,CAAA;MAAA,OAAAC,WAAA,CAAAkB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAVpB,UAAU;EAAA,GAyBT;EAMDqB,OAAO,EAAE,SAATA,OAAOA,CAAG3B,OAAsC,EAAEK,KAAuB,EAAW;IAClF,IAAI,CAACnG,OAAO,EAAE;MACZE,OAAO,CAAC8F,IAAI,CAAC,qDAAqD,CAAC;MACnE;IACF;IAEA9F,OAAO,CAACC,GAAG,CAAC,6BAA6B2F,OAAO,MAAMK,KAAK,EAAE,CAAC;IAG9D,IAAIL,OAAO,KAAK,YAAY,EAAE;MAC5B9E,MAAM,CAACwF,IAAI,CAACtF,gBAAgB,CAAC,CAACuF,OAAO,CAAC,UAAAC,GAAG,EAAI;QAC3C,IAAIA,GAAG,CAACX,UAAU,CAAC,KAAK,CAAC,EAAE;UACzB7E,gBAAgB,CAACwF,GAAG,CAAC,GAAGP,KAAK;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MACLjF,gBAAgB,CAAC4E,OAAO,CAAC,GAAGK,KAAK;IACnC;EACF,CAAC;EAKDuB,aAAa,EAAE,SAAfA,aAAaA,CAAA,EAAgC;IAC3C,OAAA1G,MAAA,CAAA4E,MAAA,KAAYH,eAAe;EAC7B,CAAC;EAKDkC,aAAa,EAAE,SAAfA,aAAaA,CAAA,EAAc;IAAA,IAAAC,sBAAA;IACzB,IAAI,CAAC5H,OAAO,EAAE;MACZE,OAAO,CAAC8F,IAAI,CAAC,qDAAqD,CAAC;MACnE;IACF;IAEA9F,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAQ8F,MAAM,CAASC,wBAAwB;IAG/C,IAAM2B,aAAa,GAAI,EAAAD,sBAAA,GAAA3I,sBAAS,CAACC,UAAU,cAAA0I,sBAAA,GAApBA,sBAAA,CAAsBzI,KAAK,qBAA3ByI,sBAAA,CAA6BxI,qBAAqB,MAAK,MAAM,IAC7DC,KAAA,CAAAC,GAAA,CAAAF,qBAAA,KAAsC,MAAO;IACpE4B,MAAM,CAACwF,IAAI,CAACtF,gBAAgB,CAAC,CAACuF,OAAO,CAAC,UAAAC,GAAG,EAAI;MAC3C,IAAIA,GAAG,CAACX,UAAU,CAAC,KAAK,CAAC,EAAE;QACzB7E,gBAAgB,CAACwF,GAAG,CAAC,GAAGmB,aAAa;MACvC;IACF,CAAC,CAAC;EACJ;AAAC,EACO;AAGH,IAAMC,SAAS,GAAAnC,OAAA,CAAAmC,SAAA,GAAG;EAEvBC,gBAAgB,EAAG,UAAAC,sBAAA,EAAM;IACvB,IAAMC,GAAG,GAAG,EAAAD,sBAAA,GAAC/I,sBAAS,CAACC,UAAU,cAAA8I,sBAAA,GAApBA,sBAAA,CAAsB7I,KAAK,qBAA3B6I,sBAAA,CAA6BE,uBAAuB,KAAA7I,KAAA,CAAAC,GAAA,CAAA4I,uBACN,IAC/C,QAAQ;IACpB,IAAMC,KAAK,GAAGC,MAAM,CAACH,GAAG,CAAC,CAACI,WAAW,CAAC,CAAC;IAEvC,OAAQF,KAAK,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ;EAClD,CAAC,CAAE,CAAC;EAGJG,iBAAiB,EAAE,CAAC,QAAQ,CAAU;EAGtCC,yBAAyB,EAAE,IAAI;EAC/BC,sBAAsB,EAAE,IAAI;EAC5BC,oBAAoB,EAAE,IAAI;EAG1BC,UAAU,EAAE,IAAI;EAChBC,iBAAiB,EAAE,GAAG;EACtBC,gBAAgB,EAAE,GAAG;EAGrBC,uBAAuB,EAAE,EAAE;EAC3BC,qBAAqB,EAAE;AACzB,CAAU","ignoreList":[]}