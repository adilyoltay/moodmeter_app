{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","_featureFlags","_types","_aiTelemetry","_contentFilter","_expoConstants","_edgeAIService","ExternalAIService","_classCallCheck2","default","isEnabled","providers","Map","activeProvider","requestQueue","rateLimiter","cacheConfig","enabled","ttlMs","maxSize","useStorage","rateLimitConfig","requestsPerMinute","requestsPerHour","requestsPerDay","perUser","responseCache","userRateLimits","initializeProviders","_createClass2","key","value","_initialize","_asyncToGenerator2","__DEV__","console","log","FEATURE_FLAGS","loadProviderConfigurations","performHealthChecks","selectBestProvider","trackAIError","code","AIErrorCode","NO_PROVIDER_AVAILABLE","message","severity","ErrorSeverity","HIGH","context","component","method","providersChecked","size","healthCheckResults","Array","from","entries","map","_ref","_ref2","_slicedToArray2","provider","config","isAvailable","lastHealthCheck","errorCount","warn","startMemoryProbe","trackAIInteraction","AIEventType","EXTERNAL_AI_INITIALIZED","availableProviders","keys","totalProviders","error","INITIALIZATION_FAILED","initialize","apply","arguments","_loadProviderConfigurations","_Constants$expoConfig","extra","Constants","expoConfig","isLikelyPlaceholder","v","String","test","selectedProvider","EXPO_PUBLIC_AI_PROVIDER","_env2","env","toLowerCase","hasEdgeFunction","edgeAIService","healthCheck","set","AIProvider","GEMINI","apiKey","baseURL","model","maxTokens","temperature","timeout","Date","successRate","configuredProviders","SYSTEM_STATUS","event","providersConfigured","_performHealthChecks","_this","healthCheckPromises","_ref4","_ref3","_ref5","isHealthy","checkProviderHealth","AI_PROVIDER_HEALTH_CHECK","AI_PROVIDER_FAILED","reason","_x","Promise","all","_checkProviderHealth","get","edgeHealthy","response","makeProviderRequest","messages","role","content","success","originalModel","fallbackResp","_unused","_x2","sanitizeSensitiveData","length","undefined","piiPatterns","email","phone","turkishId","names","creditCard","address","dateOfBirth","piiDetected","sanitizedMessages","sanitizedContent","_ref6","Object","_ref7","type","pattern","matches","match","shouldMask","replace","assign","baseContext","sanitizedContext","userMetadata","fullName","realName","therapeuticProfile","personalDetails","contactInfo","emergencyContacts","generatePromptHash","normalizedMessages","msg","trim","hashInput","JSON","stringify","therapeuticMode","hash","i","char","charCodeAt","Math","abs","toString","_getCachedResponse","promptHash","userId","memoryCached","isCacheEntryValid","substring","cached","storedCache","AsyncStorage","getItem","cacheEntry","parse","removeItem","getCachedResponse","_x3","_x4","_cacheResponse","timestamp","now","ttl","cleanupMemoryCache","setItem","cacheResponse","_x5","_x6","_x7","entry","_this2","sort","a","b","toDelete","slice","forEach","_ref8","_ref9","delete","_checkUserRateLimit","userLimits","validLimits","filter","limit","windowStart","windowSizeMs","windows","sizeMs","maxRequests","_loop","window","windowTracker","find","requests","resetTime","Error","toISOString","RATE_LIMIT","MEDIUM","recoverable","push","checkUserRateLimit","_x8","_getAIResponse","_this3","requestId","random","substr","getFallbackResponse","startTime","combinedText","m","join","edgeResult","analyzeText","text","analysisType","source","metadata","summary","latency","tokens","prompt","split","completion","total","filtered","confidence","category","hasContext","catch","_this$sanitizeSensiti","messageCount","cachedResponse","AI_RESPONSE_GENERATED","checkRateLimit","preparedRequest","prepareRequest","_preview$reverse$find","preview","AI_PROMPT_LOGGED","lastUserMessage","reverse","p","_unused2","stagedTimeouts","lastError","_loop2","_response","controller","AbortController","timer","setTimeout","abort","stage","reqWithTimeout","clearTimeout","e","heuristic","buildHeuristicFallback","FALLBACK_TRIGGERED","_unused3","filterResult","contentFilterService","filterContent","isTherapeutic","allowed","reasonText","isArray","reasons","getFilteredResponse","safetyScore","updateProviderStats","fallbackUsed","_ref0","_error$constructor","UNKNOWN","errorType","constructor","name","getAIResponse","_getStreamingResponse","onChunk","err","getStreamingResponse","_x9","_x0","_x1","_x10","_callGemini","request","_this4","_config$model","req","safeMessages","Boolean","INVALID_REQUEST","PROVIDER_ERROR","hasAbort","timeoutId","normalizedContents","parts","contentsToSend","buildFetchOptions","body","headers","signal","buildBody","contents","generationConfig","maxOutputTokens","attemptModels","Set","includes","_loop3","_data","_data2","_data3","_data4","fetch","modelName","netErr","ok","_detail","detail","json","_unused4","status","AI_RATE_LIMIT_HIT","API_ERROR","_unused5","attempt","_retryAttempt","base","delay","min","pow","floor","res","data","parseErr","contentText","candidates","usageMetadata","promptTokenCount","candidatesTokenCount","totalTokenCount","_ret","callGemini","_x11","bestProvider","bestScore","_ref1","_ref10","score","getBackupProvider","primaryProvider","_makeProviderRequest","_x12","_x13","_prepareRequest","systemPrompt","systemInstruction","_x14","_x15","_x16","_checkRateLimit","count","_x17","max","LOCAL","_this5","_memoryProbeStarted","_memoryProbeTimer","setInterval","cacheEntries","rateTrackers","queueSize","usedHeap","perf","globalThis","performance","memory","usedJSHeapSize","threshold","clear","_unused6","_unused7","_require","getHeuristicText","getAvailableProviders","_ref11","_ref12","_","_ref13","_ref14","getProviderStats","_shutdown","clearInterval","_unused8","EXTERNAL_AI_SHUTDOWN","providersShutdown","shutdown","getInstance","instance","externalAIService","exports","_default"],"sources":["externalAIService.ts"],"sourcesContent":["/**\n * üåê External AI Service - Gemini Integration (Gemini-only)\n * \n * Bu servis, Google Gemini ile g√ºvenli ve etkili entegrasyon saƒülar.\n * Therapeutic context i√ßin optimize edilmi≈ütir. Sadece Gemini desteklenir;\n * yedek saƒülayƒ±cƒ± ve OpenAI/Claude entegrasyonlarƒ± kaldƒ±rƒ±lmƒ±≈ütƒ±r.\n * \n * ‚ö†Ô∏è CRITICAL: T√ºm API √ßaƒürƒ±larƒ± safety filter'dan ge√ßer\n * ‚ö†Ô∏è Feature flag kontrol√º: AI_EXTERNAL_API\n */\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { FEATURE_FLAGS } from '@/constants/featureFlags';\nimport { \n  AIMessage, \n  ConversationContext, \n  UserTherapeuticProfile,\n  AIError,\n  AIErrorCode,\n  ErrorSeverity,\n  isAIError,\n  AIProvider\n} from '@/features/ai/types';\nimport { trackAIInteraction, trackAIError, AIEventType } from '@/features/ai/telemetry/aiTelemetry';\nimport { contentFilterService } from '@/features/ai/safety/contentFilter';\nimport { aiManager } from '@/features/ai/config/aiManager';\nimport Constants from 'expo-constants';\nimport { AI_CONFIG } from '@/constants/featureFlags';\nimport { edgeAIService } from '@/services/edgeAIService';\n\n// =============================================================================\n// üéØ AI PROVIDER DEFINITIONS\n// =============================================================================\n\n// AIProvider enum is imported from '@/features/ai/types'\n\n/**\n * Provider Configuration\n */\nexport interface ProviderConfig {\n  provider: AIProvider;\n  apiKey: string;\n  baseURL: string;\n  model: string;\n  maxTokens: number;\n  temperature: number;\n  timeout: number;\n  isAvailable: boolean;\n  lastHealthCheck: Date;\n  errorCount: number;\n  successRate: number;\n}\n\n/**\n * AI Request Configuration\n */\nexport interface AIRequestConfig {\n  provider?: AIProvider;\n  model?: string;\n  temperature?: number;\n  maxTokens?: number;\n  systemPrompt?: string;\n  useStream?: boolean;\n  includeSafetyInstructions?: boolean;\n  therapeuticMode?: boolean;\n}\n\n/**\n * AI Response with metadata\n */\nexport interface EnhancedAIResponse {\n  success: boolean;\n  content: string;\n  provider: AIProvider;\n  model: string;\n  tokens: {\n    prompt: number;\n    completion: number;\n    total: number;\n  };\n  latency: number;\n  confidence?: number;\n  safetyScore?: number;\n  filtered?: boolean;\n  fallbackUsed?: boolean;\n  timestamp: Date;\n  requestId: string;\n  cached?: boolean; // Cache'den gelip gelmediƒüi\n}\n\n/**\n * Cache configuration\n */\nexport interface CacheConfig {\n  enabled: boolean;\n  ttlMs: number; // Time to live in milliseconds\n  maxSize: number; // Maximum cache entries\n  useStorage: boolean; // Use AsyncStorage for persistence\n}\n\n/**\n * Rate limiting configuration\n */\nexport interface RateLimitConfig {\n  enabled: boolean;\n  requestsPerMinute: number;\n  requestsPerHour: number;\n  requestsPerDay: number;\n  perUser: boolean; // Rate limit per user vs global\n}\n\n/**\n * Cache entry interface\n */\ninterface CacheEntry {\n  response: EnhancedAIResponse;\n  timestamp: number;\n  ttl: number;\n  promptHash: string;\n  userId?: string;\n}\n\n/**\n * Rate limit tracker interface\n */\ninterface RateLimitTracker {\n  requests: number;\n  windowStart: number;\n  windowSizeMs: number;\n  userId?: string;\n}\n\n// =============================================================================\n// üåê EXTERNAL AI SERVICE IMPLEMENTATION\n// =============================================================================\n\nclass ExternalAIService {\n  private static instance: ExternalAIService;\n  private isEnabled: boolean = false;\n  private providers: Map<AIProvider, ProviderConfig> = new Map();\n  private activeProvider: AIProvider | null = null;\n  private requestQueue: Map<string, Promise<EnhancedAIResponse>> = new Map();\n  private rateLimiter: Map<AIProvider, { count: number; resetTime: number }> = new Map();\n\n  // Cache & Rate Limiting\n  // DISABLED for CoreAnalysisService v1 - resultCache is now the source of truth\n  private cacheConfig: CacheConfig = {\n    enabled: false, // Disabled - using CoreAnalysisService resultCache instead\n    ttlMs: 0, // TTL set to 0\n    maxSize: 100,\n    useStorage: false\n  };\n  private rateLimitConfig: RateLimitConfig = {\n    enabled: true,\n    requestsPerMinute: 60,\n    requestsPerHour: 1000,\n    requestsPerDay: 10000,\n    perUser: true\n  };\n  private responseCache: Map<string, CacheEntry> = new Map();\n  private userRateLimits: Map<string, RateLimitTracker[]> = new Map();\n\n  private constructor() {\n    this.initializeProviders();\n  }\n\n  static getInstance(): ExternalAIService {\n    if (!ExternalAIService.instance) {\n      ExternalAIService.instance = new ExternalAIService();\n    }\n    return ExternalAIService.instance;\n  }\n\n  // =============================================================================\n  // üöÄ INITIALIZATION & SETUP\n  // =============================================================================\n\n  /**\n   * External AI Service'i ba≈ülat\n   */\n  async initialize(): Promise<void> {\n    if (__DEV__) console.log('üåê External AI Service: Initializing...');\n    \n    try {\n      // Feature flag kontrol√º\n      if (!FEATURE_FLAGS.isEnabled('AI_EXTERNAL_API')) {\n        if (__DEV__) console.log('üö´ External AI Service disabled by feature flag');\n        this.isEnabled = false;\n        return;\n      }\n\n      // Provider'larƒ± y√ºkle ve test et\n      await this.loadProviderConfigurations();\n      await this.performHealthChecks();\n      \n      // En iyi provider'ƒ± se√ß\n      this.activeProvider = this.selectBestProvider();\n      \n      if (!this.activeProvider) {\n        // NO_PROVIDER_AVAILABLE telemetry (graceful degrade)\n        await trackAIError({\n          code: AIErrorCode.NO_PROVIDER_AVAILABLE,\n          message: 'No AI provider available after health checks',\n          severity: ErrorSeverity.HIGH,\n          context: { \n            component: 'ExternalAIService',\n            method: 'initialize',\n            providersChecked: this.providers.size,\n            healthCheckResults: Array.from(this.providers.entries()).map(([provider, config]) => ({\n              provider,\n              isAvailable: config.isAvailable,\n              lastHealthCheck: config.lastHealthCheck,\n              errorCount: config.errorCount\n            }))\n          }\n        });\n\n        // Disable service but allow local heuristic fallback at call site\n        this.isEnabled = false;\n        if (__DEV__) console.warn('‚ö†Ô∏è External AI disabled (no provider). System will use local fallback responses.');\n        return;\n      }\n\n      this.isEnabled = true;\n      // Hafƒ±za izleme (hafif)\n      this.startMemoryProbe();\n      \n      // Telemetry\n      await trackAIInteraction(AIEventType.EXTERNAL_AI_INITIALIZED, {\n        activeProvider: this.activeProvider,\n        availableProviders: Array.from(this.providers.keys()),\n        totalProviders: this.providers.size\n      });\n\n      if (__DEV__) console.log('‚úÖ External AI Service initialized with provider:', this.activeProvider);\n\n    } catch (error) {\n      console.error('‚ùå External AI Service initialization failed:', error);\n      this.isEnabled = false;\n      \n      await trackAIError({\n        code: AIErrorCode.INITIALIZATION_FAILED,\n        message: 'External AI Service ba≈ülatƒ±lamadƒ±',\n        severity: ErrorSeverity.HIGH,\n        context: { component: 'ExternalAIService', method: 'initialize' }\n      });\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Provider konfig√ºrasyonlarƒ±nƒ± y√ºkle\n   */\n  private async loadProviderConfigurations(): Promise<void> {\n    const extra: any = Constants.expoConfig?.extra || {};\n    \n    const isLikelyPlaceholder = (value?: string) => {\n      if (!value) return true;\n      const v = String(value);\n      return /REPLACE_WITH_REAL|REPLACE|your_?api_?key/i.test(v);\n    };\n\n    // Determine selected provider from Expo env (fallback gemini). Only gemini is supported.\n    const selectedProvider = String(\n      (extra.EXPO_PUBLIC_AI_PROVIDER || process.env.EXPO_PUBLIC_AI_PROVIDER || 'gemini')\n    ).toLowerCase();\n\n    // Remove OpenAI/Claude entirely ‚Äì warn if non-gemini configured\n    if (selectedProvider !== 'gemini') {\n      if (__DEV__) console.warn(`‚ö†Ô∏è Only Gemini is supported. Configured provider '${selectedProvider}' will be ignored.`);\n    }\n\n    // Edge Function Configuration - Gemini API key'leri artƒ±k server-side\n    // Edge function availability check yapƒ±lacak, API key client tarafƒ±nda gerekmiyor\n    const hasEdgeFunction = await edgeAIService.healthCheck();\n    \n    if (selectedProvider === 'gemini') {\n      this.providers.set(AIProvider.GEMINI, {\n        provider: AIProvider.GEMINI,\n        apiKey: hasEdgeFunction ? 'edge-function-proxy' : '', // Placeholder - ger√ßek key server-side\n        baseURL: 'edge-function',\n        model: 'gemini-1.5-flash',\n        maxTokens: 4000,\n        temperature: 0.7,\n        timeout: 30000,\n        isAvailable: hasEdgeFunction,\n        lastHealthCheck: new Date(),\n        errorCount: 0,\n        successRate: 1.0\n      });\n      \n      if (__DEV__) {\n        console.log(`‚úÖ Edge Function configured: ${hasEdgeFunction ? 'Available' : 'Not Available'}`);\n      }\n    }\n\n    // Telemetry: configuration load summary (dinamik)\n    const configuredProviders = Array.from(this.providers.keys());\n    await trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n      component: 'ExternalAIService',\n      event: 'config_loaded',\n      selectedProvider,\n      providersConfigured: configuredProviders,\n    });\n  }\n\n  /**\n   * Provider health check'leri yap\n   */\n  private async performHealthChecks(): Promise<void> {\n    const healthCheckPromises = Array.from(this.providers.entries()).map(\n      async ([provider, config]) => {\n        try {\n          const isHealthy = await this.checkProviderHealth(provider);\n          config.isAvailable = isHealthy;\n          config.lastHealthCheck = new Date();\n          \n          // Telemetry for health result\n          await trackAIInteraction(AIEventType.AI_PROVIDER_HEALTH_CHECK, {\n            provider,\n            isHealthy\n          });\n\n          if (__DEV__) {\n            if (isHealthy) {\n              if (__DEV__) console.log(`‚úÖ ${provider} is available`);\n            } else {\n              if (__DEV__) console.warn(`‚ö†Ô∏è ${provider} is not available`);\n            }\n          }\n        } catch (error) {\n          console.error(`‚ùå Health check failed for ${provider}:`, error);\n          config.isAvailable = false;\n\n          await trackAIInteraction(AIEventType.AI_PROVIDER_FAILED, {\n            provider,\n            reason: 'health_check_failed'\n          });\n        }\n      }\n    );\n\n    await Promise.all(healthCheckPromises);\n  }\n\n  /**\n   * Provider health durumunu kontrol et\n   */\n  private async checkProviderHealth(provider: AIProvider): Promise<boolean> {\n    const config = this.providers.get(provider);\n    if (!config) return false;\n\n    // üöÄ EDGE FUNCTION HEALTH CHECK: Simple availability test\n    if (config.baseURL === 'edge-function') {\n      console.log('üöÄ Checking Edge Function health...');\n      try {\n        // Use edgeAIService health check instead of full API request\n        const edgeHealthy = await edgeAIService.healthCheck();\n        console.log(`‚úÖ Edge Function health check: ${edgeHealthy ? 'Healthy' : 'Unhealthy'}`);\n        return edgeHealthy;\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Edge Function health check failed:', error);\n        return false;\n      }\n    }\n\n    try {\n      // Traditional API health check (fallback - should not be used in production)\n      const response = await this.makeProviderRequest(provider, {\n        messages: [{ role: 'user', content: 'Test' }],\n        maxTokens: 10,\n        temperature: 0\n      });\n\n      return response.success;\n    } catch (error) {\n      // Fallback: try a stable model if current one fails\n      const config = this.providers.get(provider);\n      if (config && config.model !== 'gemini-1.5-pro') {\n        const originalModel = config.model;\n        try {\n          config.model = 'gemini-1.5-pro';\n          const fallbackResp = await this.makeProviderRequest(provider, {\n            messages: [{ role: 'user', content: 'Test' }],\n            maxTokens: 8,\n            temperature: 0\n          });\n          return !!fallbackResp.success;\n        } catch {\n          config.model = originalModel;\n          return false;\n        }\n      }\n      return false;\n    }\n  }\n\n  // =============================================================================\n  // üîí PII SANITIZATION METHODS\n  // =============================================================================\n\n  /**\n   * PII'yi sanitize et - CRITICAL SECURITY FUNCTION\n   */\n  private sanitizeSensitiveData(messages: AIMessage[] = [], context?: ConversationContext): {\n    sanitizedMessages: AIMessage[];\n    sanitizedContext: any;\n    piiDetected: boolean;\n  } {\n    const piiPatterns = {\n      // Email patterns\n      email: /\\b[\\w\\.-]+@[\\w\\.-]+\\.\\w+\\b/gi,\n      // Phone patterns (Turkish and international)\n      phone: /(\\+90|0)?[\\s\\-\\.]?5\\d{2}[\\s\\-\\.]?\\d{3}[\\s\\-\\.]?\\d{2}[\\s\\-\\.]?\\d{2}|\\b\\d{11,}\\b/gi,\n      // Turkish ID numbers (11 digits)\n      turkishId: /\\b\\d{11}\\b/gi,\n      // Names (basic pattern - capital letters followed by lowercase)\n      names: /\\b[A-Z√áƒûƒ∞√ñ≈û√ú][a-z√ßƒüƒ±√∂≈ü√º]+\\s[A-Z√áƒûƒ∞√ñ≈û√ú][a-z√ßƒüƒ±√∂≈ü√º]+\\b/gi,\n      // Credit card patterns\n      creditCard: /\\b\\d{4}[\\s\\-]?\\d{4}[\\s\\-]?\\d{4}[\\s\\-]?\\d{4}\\b/gi,\n      // Address patterns (street names with numbers)\n      address: /\\b\\d+\\s+[A-Z√áƒûƒ∞√ñ≈û√ú][a-z√ßƒüƒ±√∂≈ü√º]+\\s+(Cd|Sk|St|Street|Caddesi|Sokaƒüƒ±)\\b/gi,\n      // Date of birth patterns\n      dateOfBirth: /\\b(\\d{1,2}[\\/\\-\\.]\\d{1,2}[\\/\\-\\.]\\d{4}|\\d{4}[\\/\\-\\.]\\d{1,2}[\\/\\-\\.]\\d{1,2})\\b/gi\n    };\n\n    let piiDetected = false;\n\n    // Sanitize messages\n    const sanitizedMessages = messages.map(message => {\n      let sanitizedContent: string =\n        message?.content != null ? String((message as any).content) : '';\n      \n      // Apply PII patterns\n      for (const [type, pattern] of Object.entries(piiPatterns)) {\n        const matches = sanitizedContent.match(pattern);\n        // Require at least 2 name matches to reduce over-masking; phones require >=1 but >=11 digits\n        const shouldMask = !!matches && (type !== 'names' || matches.length >= 2);\n        if (shouldMask) {\n          piiDetected = true;\n          if (__DEV__) console.warn(`üîí PII detected and sanitized: ${type} (${matches.length} instances)`);\n          \n          switch (type) {\n            case 'email':\n              sanitizedContent = sanitizedContent.replace(pattern, '[EMAIL]');\n              break;\n            case 'phone':\n              sanitizedContent = sanitizedContent.replace(pattern, '[PHONE]');\n              break;\n            case 'turkishId':\n              sanitizedContent = sanitizedContent.replace(pattern, '[ID_NUMBER]');\n              break;\n            case 'names':\n              sanitizedContent = sanitizedContent.replace(pattern, '[NAME]');\n              break;\n            case 'creditCard':\n              sanitizedContent = sanitizedContent.replace(pattern, '[CREDIT_CARD]');\n              break;\n            case 'address':\n              sanitizedContent = sanitizedContent.replace(pattern, '[ADDRESS]');\n              break;\n            case 'dateOfBirth':\n              sanitizedContent = sanitizedContent.replace(pattern, '[DATE]');\n              break;\n          }\n        }\n      }\n\n      return {\n        ...message,\n        content: sanitizedContent\n      };\n    });\n\n    // Sanitize context (remove sensitive metadata)\n    const baseContext: any = context && typeof context === 'object' ? context : {};\n    const sanitizedContext: any = {\n      ...baseContext,\n      // Remove potentially sensitive fields\n      userMetadata: (baseContext as any).userMetadata ? {\n        ...(baseContext as any).userMetadata,\n        email: undefined,\n        phone: undefined,\n        fullName: undefined,\n        realName: undefined\n      } : undefined,\n      \n      // Keep therapeutic context but sanitize personal details\n      therapeuticProfile: (baseContext as any).therapeuticProfile ? {\n        ...(baseContext as any).therapeuticProfile,\n        personalDetails: undefined, // Remove personal details\n        contactInfo: undefined, // Remove contact info\n        emergencyContacts: undefined // Remove emergency contacts\n      } : undefined\n    };\n\n    return {\n      sanitizedMessages,\n      sanitizedContext,\n      piiDetected\n    };\n  }\n\n  // =============================================================================\n  // üóÇÔ∏è CACHE & RATE LIMITING METHODS\n  // =============================================================================\n\n  /**\n   * Normalize edilmi≈ü prompt hash olu≈ütur\n   */\n  private generatePromptHash(messages: AIMessage[], context: ConversationContext, config?: AIRequestConfig): string {\n    const normalizedMessages = messages.map(msg => ({\n      role: msg.role,\n      content: msg.content.trim().toLowerCase()\n    }));\n    \n    const hashInput = JSON.stringify({\n      messages: normalizedMessages,\n      provider: config?.provider || this.activeProvider,\n      model: config?.model,\n      temperature: config?.temperature || 0.7,\n      therapeuticMode: config?.therapeuticMode !== false\n    });\n    \n    // Simple hash function - production'da crypto hash kullanƒ±lmalƒ±\n    let hash = 0;\n    for (let i = 0; i < hashInput.length; i++) {\n      const char = hashInput.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return Math.abs(hash).toString(16);\n  }\n\n  /**\n   * Cache'den response al\n   */\n  private async getCachedResponse(promptHash: string, userId?: string): Promise<EnhancedAIResponse | null> {\n    if (!this.cacheConfig.enabled) return null;\n\n    // Memory cache kontrol√º\n    const memoryCached = this.responseCache.get(promptHash);\n    if (memoryCached && this.isCacheEntryValid(memoryCached)) {\n    if (__DEV__) console.log('üì¶ Cache hit (memory):', promptHash.substring(0, 8));\n      return { ...memoryCached.response, cached: true };\n    }\n\n    // AsyncStorage cache kontrol√º\n    if (this.cacheConfig.useStorage) {\n      try {\n        const storedCache = await AsyncStorage.getItem(`ai_cache_${promptHash}`);\n        if (storedCache) {\n          const cacheEntry: CacheEntry = JSON.parse(storedCache);\n          if (this.isCacheEntryValid(cacheEntry)) {\n            // Memory cache'e de ekle\n            this.responseCache.set(promptHash, cacheEntry);\n            if (__DEV__) console.log('üì¶ Cache hit (storage):', promptHash.substring(0, 8));\n            return { ...cacheEntry.response, cached: true };\n          } else {\n            // Expired cache'i temizle\n            await AsyncStorage.removeItem(`ai_cache_${promptHash}`);\n          }\n        }\n      } catch (error) {\n        console.error('‚ùå Cache read error:', error);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Response'u cache'le\n   */\n  private async cacheResponse(promptHash: string, response: EnhancedAIResponse, userId?: string): Promise<void> {\n    if (!this.cacheConfig.enabled || !response.success) return;\n\n    const cacheEntry: CacheEntry = {\n      response: { ...response, cached: false }, // Cache flag'i kaldƒ±r\n      timestamp: Date.now(),\n      ttl: this.cacheConfig.ttlMs,\n      promptHash,\n      userId\n    };\n\n    // Memory cache\n    this.responseCache.set(promptHash, cacheEntry);\n    this.cleanupMemoryCache();\n\n    // AsyncStorage cache\n    if (this.cacheConfig.useStorage) {\n      try {\n        await AsyncStorage.setItem(`ai_cache_${promptHash}`, JSON.stringify(cacheEntry));\n      } catch (error) {\n        console.error('‚ùå Cache write error:', error);\n      }\n    }\n\n    if (__DEV__) console.log('üì¶ Response cached:', promptHash.substring(0, 8));\n  }\n\n  /**\n   * Cache entry'sinin ge√ßerli olup olmadƒ±ƒüƒ±nƒ± kontrol et\n   */\n  private isCacheEntryValid(entry: CacheEntry): boolean {\n    const now = Date.now();\n    return (now - entry.timestamp) < entry.ttl;\n  }\n\n  /**\n   * Memory cache'i temizle\n   */\n  private cleanupMemoryCache(): void {\n    if (this.responseCache.size <= this.cacheConfig.maxSize) return;\n\n    // En eski entry'leri sil\n    const entries = Array.from(this.responseCache.entries());\n    entries.sort((a, b) => a[1].timestamp - b[1].timestamp);\n    \n    const toDelete = entries.slice(0, entries.length - this.cacheConfig.maxSize);\n    toDelete.forEach(([key]) => this.responseCache.delete(key));\n  }\n\n  /**\n   * User-specific rate limit kontrol√º\n   */\n  private async checkUserRateLimit(userId?: string): Promise<void> {\n    if (!this.rateLimitConfig.enabled || !userId) return;\n\n    const now = Date.now();\n    const userLimits = this.userRateLimits.get(userId) || [];\n\n    // Expired trackers'larƒ± temizle\n    const validLimits = userLimits.filter(limit => \n      (now - limit.windowStart) < limit.windowSizeMs\n    );\n\n    // Current windows i√ßin tracker'larƒ± olu≈ütur\n    const windows = [\n      { sizeMs: 60 * 1000, maxRequests: this.rateLimitConfig.requestsPerMinute }, // 1 minute\n      { sizeMs: 60 * 60 * 1000, maxRequests: this.rateLimitConfig.requestsPerHour }, // 1 hour  \n      { sizeMs: 24 * 60 * 60 * 1000, maxRequests: this.rateLimitConfig.requestsPerDay } // 1 day\n    ];\n\n    for (const window of windows) {\n      const windowTracker = validLimits.find(limit => limit.windowSizeMs === window.sizeMs);\n      \n      if (windowTracker) {\n        if (windowTracker.requests >= window.maxRequests) {\n          const resetTime = new Date(windowTracker.windowStart + window.sizeMs);\n          const error = new Error(`Rate limit exceeded. Resets at: ${resetTime.toISOString()}`);\n          (error as any).code = AIErrorCode.RATE_LIMIT;\n          (error as any).severity = ErrorSeverity.MEDIUM;\n          (error as any).recoverable = true;\n          throw error;\n        }\n        windowTracker.requests++;\n      } else {\n        validLimits.push({\n          requests: 1,\n          windowStart: now,\n          windowSizeMs: window.sizeMs,\n          userId\n        });\n      }\n    }\n\n    this.userRateLimits.set(userId, validLimits);\n  }\n\n  // =============================================================================\n  // üéØ CORE AI METHODS\n  // =============================================================================\n\n  /**\n   * AI'dan yanƒ±t al - Ana metod (Cache & Rate Limiting ile) - Edge Function entegrasyonu\n   */\n  async getAIResponse(\n    messages: AIMessage[] = [],\n    context: ConversationContext = {} as any,\n    config?: AIRequestConfig,\n    userId?: string\n  ): Promise<EnhancedAIResponse> {\n    const requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    if (!this.isEnabled) {\n      // Graceful local fallback when external AI is disabled/unavailable\n      return this.getFallbackResponse(requestId, 0);\n    }\n    const startTime = Date.now();\n\n    // üöÄ EDGE FUNCTION ROUTE: Ge√ßici olarak edge function kullan\n    const hasEdgeFunction = await edgeAIService.healthCheck();\n    if (hasEdgeFunction && userId) {\n      try {\n        // Messages'ƒ± tek bir text string'e d√∂n√º≈üt√ºr\n        const combinedText = messages.map(m => m.content).join(' ');\n        \n        const edgeResult = await edgeAIService.analyzeText({\n          text: combinedText,\n          userId,\n          analysisType: 'mixed',\n          context: {\n            source: 'cbt',\n            metadata: context\n          }\n        });\n\n        if (edgeResult) {\n          return {\n            success: true,\n            content: edgeResult.summary,\n            requestId,\n            provider: 'edge-function',\n            model: 'gemini-via-edge',\n            latency: Date.now() - startTime,\n            tokens: {\n              prompt: combinedText.split(' ').length,\n              completion: edgeResult.summary.split(' ').length,\n              total: combinedText.split(' ').length + edgeResult.summary.split(' ').length\n            },\n            cached: false,\n            filtered: false,\n            metadata: {\n              confidence: edgeResult.confidence,\n              category: edgeResult.category\n            }\n          };\n        }\n      } catch (error) {\n        console.warn('üö® Edge function failed, falling back to standard flow:', error);\n      }\n    }\n\n    try {\n      // üîí CRITICAL: PII Sanitization FIRST\n      const hasContext = !!context && typeof context === 'object' && Object.keys(context).length > 0;\n      if (!hasContext) {\n        // Non-blocking telemetry to detect regressions where context is omitted\n        trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n          event: 'missing_context_for_ai_request'\n        }, userId).catch(() => {});\n      }\n\n      const { sanitizedMessages, sanitizedContext, piiDetected } = this.sanitizeSensitiveData(messages || [], context || ({} as any));\n      \n      if (piiDetected) {\n        if (__DEV__) console.warn('üîí PII detected and sanitized before AI request');\n        // Track PII detection for security monitoring\n        await trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n          piiDetected: true,\n          userId: userId,\n          messageCount: messages.length\n        });\n      }\n\n      // User-specific rate limiting kontrol√º\n      await this.checkUserRateLimit(userId);\n\n      // Cache kontrol√º (sanitized data ile)\n      const promptHash = this.generatePromptHash(sanitizedMessages, sanitizedContext, config);\n      const cachedResponse = await this.getCachedResponse(promptHash, userId);\n      if (cachedResponse) {\n        cachedResponse.requestId = requestId;\n        \n        // Cache hit telemetry\n        await trackAIInteraction(AIEventType.AI_RESPONSE_GENERATED, {\n          provider: cachedResponse.provider,\n          model: cachedResponse.model,\n          success: true,\n          latency: Date.now() - startTime,\n          tokens: cachedResponse.tokens.total,\n          cached: true,\n          userId: userId\n        });\n        \n        return cachedResponse;\n      }\n\n      // Provider-level rate limiting kontrol√º (backward compatibility)\n      await this.checkRateLimit(config?.provider || this.activeProvider!);\n\n      // Provider se√ß\n      const provider = config?.provider || this.selectBestProvider();\n      if (!provider) {\n        const error = new Error('No AI provider available');\n        (error as any).code = AIErrorCode.NO_PROVIDER_AVAILABLE;\n        (error as any).severity = ErrorSeverity.HIGH;\n        (error as any).recoverable = false;\n        throw error;\n      }\n\n      // Request hazƒ±rla (sanitized data ile)\n      const preparedRequest = await this.prepareRequest(sanitizedMessages, sanitizedContext, config);\n\n      // Optional: Prompt logging (sanitized) ‚Äì controlled by feature flag\n      if (FEATURE_FLAGS.isEnabled('AI_PROMPT_LOGGING')) {\n        try {\n          const preview = (sanitizedMessages || []).map(m => ({ role: m.role, content: m.content })).slice(-8);\n          if (__DEV__) {\n            console.log('üìù [AI_PROMPT_LOGGING] Sanitized Prompt (last messages):', preview);\n          }\n          // Telemetry (non-blocking)\n          trackAIInteraction(AIEventType.AI_PROMPT_LOGGED, {\n            promptHash,\n            messageCount: sanitizedMessages?.length || 0,\n            provider: (config?.provider || this.activeProvider) || 'gemini',\n            model: config?.model,\n            piiDetected,\n            lastUserMessage: preview.reverse().find(p => p.role === 'user')?.content?.slice(0, 280) || null\n          }, userId).catch(() => {});\n        } catch {}\n      }\n      \n      // API √ßaƒürƒ±sƒ± yap (a≈üamalƒ± timeout + AbortController desteƒüi)\n      const stagedTimeouts = [3000, 10000, 30000]; // 3/10/30s\n      let response: EnhancedAIResponse | null = null;\n      let lastError: any = null;\n      for (const stage of stagedTimeouts) {\n        try {\n          const controller = typeof AbortController !== 'undefined' ? new AbortController() : null;\n          const timer = controller ? setTimeout(() => controller.abort(), stage) : null;\n          const reqWithTimeout = { ...preparedRequest, timeout: stage };\n          // Gemini implementasyonunda kendi timeout'u var; yine de dƒ±≈ütan abort saƒülƒ±yoruz\n          response = await this.makeProviderRequest(provider, reqWithTimeout);\n          if (timer) clearTimeout(timer as any);\n          if (response?.success) break;\n        } catch (e) {\n          lastError = e;\n        }\n      }\n      if (!response) {\n        throw lastError || new Error('AI request failed with staged timeouts');\n      }\n      \n      // Fallback mekanizmasƒ± (yerel heuristik)\n      if (!response.success) {\n        const heuristic = this.buildHeuristicFallback(messages, context);\n        // Telemetry: fallback tetiklendi\n        try { await trackAIInteraction(AIEventType.FALLBACK_TRIGGERED, { provider, reason: 'primary_failed' }, userId); } catch {}\n        return { ...heuristic, requestId, latency: Date.now() - startTime };\n      }\n\n      // Content filtering\n      if (response.success && config?.therapeuticMode !== false) {\n        const filterResult = await contentFilterService.filterContent(\n          { content: response.content } as AIMessage,\n          { isTherapeutic: true }\n        );\n        \n        if (!filterResult.allowed) {\n          response.filtered = true;\n          const reasonText = Array.isArray(filterResult.reasons) && filterResult.reasons.length > 0\n            ? filterResult.reasons[0]\n            : 'content_filtered';\n          response.content = this.getFilteredResponse(reasonText);\n          response.safetyScore = 0.1;\n        } else {\n          response.safetyScore = filterResult.confidence || 0.9;\n        }\n      }\n\n      // Metadata tamamla\n      response.latency = Date.now() - startTime;\n      response.requestId = requestId;\n      response.timestamp = new Date();\n\n      // Provider statistics g√ºncelle\n      this.updateProviderStats(provider, response.success);\n\n      // Cache successful responses\n      if (response.success && !response.filtered) {\n        await this.cacheResponse(promptHash, response, userId);\n      }\n\n      // Telemetry\n      await trackAIInteraction(AIEventType.AI_RESPONSE_GENERATED, {\n        provider,\n        model: response.model,\n        success: response.success,\n        latency: response.latency,\n        tokens: response.tokens.total,\n        filtered: response.filtered,\n        fallbackUsed: response.fallbackUsed,\n        cached: false,\n        userId: userId\n      });\n\n      return response;\n\n    } catch (error) {\n      console.error('‚ùå AI response generation failed:', error);\n      \n      const latency = Date.now() - startTime;\n      \n      await trackAIError({\n        code: (((error as any)?.code as AIErrorCode) ?? AIErrorCode.UNKNOWN) as any,\n        message: 'AI yanƒ±tƒ± alƒ±namadƒ±',\n        severity: ErrorSeverity.HIGH,\n        context: { \n          component: 'ExternalAIService', \n          method: 'getAIResponse',\n          provider: config?.provider || this.activeProvider,\n          latency,\n          requestId,\n          errorType: error?.constructor?.name || 'Unknown'\n        }\n      });\n\n      // Fallback response d√∂nd√ºr\n      return this.getFallbackResponse(requestId, latency);\n    }\n  }\n\n  /**\n   * Streaming AI response (gelecek i√ßin)\n   */\n  async getStreamingResponse(\n    messages: AIMessage[],\n    context: ConversationContext,\n    onChunk: (chunk: string) => void,\n    config?: AIRequestConfig\n  ): Promise<EnhancedAIResponse> {\n    // Future implementation for streaming\n    const err = new Error('Streaming not yet implemented');\n    (err as any).code = AIErrorCode.UNKNOWN;\n    throw err;\n  }\n\n  // =============================================================================\n  // üîß PROVIDER-SPECIFIC IMPLEMENTATIONS\n  // =============================================================================\n\n  // OpenAI ve Claude √ßaƒürƒ±larƒ± kaldƒ±rƒ±ldƒ±; yalnƒ±zca Gemini desteklenir\n\n  /**\n   * Gemini API √ßaƒürƒ±sƒ±\n   */\n  private async callGemini(request: any): Promise<EnhancedAIResponse> {\n    const config = this.providers.get(AIProvider.GEMINI)!;\n    const startTime = Date.now();\n\n    try {\n      // Normalize request object\n      const req: any = request && typeof request === 'object' ? request : {};\n      \n      // üöÄ EDGE FUNCTION ROUTE: Use Supabase Edge Functions for Gemini API calls\n      if (config?.baseURL === 'edge-function') {\n        console.log('üöÄ Using Edge Function for Gemini API call...');\n        \n        // Extract messages from request\n        const safeMessages = Array.isArray(req.messages) ? (req.messages as any[]).filter(Boolean) : [];\n        const combinedText = safeMessages.map((m: any) => {\n          const text = (m && m.content != null) ? String(m.content) : '';\n          return text;\n        }).join(' ').trim();\n\n        if (!combinedText) {\n          const err = new Error('No text content provided for analysis');\n          (err as any).code = AIErrorCode.INVALID_REQUEST;\n          throw err;\n        }\n\n        // Call Edge Function via edgeAIService\n        const edgeResult = await edgeAIService.analyzeText({\n          text: combinedText,\n          userId: req.userId || 'unknown',\n          analysisType: 'mixed',\n          context: {\n            source: 'cbt',\n            metadata: req.context\n          }\n        });\n\n        if (edgeResult) {\n          console.log('‚úÖ Edge Function Gemini call successful');\n          return {\n            success: true,\n            content: edgeResult.summary,\n            requestId: `edge_${Date.now()}`,\n            provider: 'edge-function',\n            model: 'gemini-1.5-flash',\n            latency: Date.now() - startTime,\n            tokens: {\n              prompt: combinedText.split(' ').length,\n              completion: edgeResult.summary.split(' ').length,\n              total: combinedText.split(' ').length + edgeResult.summary.split(' ').length\n            },\n            cached: false,\n            filtered: false,\n            metadata: {\n              confidence: edgeResult.confidence,\n              category: edgeResult.category\n            }\n          };\n        } else {\n          console.warn('‚ö†Ô∏è Edge Function returned null result');\n          const err = new Error('Edge Function analysis failed');\n          (err as any).code = AIErrorCode.PROVIDER_ERROR;\n          throw err;\n        }\n      }\n      \n      // Fallback: Traditional API key check (should not be reached in production)\n      if (!config?.apiKey || !config?.baseURL || !config?.model) {\n        const err = new Error('Gemini configuration missing - API key should be in Edge Functions');\n        (err as any).code = AIErrorCode.NO_PROVIDER_AVAILABLE;\n        throw err;\n      }\n      const hasAbort = typeof AbortController !== 'undefined';\n      const controller = hasAbort ? new AbortController() : undefined;\n      const timeoutId = hasAbort ? setTimeout(() => (controller as any)?.abort(), config.timeout) : undefined;\n      // Normalize messages to Gemini format defensively\n      const safeMessages = Array.isArray(req.messages) ? (req.messages as any[]).filter(Boolean) : [];\n      const normalizedContents = safeMessages.map((m: any) => {\n        const role = (m && m.role) ? (m.role === 'assistant' ? 'model' : 'user') : 'user';\n        const text = (m && m.content != null) ? String(m.content) : '';\n        return { role, parts: [{ text }] };\n      });\n      // Ensure at least one message is sent\n      const contentsToSend = normalizedContents.length > 0\n        ? normalizedContents\n        : [{ role: 'user', parts: [{ text: 'Kƒ±sa, g√ºvenli ve terap√∂tik bir yanƒ±t √ºret.' }] }];\n\n      const buildFetchOptions = (body: any) => ({\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'x-goog-api-key': config.apiKey\n        },\n        body: JSON.stringify(body),\n        signal: hasAbort && controller ? (controller as any).signal : undefined\n      } as any);\n\n      const buildBody = () => ({\n        contents: contentsToSend,\n        generationConfig: {\n          temperature: (req && req.temperature) != null ? req.temperature : config.temperature,\n          maxOutputTokens: (req && req.maxTokens) != null ? req.maxTokens : config.maxTokens\n        }\n      });\n\n      const attemptModels: string[] = Array.from(new Set([\n        config.model,\n        config.model?.includes('-latest') ? config.model : `${config.model}-latest`,\n        'gemini-1.5-pro',\n        'gemini-1.5-pro-latest'\n      ].filter(Boolean)));\n\n      let lastError: any = null;\n      for (const modelName of attemptModels) {\n        let response: any;\n        try {\n          response = await fetch(\n            `${config.baseURL}/models/${modelName}:generateContent`,\n            buildFetchOptions(buildBody())\n          );\n        } catch (netErr) {\n          if (__DEV__) console.warn('‚ö†Ô∏è Gemini network error at fetch():', netErr);\n          lastError = netErr;\n          continue;\n        }\n\n        if (!response.ok) {\n          let detail: any = null;\n          try { detail = await response.json(); } catch {}\n          if (__DEV__) console.warn(`‚ö†Ô∏è Gemini API error ${response.status} for model ${modelName}:`, detail?.error || detail || 'no-body');\n          // 400/404 -> model/validation fallbacks deneyelim\n          if (response.status === 400 || response.status === 404) {\n            lastError = detail || { status: response.status };\n            continue;\n          }\n          if (response.status === 429 || response.status >= 500) {\n            // Track rate limit/server error and backoff with jitter\n            try {\n              await trackAIInteraction(\n                response.status === 429 ? AIEventType.AI_RATE_LIMIT_HIT : AIEventType.API_ERROR,\n                { provider: 'gemini', status: response.status, model: modelName }\n              );\n            } catch {}\n\n            const attempt = (this as any)._retryAttempt ? (this as any)._retryAttempt + 1 : 1;\n            (this as any)._retryAttempt = attempt;\n            const base = 500;\n            const delay = Math.min(base * Math.pow(2, attempt), 8000) + Math.floor(Math.random() * 300);\n            await new Promise(res => setTimeout(res, delay));\n            lastError = detail || { status: response.status };\n            continue;\n          }\n          const err = new Error(`Gemini API error: ${response.status}`);\n          (err as any).code = AIErrorCode.PROVIDER_ERROR;\n          (err as any).detail = detail;\n          throw err;\n        }\n\n        let data: any;\n        try {\n          data = await response.json();\n        } catch (parseErr) {\n          if (__DEV__) console.warn('‚ö†Ô∏è Gemini response.json() parse error:', parseErr);\n          lastError = parseErr;\n          continue;\n        }\n\n        const contentText = (data?.candidates?.[0]?.content?.parts?.[0]?.text as string | undefined) || '';\n\n        if (hasAbort && timeoutId) clearTimeout(timeoutId as any);\n\n        return {\n          success: true,\n          content: contentText,\n          provider: AIProvider.GEMINI,\n          model: modelName,\n          tokens: {\n            prompt: (data?.usageMetadata?.promptTokenCount as number | undefined) || 0,\n            completion: (data?.usageMetadata?.candidatesTokenCount as number | undefined) || 0,\n            total: (data?.usageMetadata?.totalTokenCount as number | undefined) || 0\n          },\n          latency: Date.now() - startTime,\n          timestamp: new Date(),\n          requestId: ''\n        };\n      }\n\n      if (hasAbort && timeoutId) clearTimeout(timeoutId as any);\n\n      const err = new Error(`Gemini API call failed (all fallbacks). Last error: ${JSON.stringify(lastError)}`);\n      (err as any).code = AIErrorCode.PROVIDER_ERROR;\n      (err as any).severity = ErrorSeverity.HIGH;\n      (err as any).recoverable = true;\n      throw err;\n\n    } catch (error) {\n      if (__DEV__) console.error('‚ùå Gemini API call failed:', error);\n      const err = new Error(`Gemini API call failed${(error as any)?.message ? `: ${(error as any).message}` : ''}`);\n      (err as any).code = AIErrorCode.PROVIDER_ERROR;\n      (err as any).severity = ErrorSeverity.HIGH;\n      (err as any).recoverable = true;\n      throw err;\n    }\n  }\n\n  // =============================================================================\n  // üîß HELPER METHODS\n  // =============================================================================\n\n  private initializeProviders(): void {\n    // Provider'lar loadProviderConfigurations'da dinamik y√ºklenecek\n    if (__DEV__) console.log('üîß External AI Service providers initialized');\n  }\n\n  private selectBestProvider(): AIProvider | null {\n    let bestProvider: AIProvider | null = null;\n    let bestScore = -1;\n\n    for (const [provider, config] of this.providers.entries()) {\n      if (!config.isAvailable) continue;\n      \n      // Score hesapla: success rate - error count + availability\n      const score = config.successRate * 100 - config.errorCount + (config.isAvailable ? 10 : 0);\n      \n      if (score > bestScore) {\n        bestScore = score;\n        bestProvider = provider;\n      }\n    }\n\n    return bestProvider;\n  }\n\n  private getBackupProvider(primaryProvider: AIProvider): AIProvider | null {\n    // Yalnƒ±zca Gemini desteklenir; yedek saƒülayƒ±cƒ± yok\n    return null;\n  }\n\n  private async makeProviderRequest(provider: AIProvider, request: any): Promise<EnhancedAIResponse> {\n    // Only Gemini is supported\n    return await this.callGemini(request);\n  }\n\n  private async prepareRequest(\n    messages: AIMessage[],\n    context: ConversationContext,\n    config?: AIRequestConfig\n  ): Promise<any> {\n    const body: any = {\n      messages: messages.map(msg => ({\n        role: msg.role,\n        content: msg.content\n      })),\n      maxTokens: config?.maxTokens,\n      temperature: config?.temperature,\n      model: config?.model\n    };\n    if (config?.systemPrompt) {\n      body.systemInstruction = {\n        role: 'system',\n        parts: [{ text: String(config.systemPrompt) }]\n      };\n    }\n    return body;\n  }\n\n  private async checkRateLimit(provider: AIProvider): Promise<void> {\n    const limit = this.rateLimiter.get(provider);\n    const now = Date.now();\n    \n    if (!limit) {\n      this.rateLimiter.set(provider, { count: 1, resetTime: now + 60000 });\n      return;\n    }\n\n    if (now > limit.resetTime) {\n      limit.count = 1;\n      limit.resetTime = now + 60000;\n      return;\n    }\n\n    if (limit.count >= 60) { // 60 requests per minute\n      const err = new Error('Rate limit exceeded');\n      (err as any).code = AIErrorCode.RATE_LIMIT;\n      throw err;\n    }\n\n    limit.count++;\n  }\n\n  private updateProviderStats(provider: AIProvider, success: boolean): void {\n    const config = this.providers.get(provider);\n    if (!config) return;\n\n    if (success) {\n      config.errorCount = Math.max(0, config.errorCount - 1);\n      config.successRate = Math.min(1.0, config.successRate + 0.01);\n    } else {\n      config.errorCount++;\n      config.successRate = Math.max(0.0, config.successRate - 0.05);\n    }\n  }\n\n  private getFilteredResponse(reason: string): string {\n    return `√úzg√ºn√ºm, g√ºvenlik protokolleri nedeniyle bu yanƒ±tƒ± veremiyorum. ${reason} Farklƒ± bir konuda size nasƒ±l yardƒ±mcƒ± olabilirim?`;\n  }\n\n  private getFallbackResponse(requestId: string, latency: number): EnhancedAIResponse {\n    return {\n      success: false,\n      content: '√úzg√ºn√ºm, ≈üu anda AI sistemi kullanƒ±lamƒ±yor. L√ºtfen daha sonra tekrar deneyin. Bu arada nefes alma egzersizi yapmayƒ± deneyebilirsiniz: 4 saniye nefes alƒ±n, 4 saniye tutun, 6 saniye bƒ±rakƒ±n.',\n      provider: AIProvider.LOCAL,\n      model: 'heuristic-fallback',\n      tokens: { prompt: 0, completion: 0, total: 0 },\n      latency,\n      timestamp: new Date(),\n      requestId,\n      fallbackUsed: true\n    };\n  }\n\n  /**\n   * Basit bellek izleme (yakla≈üƒ±k) ve telemetri.\n   */\n  private startMemoryProbe(): void {\n    try {\n      if ((this as any)._memoryProbeStarted) return;\n      (this as any)._memoryProbeStarted = true;\n      (this as any)._memoryProbeTimer = setInterval(() => {\n        try {\n          const cacheEntries = this.responseCache.size;\n          const rateTrackers = this.userRateLimits.size;\n          const queueSize = this.requestQueue.size;\n          let usedHeap = null as null | number;\n          const perf: any = (globalThis as any).performance;\n          if (perf && perf.memory && typeof perf.memory.usedJSHeapSize === 'number') {\n            usedHeap = perf.memory.usedJSHeapSize;\n          }\n          trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n            event: 'memory_probe',\n            usedHeap,\n            cacheEntries,\n            rateTrackers,\n            queueSize\n          }).catch(() => {});\n          // 150MB e≈üiƒüi a≈üƒ±ldƒ±ysa Safe Mode uyarƒ±sƒ±/temizliƒüi\n          const threshold = 150 * 1024 * 1024;\n          if (typeof usedHeap === 'number' && usedHeap > threshold) {\n            // Basit √∂nlem: cache temizle ve uyarƒ± telemetrisi\n            this.responseCache.clear();\n            trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n              event: 'memory_threshold_exceeded',\n              usedHeap\n            }).catch(() => {});\n          }\n        } catch {}\n      }, 60_000);\n    } catch {}\n  }\n\n  /**\n   * Yerel heuristik fallback i√ßerik olu≈üturucu (on-device, privacy-first)\n   */\n  private buildHeuristicFallback(messages: AIMessage[] = [], context?: ConversationContext): EnhancedAIResponse {\n    const { getHeuristicText } = require('@/features/ai/services/heuristicFallback');\n    const text = getHeuristicText(messages, context);\n    return {\n      success: true,\n      content: text,\n      provider: AIProvider.LOCAL,\n      model: 'heuristic-fallback',\n      tokens: { prompt: 0, completion: 0, total: 0 },\n      latency: 0,\n      timestamp: new Date(),\n      requestId: '',\n      fallbackUsed: true\n    };\n  }\n\n  // =============================================================================\n  // üîÑ PUBLIC API\n  // =============================================================================\n\n  /**\n   * Service durumunu kontrol et\n   */\n  get enabled(): boolean {\n    return this.isEnabled && FEATURE_FLAGS.isEnabled('AI_EXTERNAL_API');\n  }\n\n  /**\n   * Aktif provider'ƒ± al\n   */\n  get currentProvider(): AIProvider | null {\n    return this.activeProvider;\n  }\n\n  /**\n   * Mevcut provider'larƒ± al\n   */\n  getAvailableProviders(): AIProvider[] {\n    return Array.from(this.providers.entries())\n      .filter(([_, config]) => config.isAvailable)\n      .map(([provider, _]) => provider);\n  }\n\n  /**\n   * Provider statistiklerini al\n   */\n  getProviderStats(provider: AIProvider): ProviderConfig | undefined {\n    return this.providers.get(provider);\n  }\n\n  /**\n   * Service'i temizle\n   */\n  async shutdown(): Promise<void> {\n    if (__DEV__) console.log('üåê External AI Service: Shutting down...');\n    this.isEnabled = false;\n    this.requestQueue.clear();\n    this.rateLimiter.clear();\n    try {\n      if ((this as any)._memoryProbeTimer) {\n        clearInterval((this as any)._memoryProbeTimer);\n        (this as any)._memoryProbeTimer = undefined;\n        (this as any)._memoryProbeStarted = false;\n      }\n    } catch {}\n    \n    await trackAIInteraction(AIEventType.EXTERNAL_AI_SHUTDOWN, {\n      providersShutdown: this.providers.size\n    });\n  }\n}\n\n// =============================================================================\n// üéØ EXPORT\n// =============================================================================\n\nexport const externalAIService = ExternalAIService.getInstance();\nexport default externalAIService;"],"mappings":"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","ignoreList":[]}