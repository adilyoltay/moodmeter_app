{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_UnimplementedView","React","_interopRequireWildcard","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","has","get","set","_t","hasOwnProperty","call","getOwnPropertyDescriptor","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","DrawerLayoutAndroid","_React$Component","arguments","key","render","jsx","assign","props","openDrawer","Error","closeDrawer","blur","focus","measure","callback","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","setNativeProps","nativeProps","Component"],"sources":["DrawerLayoutAndroid.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\n// import typeof DrawerLayoutAndroid from './DrawerLayoutAndroid.android';\nimport type {\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n} from '../../../src/private/types/HostInstance';\nimport type {\n  DrawerLayoutAndroidMethods,\n  DrawerLayoutAndroidProps,\n  DrawerLayoutAndroidState,\n} from './DrawerLayoutAndroidTypes';\n\nimport UnimplementedView from '../UnimplementedViews/UnimplementedView';\nimport * as React from 'react';\n\nexport type {\n  DrawerLayoutAndroidProps,\n  DrawerSlideEvent,\n} from './DrawerLayoutAndroidTypes';\n\nexport default class DrawerLayoutAndroid\n  extends React.Component<DrawerLayoutAndroidProps, DrawerLayoutAndroidState>\n  implements DrawerLayoutAndroidMethods\n{\n  render(): React.Node {\n    return <UnimplementedView {...this.props} />;\n  }\n\n  openDrawer(): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n\n  closeDrawer(): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n\n  blur(): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n\n  focus(): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n\n  measure(callback: MeasureOnSuccessCallback): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n\n  measureLayout(\n    relativeToNativeNode: number,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void,\n  ): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n\n  // $FlowFixMe[unclear-type]\n  setNativeProps(nativeProps: Object): void {\n    throw new Error('DrawerLayoutAndroid is only available on Android');\n  }\n}\n"],"mappings":"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","ignoreList":[]}