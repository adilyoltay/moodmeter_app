{"version":3,"names":["_StyleSheet","_interopRequireDefault","require","_Platform","_useMergeRefs","_AndroidSwitchNativeComponent","_interopRequireWildcard","_SwitchNativeComponent","React","_jsxRuntime","_excluded","_excluded2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","returnsFalse","returnsTrue","Switch","forwardRef","props","forwardedRef","disabled","ios_backgroundColor","onChange","onValueChange","style","thumbColor","trackColor","value","restProps","_objectWithoutProperties2","trackColorForFalse","false","trackColorForTrue","true","nativeSwitchRef","useRef","ref","useMergeRefs","_React$useState","useState","_React$useState2","_slicedToArray2","native","setNative","handleChange","event","nativeEvent","useLayoutEffect","_nativeSwitchRef$curr","jsValue","shouldUpdateNativeSwitch","current","setNativeProps","Platform","OS","AndroidSwitchCommands","setNativeValue","SwitchCommands","setValue","_props$accessibilityR","onTintColor","tintColor","androidProps","accessibilityState","_disabled","_accessibilityState","assign","platformProps","enabled","on","thumbTintColor","trackTintColor","jsx","accessibilityRole","onResponderTerminationRequest","onStartShouldSetResponder","_props$accessibilityR2","StyleSheet","compose","height","width","backgroundColor","borderRadius","_default","exports"],"sources":["Switch.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {NativeSyntheticEvent} from '../../Types/CoreEventTypes';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport AndroidSwitchNativeComponent, {\n  Commands as AndroidSwitchCommands,\n} from './AndroidSwitchNativeComponent';\nimport SwitchNativeComponent, {\n  Commands as SwitchCommands,\n} from './SwitchNativeComponent';\nimport * as React from 'react';\n\nexport type SwitchPropsIOS = {\n  /**\n   * Background color when the switch is turned on.\n   *\n   * @deprecated use trackColor instead\n   */\n  onTintColor?: ?ColorValue,\n\n  /**\n   * Color of the foreground switch grip.\n   *\n   * @deprecated use thumbColor instead\n   */\n  thumbTintColor?: ?ColorValue,\n\n  /**\n   * Background color when the switch is turned off.\n   *\n   * @deprecated use trackColor instead\n   */\n  tintColor?: ?ColorValue,\n};\n\nexport type SwitchChangeEventData = $ReadOnly<{\n  target: number,\n  value: boolean,\n}>;\n\nexport type SwitchChangeEvent = NativeSyntheticEvent<SwitchChangeEventData>;\n\ntype SwitchPropsBase = {\n  /**\n    If true the user won't be able to toggle the switch.\n\n    @default false\n   */\n  disabled?: ?boolean,\n\n  /**\n      The value of the switch. If true the switch will be turned on.\n\n      @default false\n     */\n  value?: ?boolean,\n\n  /**\n      Color of the foreground switch grip. If this is set on iOS, the switch grip will lose its drop shadow.\n     */\n  thumbColor?: ?ColorValue,\n\n  /**\n      Custom colors for the switch track.\n\n      _iOS_: When the switch value is false, the track shrinks into the border. If you want to change the\n      color of the background exposed by the shrunken track, use\n       [`ios_backgroundColor`](https://reactnative.dev/docs/switch#ios_backgroundColor).\n     */\n  trackColor?: ?$ReadOnly<{\n    false?: ?ColorValue,\n    true?: ?ColorValue,\n  }>,\n\n  /**\n      On iOS, custom color for the background. This background color can be\n      seen either when the switch value is false or when the switch is\n      disabled (and the switch is translucent).\n     */\n  ios_backgroundColor?: ?ColorValue,\n\n  /**\n      Invoked when the user tries to change the value of the switch. Receives\n      the change event as an argument. If you want to only receive the new\n      value, use `onValueChange` instead.\n     */\n  onChange?: ?(event: SwitchChangeEvent) => Promise<void> | void,\n\n  /**\n      Invoked when the user tries to change the value of the switch. Receives\n      the new value as an argument. If you want to instead receive an event,\n      use `onChange`.\n     */\n  onValueChange?: ?(value: boolean) => Promise<void> | void,\n};\n\nexport type SwitchProps = $ReadOnly<{\n  ...ViewProps,\n  ...SwitchPropsIOS,\n  ...SwitchPropsBase,\n}>;\n\nconst returnsFalse = () => false;\nconst returnsTrue = () => true;\n\ntype SwitchRef = React.ElementRef<\n  typeof SwitchNativeComponent | typeof AndroidSwitchNativeComponent,\n>;\n\n/**\n  Renders a boolean input.\n\n  This is a controlled component that requires an `onValueChange`\n  callback that updates the `value` prop in order for the component to\n  reflect user actions. If the `value` prop is not updated, the\n  component will continue to render the supplied `value` prop instead of\n  the expected result of any user actions.\n\n  ```SnackPlayer name=Switch\n  import React, { useState } from \"react\";\n  import { View, Switch, StyleSheet } from \"react-native\";\n\n  const App = () => {\n    const [isEnabled, setIsEnabled] = useState(false);\n    const toggleSwitch = () => setIsEnabled(previousState => !previousState);\n\n    return (\n      <View style={styles.container}>\n        <Switch\n          trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n          thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n          ios_backgroundColor=\"#3e3e3e\"\n          onValueChange={toggleSwitch}\n          value={isEnabled}\n        />\n      </View>\n    );\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  });\n\n  export default App;\n  ```\n */\nconst Switch: component(\n  ref?: React.RefSetter<SwitchRef>,\n  ...props: SwitchProps\n) = React.forwardRef(function Switch(props, forwardedRef): React.Node {\n  const {\n    disabled,\n    ios_backgroundColor,\n    onChange,\n    onValueChange,\n    style,\n    thumbColor,\n    trackColor,\n    value,\n    ...restProps\n  } = props;\n  const trackColorForFalse = trackColor?.false;\n  const trackColorForTrue = trackColor?.true;\n\n  const nativeSwitchRef = React.useRef<React.ElementRef<\n    typeof SwitchNativeComponent | typeof AndroidSwitchNativeComponent,\n  > | null>(null);\n\n  const ref = useMergeRefs(nativeSwitchRef, forwardedRef);\n\n  const [native, setNative] = React.useState({value: (null: ?boolean)});\n\n  const handleChange = (event: SwitchChangeEvent) => {\n    // $FlowFixMe[unused-promise]\n    onChange?.(event);\n    // $FlowFixMe[unused-promise]\n    onValueChange?.(event.nativeEvent.value);\n    setNative({value: event.nativeEvent.value});\n  };\n\n  React.useLayoutEffect(() => {\n    // This is necessary in case native updates the switch and JS decides\n    // that the update should be ignored and we should stick with the value\n    // that we have in JS.\n    const jsValue = value === true;\n    const shouldUpdateNativeSwitch =\n      native.value != null && native.value !== jsValue;\n    if (\n      shouldUpdateNativeSwitch &&\n      // $FlowIssue[method-unbinding]\n      nativeSwitchRef.current?.setNativeProps != null\n    ) {\n      if (Platform.OS === 'android') {\n        AndroidSwitchCommands.setNativeValue(nativeSwitchRef.current, jsValue);\n      } else {\n        SwitchCommands.setValue(nativeSwitchRef.current, jsValue);\n      }\n    }\n  }, [value, native]);\n\n  if (Platform.OS === 'android') {\n    const {onTintColor, tintColor, ...androidProps} = restProps;\n    const {accessibilityState} = androidProps;\n    const _disabled =\n      disabled != null ? disabled : accessibilityState?.disabled;\n\n    const _accessibilityState =\n      _disabled !== accessibilityState?.disabled\n        ? {...accessibilityState, disabled: _disabled}\n        : accessibilityState;\n\n    const platformProps = {\n      accessibilityState: _accessibilityState,\n      enabled: _disabled !== true,\n      on: value === true,\n      style,\n      thumbTintColor: thumbColor,\n      trackColorForFalse: trackColorForFalse,\n      trackColorForTrue: trackColorForTrue,\n      trackTintColor: value === true ? trackColorForTrue : trackColorForFalse,\n    };\n\n    return (\n      <AndroidSwitchNativeComponent\n        {...androidProps}\n        {...platformProps}\n        accessibilityRole={props.accessibilityRole ?? 'switch'}\n        onChange={handleChange}\n        onResponderTerminationRequest={returnsFalse}\n        onStartShouldSetResponder={returnsTrue}\n        ref={ref}\n      />\n    );\n  } else {\n    const platformProps = {\n      disabled,\n      onTintColor: trackColorForTrue,\n      style: StyleSheet.compose(\n        {height: 31, width: 51},\n        StyleSheet.compose(\n          style,\n          ios_backgroundColor == null\n            ? null\n            : {\n                backgroundColor: ios_backgroundColor,\n                borderRadius: 16,\n              },\n        ),\n      ),\n      thumbTintColor: thumbColor,\n      tintColor: trackColorForFalse,\n      value: value === true,\n    };\n\n    return (\n      <SwitchNativeComponent\n        {...restProps}\n        {...platformProps}\n        accessibilityRole={props.accessibilityRole ?? 'switch'}\n        onChange={handleChange}\n        onResponderTerminationRequest={returnsFalse}\n        onStartShouldSetResponder={returnsTrue}\n        ref={ref}\n      />\n    );\n  }\n});\n\nexport default Switch;\n"],"mappings":"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","ignoreList":[]}