{"version":3,"names":["_jestMatcherUtils","require","_redent","_interopRequireDefault","_accessibility","_errors","_formatElement","_hostComponentNames","_utils","e","__esModule","default","toBeChecked","element","_this","checkHostElement","isHostSwitch","isSupportedAccessibilityElement","ErrorWithStack","pass","computeAriaChecked","message","is","isNot","matcherHint","formatElement","join","isAccessibilityElement","role","getRole","rolesSupportingCheckedState"],"sources":["../../src/matchers/to-be-checked.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { matcherHint } from 'jest-matcher-utils';\nimport redent from 'redent';\n\nimport {\n  computeAriaChecked,\n  getRole,\n  isAccessibilityElement,\n  rolesSupportingCheckedState,\n} from '../helpers/accessibility';\nimport { ErrorWithStack } from '../helpers/errors';\nimport { formatElement } from '../helpers/format-element';\nimport { isHostSwitch } from '../helpers/host-component-names';\nimport { checkHostElement } from './utils';\n\nexport function toBeChecked(this: jest.MatcherContext, element: ReactTestInstance) {\n  checkHostElement(element, toBeChecked, this);\n\n  if (!isHostSwitch(element) && !isSupportedAccessibilityElement(element)) {\n    throw new ErrorWithStack(\n      `toBeChecked() works only on host \"Switch\" elements or accessibility elements with \"checkbox\", \"radio\" or \"switch\" role.`,\n      toBeChecked,\n    );\n  }\n\n  return {\n    pass: computeAriaChecked(element) === true,\n    message: () => {\n      const is = this.isNot ? 'is' : 'is not';\n      return [\n        matcherHint(`${this.isNot ? '.not' : ''}.toBeChecked`, 'element', ''),\n        '',\n        `Received element ${is} checked:`,\n        redent(formatElement(element), 2),\n      ].join('\\n');\n    },\n  };\n}\n\nfunction isSupportedAccessibilityElement(element: ReactTestInstance) {\n  if (!isAccessibilityElement(element)) {\n    return false;\n  }\n\n  const role = getRole(element);\n  return rolesSupportingCheckedState[role];\n}\n"],"mappings":";;;;;;AACA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,cAAA,GAAAH,OAAA;AAMA,IAAAI,OAAA,GAAAJ,OAAA;AACA,IAAAK,cAAA,GAAAL,OAAA;AACA,IAAAM,mBAAA,GAAAN,OAAA;AACA,IAAAO,MAAA,GAAAP,OAAA;AAA2C,SAAAE,uBAAAM,CAAA;EAAA,OAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAEpC,SAASG,WAAWA,CAA4BC,OAA0B,EAAE;EAAA,IAAAC,KAAA;EACjF,IAAAN,MAAA,CAAAO,gBAAgB,EAACF,OAAO,EAAED,WAAW,EAAE,IAAI,CAAC;EAE5C,IAAI,CAAC,IAAAL,mBAAA,CAAAS,YAAY,EAACH,OAAO,CAAC,IAAI,CAACI,+BAA+B,CAACJ,OAAO,CAAC,EAAE;IACvE,MAAM,IAAIR,OAAA,CAAAa,cAAc,CACtB,yHAAyH,EACzHN,WACF,CAAC;EACH;EAEA,OAAO;IACLO,IAAI,EAAE,IAAAf,cAAA,CAAAgB,kBAAkB,EAACP,OAAO,CAAC,KAAK,IAAI;IAC1CQ,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;MACb,IAAMC,EAAE,GAAGR,KAAI,CAACS,KAAK,GAAG,IAAI,GAAG,QAAQ;MACvC,OAAO,CACL,IAAAvB,iBAAA,CAAAwB,WAAW,EAAC,GAAGV,KAAI,CAACS,KAAK,GAAG,MAAM,GAAG,EAAE,cAAc,EAAE,SAAS,EAAE,EAAE,CAAC,EACrE,EAAE,EACF,oBAAoBD,EAAE,WAAW,EACjC,IAAApB,OAAA,CAAAS,OAAM,EAAC,IAAAL,cAAA,CAAAmB,aAAa,EAACZ,OAAO,CAAC,EAAE,CAAC,CAAC,CAClC,CAACa,IAAI,CAAC,IAAI,CAAC;IACd;EACF,CAAC;AACH;AAEA,SAAST,+BAA+BA,CAACJ,OAA0B,EAAE;EACnE,IAAI,CAAC,IAAAT,cAAA,CAAAuB,sBAAsB,EAACd,OAAO,CAAC,EAAE;IACpC,OAAO,KAAK;EACd;EAEA,IAAMe,IAAI,GAAG,IAAAxB,cAAA,CAAAyB,OAAO,EAAChB,OAAO,CAAC;EAC7B,OAAOT,cAAA,CAAA0B,2BAA2B,CAACF,IAAI,CAAC;AAC1C","ignoreList":[]}