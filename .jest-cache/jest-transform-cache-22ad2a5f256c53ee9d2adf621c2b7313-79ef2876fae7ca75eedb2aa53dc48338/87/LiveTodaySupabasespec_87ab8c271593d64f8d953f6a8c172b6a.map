{"version":3,"names":["_UnifiedAIPipeline","require","_supabaseTestClient","userId","process","env","TEST_SEED_USER_ID","supabase","createSupabaseTestClient","cleanup","_cleanup","apply","arguments","_asyncToGenerator2","default","from","delete","ilike","eq","describe","beforeAll","TEST_MODE","TEST_TTL_MS","TEST_PIPELINE_STUB","EXPO_PUBLIC_ENABLE_AI","afterAll","it","moods","Array","length","_","i","timestamp","Date","now","mood_score","unifiedPipeline","type","content","context","source","_yield$supabase$from$","select","limit","data","error","expect","toBeNull","toBeGreaterThan","second","metadata","toBe","triggerInvalidation","_yield$supabase$from$2"],"sources":["LiveTodaySupabase.spec.ts"],"sourcesContent":["/**\n * Live Supabase Tests â€” Today (QRlive)\n * Tags: [QRlive:today:fresh|cache|invalidate]\n */\nimport { unifiedPipeline } from '@/features/ai/core/UnifiedAIPipeline';\nimport { createSupabaseTestClient } from './utils/supabaseTestClient';\n\nconst userId = process.env.TEST_SEED_USER_ID || 'test-user-live-1';\nconst supabase = createSupabaseTestClient();\n\nasync function cleanup() {\n  await supabase.from('ai_cache').delete().ilike('cache_key', `unified:${userId}:%`).eq('user_id', userId);\n  await supabase.from('ai_telemetry').delete().eq('user_id', userId);\n}\n\ndescribe('Live Today Supabase', () => {\n  beforeAll(async () => {\n    process.env.TEST_MODE = '1';\n    process.env.TEST_TTL_MS = '5000';\n    process.env.TEST_PIPELINE_STUB = '0';\n    process.env.EXPO_PUBLIC_ENABLE_AI = 'true';\n    await cleanup();\n  });\n\n  afterAll(async () => {\n    await cleanup();\n  });\n\n  it('[QRlive:today:fresh] writes ai_cache on fresh run', async () => {\n    const moods = Array.from({ length: 10 }, (_, i) => ({ timestamp: Date.now() - i * 3600e3, mood_score: 7 }));\n    await unifiedPipeline.process({ userId, type: 'data', content: { moods }, context: { source: 'mood' } });\n\n    const { data, error } = await supabase\n      .from('ai_cache')\n      .select('cache_key, content, expires_at')\n      .eq('user_id', userId)\n      .ilike('cache_key', `unified:${userId}:%`)\n      .limit(1);\n    expect(error).toBeNull();\n    expect((data || []).length).toBeGreaterThan(0);\n  });\n\n  it('[QRlive:today:cache] reads from cache on second run', async () => {\n    const moods = Array.from({ length: 8 }, (_, i) => ({ timestamp: Date.now() - i * 1800e3, mood_score: 6.5 }));\n    await unifiedPipeline.process({ userId, type: 'data', content: { moods }, context: { source: 'mood' } });\n    const second = await unifiedPipeline.process({ userId, type: 'data', content: { moods }, context: { source: 'mood' } });\n    expect(second.metadata.source).toBe('cache');\n  });\n\n  it('[QRlive:today:invalidate] deletes ai_cache rows on invalidation', async () => {\n    await unifiedPipeline.triggerInvalidation('mood_added', userId);\n    const { data, error } = await supabase\n      .from('ai_cache')\n      .select('cache_key')\n      .eq('user_id', userId)\n      .ilike('cache_key', `unified:${userId}:%`);\n    expect(error).toBeNull();\n    expect((data || []).length).toBe(0);\n  });\n});\n\n\n"],"mappings":";;AAIA,IAAAA,kBAAA,GAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAD,OAAA;AAEA,IAAME,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,kBAAkB;AAClE,IAAMC,QAAQ,GAAG,IAAAC,4CAAwB,EAAC,CAAC;AAAC,SAE7BC,OAAOA,CAAA;EAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,SAAA;EAAAA,QAAA,OAAAG,kBAAA,CAAAC,OAAA,EAAtB,aAAyB;IACvB,MAAMP,QAAQ,CAACQ,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,WAAW,EAAE,WAAWd,MAAM,IAAI,CAAC,CAACe,EAAE,CAAC,SAAS,EAAEf,MAAM,CAAC;IACxG,MAAMI,QAAQ,CAACQ,IAAI,CAAC,cAAc,CAAC,CAACC,MAAM,CAAC,CAAC,CAACE,EAAE,CAAC,SAAS,EAAEf,MAAM,CAAC;EACpE,CAAC;EAAA,OAAAO,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEDO,QAAQ,CAAC,qBAAqB,EAAE,YAAM;EACpCC,SAAS,KAAAP,kBAAA,CAAAC,OAAA,EAAC,aAAY;IACpBV,OAAO,CAACC,GAAG,CAACgB,SAAS,GAAG,GAAG;IAC3BjB,OAAO,CAACC,GAAG,CAACiB,WAAW,GAAG,MAAM;IAChClB,OAAO,CAACC,GAAG,CAACkB,kBAAkB,GAAG,GAAG;IACpCnB,OAAO,CAACC,GAAG,CAACmB,qBAAqB,GAAG,MAAM;IAC1C,MAAMf,OAAO,CAAC,CAAC;EACjB,CAAC,EAAC;EAEFgB,QAAQ,KAAAZ,kBAAA,CAAAC,OAAA,EAAC,aAAY;IACnB,MAAML,OAAO,CAAC,CAAC;EACjB,CAAC,EAAC;EAEFiB,EAAE,CAAC,mDAAmD,MAAAb,kBAAA,CAAAC,OAAA,EAAE,aAAY;IAClE,IAAMa,KAAK,GAAGC,KAAK,CAACb,IAAI,CAAC;MAAEc,MAAM,EAAE;IAAG,CAAC,EAAE,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAM;QAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,CAAC,GAAG,MAAM;QAAEI,UAAU,EAAE;MAAE,CAAC;IAAA,CAAC,CAAC;IAC3G,MAAMC,kCAAe,CAAChC,OAAO,CAAC;MAAED,MAAM,EAANA,MAAM;MAAEkC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAEX,KAAK,EAALA;MAAM,CAAC;MAAEY,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE,CAAC,CAAC;IAExG,IAAAC,qBAAA,SAA8BlC,QAAQ,CACnCQ,IAAI,CAAC,UAAU,CAAC,CAChB2B,MAAM,CAAC,gCAAgC,CAAC,CACxCxB,EAAE,CAAC,SAAS,EAAEf,MAAM,CAAC,CACrBc,KAAK,CAAC,WAAW,EAAE,WAAWd,MAAM,IAAI,CAAC,CACzCwC,KAAK,CAAC,CAAC,CAAC;MALHC,IAAI,GAAAH,qBAAA,CAAJG,IAAI;MAAEC,KAAK,GAAAJ,qBAAA,CAALI,KAAK;IAMnBC,MAAM,CAACD,KAAK,CAAC,CAACE,QAAQ,CAAC,CAAC;IACxBD,MAAM,CAAC,CAACF,IAAI,IAAI,EAAE,EAAEf,MAAM,CAAC,CAACmB,eAAe,CAAC,CAAC,CAAC;EAChD,CAAC,EAAC;EAEFtB,EAAE,CAAC,qDAAqD,MAAAb,kBAAA,CAAAC,OAAA,EAAE,aAAY;IACpE,IAAMa,KAAK,GAAGC,KAAK,CAACb,IAAI,CAAC;MAAEc,MAAM,EAAE;IAAE,CAAC,EAAE,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAM;QAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,CAAC,GAAG,MAAM;QAAEI,UAAU,EAAE;MAAI,CAAC;IAAA,CAAC,CAAC;IAC5G,MAAMC,kCAAe,CAAChC,OAAO,CAAC;MAAED,MAAM,EAANA,MAAM;MAAEkC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAEX,KAAK,EAALA;MAAM,CAAC;MAAEY,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE,CAAC,CAAC;IACxG,IAAMS,MAAM,SAASb,kCAAe,CAAChC,OAAO,CAAC;MAAED,MAAM,EAANA,MAAM;MAAEkC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAEX,KAAK,EAALA;MAAM,CAAC;MAAEY,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE,CAAC,CAAC;IACvHM,MAAM,CAACG,MAAM,CAACC,QAAQ,CAACV,MAAM,CAAC,CAACW,IAAI,CAAC,OAAO,CAAC;EAC9C,CAAC,EAAC;EAEFzB,EAAE,CAAC,iEAAiE,MAAAb,kBAAA,CAAAC,OAAA,EAAE,aAAY;IAChF,MAAMsB,kCAAe,CAACgB,mBAAmB,CAAC,YAAY,EAAEjD,MAAM,CAAC;IAC/D,IAAAkD,sBAAA,SAA8B9C,QAAQ,CACnCQ,IAAI,CAAC,UAAU,CAAC,CAChB2B,MAAM,CAAC,WAAW,CAAC,CACnBxB,EAAE,CAAC,SAAS,EAAEf,MAAM,CAAC,CACrBc,KAAK,CAAC,WAAW,EAAE,WAAWd,MAAM,IAAI,CAAC;MAJpCyC,IAAI,GAAAS,sBAAA,CAAJT,IAAI;MAAEC,KAAK,GAAAQ,sBAAA,CAALR,KAAK;IAKnBC,MAAM,CAACD,KAAK,CAAC,CAACE,QAAQ,CAAC,CAAC;IACxBD,MAAM,CAAC,CAACF,IAAI,IAAI,EAAE,EAAEf,MAAM,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;EACrC,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}