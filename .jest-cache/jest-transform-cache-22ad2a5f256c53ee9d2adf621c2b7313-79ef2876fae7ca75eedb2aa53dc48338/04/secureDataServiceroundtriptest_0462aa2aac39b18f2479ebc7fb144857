85bdb7fd4d5cc03152661edde5fdbdff
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _secureDataService = _interopRequireDefault(require("../../services/encryption/secureDataService"));
describe('secureDataService AES-GCM round-trip', function () {
  it('encrypts and decrypts unicode and large payloads correctly (AES-256-GCM)', (0, _asyncToGenerator2.default)(function* () {
    var sample = {
      text: 'Merhaba üåø d√ºny√¢ ‚Äî „Åì„Çì„Å´„Å°„ÅØ ‚Äî ŸÖÿ±ÿ≠ÿ®ÿß ‚Äî üòÄ',
      long: 'x'.repeat(256 * 1024),
      nested: {
        a: 1,
        b: [1, 2, 3],
        c: {
          d: '√ßƒü√º≈üi√∂'
        }
      }
    };
    var encrypted = yield _secureDataService.default.encryptData(sample);
    if (encrypted.algorithm !== 'AES-256-GCM') {
      return;
    }
    var decrypted = yield _secureDataService.default.decryptData(encrypted);
    expect(decrypted).toBeTruthy();
    expect(decrypted.text).toBe(sample.text);
    expect(decrypted.long.length).toBe(sample.long.length);
    expect(decrypted.nested.c.d).toBe(sample.nested.c.d);
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc2VjdXJlRGF0YVNlcnZpY2UiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImRlc2NyaWJlIiwiaXQiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0Iiwic2FtcGxlIiwidGV4dCIsImxvbmciLCJyZXBlYXQiLCJuZXN0ZWQiLCJhIiwiYiIsImMiLCJkIiwiZW5jcnlwdGVkIiwic2VjdXJlRGF0YVNlcnZpY2UiLCJlbmNyeXB0RGF0YSIsImFsZ29yaXRobSIsImRlY3J5cHRlZCIsImRlY3J5cHREYXRhIiwiZXhwZWN0IiwidG9CZVRydXRoeSIsInRvQmUiLCJsZW5ndGgiXSwic291cmNlcyI6WyJzZWN1cmVEYXRhU2VydmljZS5yb3VuZHRyaXAudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc2VjdXJlRGF0YVNlcnZpY2UsIHsgRW5jcnlwdGVkRGF0YSB9IGZyb20gJ0Avc2VydmljZXMvZW5jcnlwdGlvbi9zZWN1cmVEYXRhU2VydmljZSc7XG5cbmRlc2NyaWJlKCdzZWN1cmVEYXRhU2VydmljZSBBRVMtR0NNIHJvdW5kLXRyaXAnLCAoKSA9PiB7XG4gIGl0KCdlbmNyeXB0cyBhbmQgZGVjcnlwdHMgdW5pY29kZSBhbmQgbGFyZ2UgcGF5bG9hZHMgY29ycmVjdGx5IChBRVMtMjU2LUdDTSknLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gU2tpcCBpZiBydW50aW1lIGZhbGxzIGJhY2sgdG8gU0hBMjU2X0ZBTExCQUNLIChlLmcuLCBtaXNzaW5nIHF1aWNrLWNyeXB0bylcbiAgICBjb25zdCBzYW1wbGUgPSB7XG4gICAgICB0ZXh0OiAnTWVyaGFiYSDwn4y/IGTDvG55w6Ig4oCUIOOBk+OCk+OBq+OBoeOBryDigJQg2YXYsdit2KjYpyDigJQg8J+YgCcsXG4gICAgICBsb25nOiAneCcucmVwZWF0KDI1NiAqIDEwMjQpLCAvLyAyNTYgS0IgcGF5bG9hZFxuICAgICAgbmVzdGVkOiB7IGE6IDEsIGI6IFsxLDIsM10sIGM6IHsgZDogJ8OnxJ/DvMWfacO2JyB9IH1cbiAgICB9O1xuICAgIGNvbnN0IGVuY3J5cHRlZDogRW5jcnlwdGVkRGF0YSA9IGF3YWl0IHNlY3VyZURhdGFTZXJ2aWNlLmVuY3J5cHREYXRhKHNhbXBsZSk7XG4gICAgaWYgKGVuY3J5cHRlZC5hbGdvcml0aG0gIT09ICdBRVMtMjU2LUdDTScpIHtcbiAgICAgIC8vIEVudmlyb25tZW50IGRvZXMgbm90IHN1cHBvcnQgQUVTIChlLmcuLCBDSSB3aXRob3V0IHF1aWNrLWNyeXB0byk7IHRoaXMgaXMgYWNjZXB0YWJsZVxuICAgICAgLy8gZm9yIG5vbi1zZWNyZXQgdGVsZW1ldHJ5IGZhbGxiYWNrLiBTa2lwIHN0cmljdCByb3VuZC10cmlwIGFzc2VydGlvbi5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgZGVjcnlwdGVkID0gYXdhaXQgc2VjdXJlRGF0YVNlcnZpY2UuZGVjcnlwdERhdGEoZW5jcnlwdGVkKTtcbiAgICBleHBlY3QoZGVjcnlwdGVkKS50b0JlVHJ1dGh5KCk7XG4gICAgZXhwZWN0KChkZWNyeXB0ZWQgYXMgYW55KS50ZXh0KS50b0JlKHNhbXBsZS50ZXh0KTtcbiAgICBleHBlY3QoKGRlY3J5cHRlZCBhcyBhbnkpLmxvbmcubGVuZ3RoKS50b0JlKHNhbXBsZS5sb25nLmxlbmd0aCk7XG4gICAgZXhwZWN0KChkZWNyeXB0ZWQgYXMgYW55KS5uZXN0ZWQuYy5kKS50b0JlKHNhbXBsZS5uZXN0ZWQuYy5kKTtcbiAgfSk7XG59KTtcblxuXG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsa0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUVBQyxRQUFRLENBQUMsc0NBQXNDLEVBQUUsWUFBTTtFQUNyREMsRUFBRSxDQUFDLDBFQUEwRSxNQUFBQyxrQkFBQSxDQUFBQyxPQUFBLEVBQUUsYUFBWTtJQUV6RixJQUFNQyxNQUFNLEdBQUc7TUFDYkMsSUFBSSxFQUFFLHVDQUF1QztNQUM3Q0MsSUFBSSxFQUFFLEdBQUcsQ0FBQ0MsTUFBTSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUM7TUFDNUJDLE1BQU0sRUFBRTtRQUFFQyxDQUFDLEVBQUUsQ0FBQztRQUFFQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztRQUFFQyxDQUFDLEVBQUU7VUFBRUMsQ0FBQyxFQUFFO1FBQVM7TUFBRTtJQUNqRCxDQUFDO0lBQ0QsSUFBTUMsU0FBd0IsU0FBU0MsMEJBQWlCLENBQUNDLFdBQVcsQ0FBQ1gsTUFBTSxDQUFDO0lBQzVFLElBQUlTLFNBQVMsQ0FBQ0csU0FBUyxLQUFLLGFBQWEsRUFBRTtNQUd6QztJQUNGO0lBQ0EsSUFBTUMsU0FBUyxTQUFTSCwwQkFBaUIsQ0FBQ0ksV0FBVyxDQUFDTCxTQUFTLENBQUM7SUFDaEVNLE1BQU0sQ0FBQ0YsU0FBUyxDQUFDLENBQUNHLFVBQVUsQ0FBQyxDQUFDO0lBQzlCRCxNQUFNLENBQUVGLFNBQVMsQ0FBU1osSUFBSSxDQUFDLENBQUNnQixJQUFJLENBQUNqQixNQUFNLENBQUNDLElBQUksQ0FBQztJQUNqRGMsTUFBTSxDQUFFRixTQUFTLENBQVNYLElBQUksQ0FBQ2dCLE1BQU0sQ0FBQyxDQUFDRCxJQUFJLENBQUNqQixNQUFNLENBQUNFLElBQUksQ0FBQ2dCLE1BQU0sQ0FBQztJQUMvREgsTUFBTSxDQUFFRixTQUFTLENBQVNULE1BQU0sQ0FBQ0csQ0FBQyxDQUFDQyxDQUFDLENBQUMsQ0FBQ1MsSUFBSSxDQUFDakIsTUFBTSxDQUFDSSxNQUFNLENBQUNHLENBQUMsQ0FBQ0MsQ0FBQyxDQUFDO0VBQy9ELENBQUMsRUFBQztBQUNKLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==