{"version":3,"names":["_StyleSheet","_interopRequireDefault","require","_LayoutConformanceNativeComponent","React","_interopRequireWildcard","_jsxRuntime","_global","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","isFabricUIManagerInstalled","global","nativeFabricUIManager","LayoutConformance","props","jsx","assign","style","styles","container","UnimplementedLayoutConformance","__DEV__","warnOnce","children","_default","exports","StyleSheet","create","display"],"sources":["LayoutConformance.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport LayoutConformanceNativeComponent from './LayoutConformanceNativeComponent';\nimport * as React from 'react';\n\nexport type LayoutConformanceProps = $ReadOnly<{\n  /**\n   * strict: Layout in accordance with W3C spec, even when breaking\n   * compatibility: Layout with the same behavior as previous versions of React Native\n   */\n  mode: 'strict' | 'compatibility',\n\n  children: React.Node,\n}>;\n\n// We want a graceful fallback for apps using legacy arch, but need to know\n// ahead of time whether the component is available, so we test for global.\n// This does not correctly handle mixed arch apps (which is okay, since we just\n// degrade the error experience).\nconst isFabricUIManagerInstalled = global?.nativeFabricUIManager != null;\n\nfunction LayoutConformance(props: LayoutConformanceProps): React.Node {\n  return (\n    <LayoutConformanceNativeComponent {...props} style={styles.container} />\n  );\n}\n\nfunction UnimplementedLayoutConformance(\n  props: LayoutConformanceProps,\n): React.Node {\n  if (__DEV__) {\n    const warnOnce = require('../../Utilities/warnOnce').default;\n\n    warnOnce(\n      'layoutconformance-unsupported',\n      '\"LayoutConformance\" is only supported in the New Architecture',\n    );\n  }\n\n  return props.children;\n}\n\nexport default (isFabricUIManagerInstalled\n  ? LayoutConformance\n  : UnimplementedLayoutConformance) as component(...LayoutConformanceProps);\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'contents',\n  },\n});\n"],"mappings":";;;;;AAWA,IAAAA,WAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,iCAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAC,uBAAA,CAAAH,OAAA;AAA+B,IAAAI,WAAA,GAAAJ,OAAA;AAAA,IAAAK,OAAA;AAAA,SAAAF,wBAAAG,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAL,uBAAA,YAAAA,wBAAAG,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAgB/B,IAAMmB,0BAA0B,GAAG,EAAArB,OAAA,GAAAsB,MAAM,qBAANtB,OAAA,CAAQuB,qBAAqB,KAAI,IAAI;AAExE,SAASC,iBAAiBA,CAACC,KAA6B,EAAc;EACpE,OACE,IAAA1B,WAAA,CAAA2B,GAAA,EAAC9B,iCAAA,CAAAe,OAAgC,EAAAO,MAAA,CAAAS,MAAA,KAAKF,KAAK;IAAEG,KAAK,EAAEC,MAAM,CAACC;EAAU,EAAE,CAAC;AAE5E;AAEA,SAASC,8BAA8BA,CACrCN,KAA6B,EACjB;EACZ,IAAIO,OAAO,EAAE;IACX,IAAMC,QAAQ,GAAGtC,OAAO,2BAA2B,CAAC,CAACgB,OAAO;IAE5DsB,QAAQ,CACN,+BAA+B,EAC/B,+DACF,CAAC;EACH;EAEA,OAAOR,KAAK,CAACS,QAAQ;AACvB;AAAC,IAAAC,QAAA,GAAAC,OAAA,CAAAzB,OAAA,GAEeU,0BAA0B,GACtCG,iBAAiB,GACjBO,8BAA8B;AAElC,IAAMF,MAAM,GAAGQ,mBAAU,CAACC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,OAAO,EAAE;EACX;AACF,CAAC,CAAC","ignoreList":[]}