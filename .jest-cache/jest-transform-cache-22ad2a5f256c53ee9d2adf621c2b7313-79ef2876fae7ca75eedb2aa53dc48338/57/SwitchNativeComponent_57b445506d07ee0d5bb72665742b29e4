d8f95f102e743e81708252abcbaf9ac5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = void 0;
var _codegenNativeCommands = _interopRequireDefault(require("../../../../Libraries/Utilities/codegenNativeCommands"));
var _codegenNativeComponent = _interopRequireDefault(require("../../../../Libraries/Utilities/codegenNativeComponent"));
var React = _interopRequireWildcard(require("react"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');
var _require = require('react-native/Libraries/NativeComponent/ViewConfigIgnore'),
  ConditionallyIgnoredEventHandlers = _require.ConditionallyIgnoredEventHandlers;
var _require2 = require("react-native/Libraries/ReactNative/RendererProxy"),
  dispatchCommand = _require2.dispatchCommand;
var nativeComponentName = 'RCTSwitch';
var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
  uiViewClassName: "RCTSwitch",
  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: "onChangeCapture",
        bubbled: "onChange"
      }
    }
  },
  validAttributes: Object.assign({
    disabled: true,
    value: true,
    tintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    onTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    thumbTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    thumbColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    trackColorForFalse: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    trackColorForTrue: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    }
  }, ConditionallyIgnoredEventHandlers({
    onChange: true
  }))
};
var _default = exports.default = NativeComponentRegistry.get(nativeComponentName, function () {
  return __INTERNAL_VIEW_CONFIG;
});
var Commands = exports.Commands = {
  setValue: function setValue(ref, value) {
    dispatchCommand(ref, "setValue", [value]);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29kZWdlbk5hdGl2ZUNvbW1hbmRzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfY29kZWdlbk5hdGl2ZUNvbXBvbmVudCIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIk5hdGl2ZUNvbXBvbmVudFJlZ2lzdHJ5IiwiX3JlcXVpcmUiLCJDb25kaXRpb25hbGx5SWdub3JlZEV2ZW50SGFuZGxlcnMiLCJfcmVxdWlyZTIiLCJkaXNwYXRjaENvbW1hbmQiLCJuYXRpdmVDb21wb25lbnROYW1lIiwiX19JTlRFUk5BTF9WSUVXX0NPTkZJRyIsImV4cG9ydHMiLCJ1aVZpZXdDbGFzc05hbWUiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJ0b3BDaGFuZ2UiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsImNhcHR1cmVkIiwiYnViYmxlZCIsInZhbGlkQXR0cmlidXRlcyIsImFzc2lnbiIsImRpc2FibGVkIiwidmFsdWUiLCJ0aW50Q29sb3IiLCJwcm9jZXNzIiwib25UaW50Q29sb3IiLCJ0aHVtYlRpbnRDb2xvciIsInRodW1iQ29sb3IiLCJ0cmFja0NvbG9yRm9yRmFsc2UiLCJ0cmFja0NvbG9yRm9yVHJ1ZSIsIm9uQ2hhbmdlIiwiX2RlZmF1bHQiLCJDb21tYW5kcyIsInNldFZhbHVlIiwicmVmIl0sInNvdXJjZXMiOlsiU3dpdGNoTmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7Vmlld1Byb3BzfSBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvQ29tcG9uZW50cy9WaWV3L1ZpZXdQcm9wVHlwZXMnO1xuaW1wb3J0IHR5cGUge0NvbG9yVmFsdWV9IGZyb20gJy4uLy4uLy4uLy4uL0xpYnJhcmllcy9TdHlsZVNoZWV0L1N0eWxlU2hlZXQnO1xuaW1wb3J0IHR5cGUge1xuICBCdWJibGluZ0V2ZW50SGFuZGxlcixcbiAgSW50MzIsXG4gIFdpdGhEZWZhdWx0LFxufSBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvVHlwZXMvQ29kZWdlblR5cGVzJztcbmltcG9ydCB0eXBlIHtIb3N0Q29tcG9uZW50fSBmcm9tICcuLi8uLi90eXBlcy9Ib3N0Q29tcG9uZW50JztcblxuaW1wb3J0IGNvZGVnZW5OYXRpdmVDb21tYW5kcyBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvVXRpbGl0aWVzL2NvZGVnZW5OYXRpdmVDb21tYW5kcyc7XG5pbXBvcnQgY29kZWdlbk5hdGl2ZUNvbXBvbmVudCBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvVXRpbGl0aWVzL2NvZGVnZW5OYXRpdmVDb21wb25lbnQnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG50eXBlIFN3aXRjaENoYW5nZUV2ZW50ID0gJFJlYWRPbmx5PHtcbiAgdmFsdWU6IGJvb2xlYW4sXG4gIHRhcmdldDogSW50MzIsXG59PjtcblxudHlwZSBOYXRpdmVQcm9wcyA9ICRSZWFkT25seTx7XG4gIC4uLlZpZXdQcm9wcyxcblxuICAvLyBQcm9wc1xuICBkaXNhYmxlZD86IFdpdGhEZWZhdWx0PGJvb2xlYW4sIGZhbHNlPixcbiAgdmFsdWU/OiBXaXRoRGVmYXVsdDxib29sZWFuLCBmYWxzZT4sXG4gIHRpbnRDb2xvcj86ID9Db2xvclZhbHVlLFxuICBvblRpbnRDb2xvcj86ID9Db2xvclZhbHVlLFxuICB0aHVtYlRpbnRDb2xvcj86ID9Db2xvclZhbHVlLFxuXG4gIC8vIERlcHJlY2F0ZWQgcHJvcHNcbiAgdGh1bWJDb2xvcj86ID9Db2xvclZhbHVlLFxuICB0cmFja0NvbG9yRm9yRmFsc2U/OiA/Q29sb3JWYWx1ZSxcbiAgdHJhY2tDb2xvckZvclRydWU/OiA/Q29sb3JWYWx1ZSxcblxuICAvLyBFdmVudHNcbiAgb25DaGFuZ2U/OiA/QnViYmxpbmdFdmVudEhhbmRsZXI8U3dpdGNoQ2hhbmdlRXZlbnQ+LFxufT47XG5cbnR5cGUgQ29tcG9uZW50VHlwZSA9IEhvc3RDb21wb25lbnQ8TmF0aXZlUHJvcHM+O1xuXG5pbnRlcmZhY2UgTmF0aXZlQ29tbWFuZHMge1xuICArc2V0VmFsdWU6ICh2aWV3UmVmOiBSZWFjdC5FbGVtZW50UmVmPENvbXBvbmVudFR5cGU+LCB2YWx1ZTogYm9vbGVhbikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGNvbnN0IENvbW1hbmRzOiBOYXRpdmVDb21tYW5kcyA9IGNvZGVnZW5OYXRpdmVDb21tYW5kczxOYXRpdmVDb21tYW5kcz4oe1xuICBzdXBwb3J0ZWRDb21tYW5kczogWydzZXRWYWx1ZSddLFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IChjb2RlZ2VuTmF0aXZlQ29tcG9uZW50PE5hdGl2ZVByb3BzPignU3dpdGNoJywge1xuICBwYXBlckNvbXBvbmVudE5hbWU6ICdSQ1RTd2l0Y2gnLFxuICBleGNsdWRlZFBsYXRmb3JtczogWydhbmRyb2lkJ10sXG59KTogQ29tcG9uZW50VHlwZSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBbUJBLElBQUFBLHNCQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyx1QkFBQSxHQUFBRixzQkFB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