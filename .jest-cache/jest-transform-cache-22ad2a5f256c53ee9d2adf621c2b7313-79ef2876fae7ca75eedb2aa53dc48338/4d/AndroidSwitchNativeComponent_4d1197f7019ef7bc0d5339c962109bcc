7047a3c3bfbcad8fd62594acd1ed9bef
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.__INTERNAL_VIEW_CONFIG = exports.Commands = void 0;
var _codegenNativeCommands = _interopRequireDefault(require("../../../../Libraries/Utilities/codegenNativeCommands"));
var _codegenNativeComponent = _interopRequireDefault(require("../../../../Libraries/Utilities/codegenNativeComponent"));
var React = _interopRequireWildcard(require("react"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');
var _require = require('react-native/Libraries/NativeComponent/ViewConfigIgnore'),
  ConditionallyIgnoredEventHandlers = _require.ConditionallyIgnoredEventHandlers;
var _require2 = require("react-native/Libraries/ReactNative/RendererProxy"),
  dispatchCommand = _require2.dispatchCommand;
var nativeComponentName = 'AndroidSwitch';
var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
  uiViewClassName: "AndroidSwitch",
  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: "onChangeCapture",
        bubbled: "onChange"
      }
    }
  },
  validAttributes: Object.assign({
    disabled: true,
    enabled: true,
    thumbColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    trackColorForFalse: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    trackColorForTrue: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    value: true,
    on: true,
    thumbTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    },
    trackTintColor: {
      process: require('react-native/Libraries/StyleSheet/processColor').default
    }
  }, ConditionallyIgnoredEventHandlers({
    onChange: true
  }))
};
var _default = exports.default = NativeComponentRegistry.get(nativeComponentName, function () {
  return __INTERNAL_VIEW_CONFIG;
});
var Commands = exports.Commands = {
  setNativeValue: function setNativeValue(ref, value) {
    dispatchCommand(ref, "setNativeValue", [value]);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29kZWdlbk5hdGl2ZUNvbW1hbmRzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfY29kZWdlbk5hdGl2ZUNvbXBvbmVudCIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIk5hdGl2ZUNvbXBvbmVudFJlZ2lzdHJ5IiwiX3JlcXVpcmUiLCJDb25kaXRpb25hbGx5SWdub3JlZEV2ZW50SGFuZGxlcnMiLCJfcmVxdWlyZTIiLCJkaXNwYXRjaENvbW1hbmQiLCJuYXRpdmVDb21wb25lbnROYW1lIiwiX19JTlRFUk5BTF9WSUVXX0NPTkZJRyIsImV4cG9ydHMiLCJ1aVZpZXdDbGFzc05hbWUiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJ0b3BDaGFuZ2UiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsImNhcHR1cmVkIiwiYnViYmxlZCIsInZhbGlkQXR0cmlidXRlcyIsImFzc2lnbiIsImRpc2FibGVkIiwiZW5hYmxlZCIsInRodW1iQ29sb3IiLCJwcm9jZXNzIiwidHJhY2tDb2xvckZvckZhbHNlIiwidHJhY2tDb2xvckZvclRydWUiLCJ2YWx1ZSIsIm9uIiwidGh1bWJUaW50Q29sb3IiLCJ0cmFja1RpbnRDb2xvciIsIm9uQ2hhbmdlIiwiX2RlZmF1bHQiLCJDb21tYW5kcyIsInNldE5hdGl2ZVZhbHVlIiwicmVmIl0sInNvdXJjZXMiOlsiQW5kcm9pZFN3aXRjaE5hdGl2ZUNvbXBvbmVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IHR5cGUge1ZpZXdQcm9wc30gZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL0NvbXBvbmVudHMvVmlldy9WaWV3UHJvcFR5cGVzJztcbmltcG9ydCB0eXBlIHtDb2xvclZhbHVlfSBmcm9tICcuLi8uLi8uLi8uLi9MaWJyYXJpZXMvU3R5bGVTaGVldC9TdHlsZVNoZWV0JztcbmltcG9ydCB0eXBlIHtcbiAgQnViYmxpbmdFdmVudEhhbmRsZXIsXG4gIEludDMyLFxuICBXaXRoRGVmYXVsdCxcbn0gZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1R5cGVzL0NvZGVnZW5UeXBlcyc7XG5pbXBvcnQgdHlwZSB7SG9zdENvbXBvbmVudH0gZnJvbSAnLi4vLi4vdHlwZXMvSG9zdENvbXBvbmVudCc7XG5cbmltcG9ydCBjb2RlZ2VuTmF0aXZlQ29tbWFuZHMgZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1V0aWxpdGllcy9jb2RlZ2VuTmF0aXZlQ29tbWFuZHMnO1xuaW1wb3J0IGNvZGVnZW5OYXRpdmVDb21wb25lbnQgZnJvbSAnLi4vLi4vLi4vLi4vTGlicmFyaWVzL1V0aWxpdGllcy9jb2RlZ2VuTmF0aXZlQ29tcG9uZW50JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxudHlwZSBTd2l0Y2hDaGFuZ2VFdmVudCA9ICRSZWFkT25seTx7XG4gIHZhbHVlOiBib29sZWFuLFxuICB0YXJnZXQ6IEludDMyLFxufT47XG5cbnR5cGUgTmF0aXZlUHJvcHMgPSAkUmVhZE9ubHk8e1xuICAuLi5WaWV3UHJvcHMsXG5cbiAgLy8gUHJvcHNcbiAgZGlzYWJsZWQ/OiBXaXRoRGVmYXVsdDxib29sZWFuLCBmYWxzZT4sXG4gIGVuYWJsZWQ/OiBXaXRoRGVmYXVsdDxib29sZWFuLCB0cnVlPixcbiAgdGh1bWJDb2xvcj86ID9Db2xvclZhbHVlLFxuICB0cmFja0NvbG9yRm9yRmFsc2U/OiA/Q29sb3JWYWx1ZSxcbiAgdHJhY2tDb2xvckZvclRydWU/OiA/Q29sb3JWYWx1ZSxcbiAgdmFsdWU/OiBXaXRoRGVmYXVsdDxib29sZWFuLCBmYWxzZT4sXG4gIG9uPzogV2l0aERlZmF1bHQ8Ym9vbGVhbiwgZmFsc2U+LFxuICB0aHVtYlRpbnRDb2xvcj86ID9Db2xvclZhbHVlLFxuICB0cmFja1RpbnRDb2xvcj86ID9Db2xvclZhbHVlLFxuXG4gIC8vIEV2ZW50c1xuICBvbkNoYW5nZT86IEJ1YmJsaW5nRXZlbnRIYW5kbGVyPFN3aXRjaENoYW5nZUV2ZW50Pixcbn0+O1xuXG50eXBlIE5hdGl2ZVR5cGUgPSBIb3N0Q29tcG9uZW50PE5hdGl2ZVByb3BzPjtcblxuaW50ZXJmYWNlIE5hdGl2ZUNvbW1hbmRzIHtcbiAgK3NldE5hdGl2ZVZhbHVlOiAoXG4gICAgdmlld1JlZjogUmVhY3QuRWxlbWVudFJlZjxOYXRpdmVUeXBlPixcbiAgICB2YWx1ZTogYm9vbGVhbixcbiAgKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgY29uc3QgQ29tbWFuZHM6IE5hdGl2ZUNvbW1hbmRzID0gY29kZWdlbk5hdGl2ZUNvbW1hbmRzPE5hdGl2ZUNvbW1hbmRzPih7XG4gIHN1cHBvcnRlZENvbW1hbmRzOiBbJ3NldE5hdGl2ZVZhbHVlJ10sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgKGNvZGVnZW5OYXRpdmVDb21wb25lbnQ8TmF0aXZlUHJvcHM+KCdBbmRyb2lkU3dpdGNoJywge1xuICBpbnRlcmZhY2VPbmx5OiB0cnVlLFxufSk6IE5hdGl2ZVR5cGUpO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQW1CQSxJQUFBQSxzQkFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FB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