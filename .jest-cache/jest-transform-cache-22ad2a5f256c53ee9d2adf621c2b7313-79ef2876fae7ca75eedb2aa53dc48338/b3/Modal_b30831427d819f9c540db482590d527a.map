{"version":3,"names":["_NativeEventEmitter","_interopRequireDefault","require","_ModalInjection","_NativeModalManager","_RCTModalHostViewNativeComponent","_virtualizedLists","_react","_jsxRuntime","_ModalInjection$unsta","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","ScrollView","View","AppContainer","I18nManager","_require","RootTagContext","StyleSheet","Platform","VirtualizedListContextResetter","VirtualizedLists","ModalEventEmitter","OS","NativeModalManager","NativeEventEmitter","uniqueModalIdentifier","confirmProps","props","__DEV__","presentationStyle","transparent","console","warn","navigationBarTranslucent","statusBarTranslucent","Modal","_React$Component","_this","_classCallCheck2","_identifier","state","isRendered","visible","_inherits2","_createClass2","key","value","componentDidMount","_this2","_eventSubscription","addListener","event","setState","modalID","onDismiss","componentWillUnmount","remove","componentDidUpdate","prevProps","_shouldShowModal","render","_this$props$backdropC","_this3","containerStyles","backgroundColor","backdropColor","animationType","innerChildren","jsx","rootTag","context","children","hardwareAccelerated","onRequestClose","onShow","identifier","style","styles","modal","onStartShouldSetResponder","_shouldSetResponder","supportedOrientations","onOrientationChange","testID","Context","Provider","container","collapsable","React","Component","defaultProps","contextType","side","getConstants","isRTL","create","position","_defineProperty2","ExportedModal","ModalInjection","unstable_Modal","_default","exports"],"sources":["Modal.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from '../Components/View/ViewPropTypes';\nimport type {RootTag} from '../ReactNative/RootTag';\nimport type {DirectEventHandler} from '../Types/CodegenTypes';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport {type ColorValue} from '../StyleSheet/StyleSheet';\nimport {type EventSubscription} from '../vendor/emitter/EventEmitter';\nimport ModalInjection from './ModalInjection';\nimport NativeModalManager from './NativeModalManager';\nimport RCTModalHostView from './RCTModalHostViewNativeComponent';\nimport VirtualizedLists from '@react-native/virtualized-lists';\nimport React from 'react';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView').default;\nconst View = require('../Components/View/View').default;\nconst AppContainer = require('../ReactNative/AppContainer').default;\nconst I18nManager = require('../ReactNative/I18nManager').default;\nconst {RootTagContext} = require('../ReactNative/RootTag');\nconst StyleSheet = require('../StyleSheet/StyleSheet').default;\nconst Platform = require('../Utilities/Platform').default;\n\nconst VirtualizedListContextResetter =\n  VirtualizedLists.VirtualizedListContextResetter;\n\ntype ModalEventDefinitions = {\n  modalDismissed: [{modalID: number}],\n};\n\nconst ModalEventEmitter =\n  Platform.OS === 'ios' && NativeModalManager != null\n    ? new NativeEventEmitter<ModalEventDefinitions>(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        Platform.OS !== 'ios' ? null : NativeModalManager,\n      )\n    : null;\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n *\n * See https://reactnative.dev/docs/modal\n */\n\n// In order to route onDismiss callbacks, we need to uniquely identifier each\n// <Modal> on screen. There can be different ones, either nested or as siblings.\n// We cannot pass the onDismiss callback to native as the view will be\n// destroyed before the callback is fired.\nlet uniqueModalIdentifier = 0;\n\ntype OrientationChangeEvent = $ReadOnly<{\n  orientation: 'portrait' | 'landscape',\n}>;\n\nexport type ModalBaseProps = {\n  /**\n   * @deprecated Use animationType instead\n   */\n  animated?: boolean,\n  /**\n   * The `animationType` prop controls how the modal animates.\n   *\n   * - `slide` slides in from the bottom\n   * - `fade` fades into view\n   * - `none` appears without an animation\n   */\n  animationType?: ?('none' | 'slide' | 'fade'),\n  /**\n   * The `transparent` prop determines whether your modal will fill the entire view.\n   * Setting this to `true` will render the modal over a transparent background.\n   */\n  transparent?: ?boolean,\n  /**\n   * The `visible` prop determines whether your modal is visible.\n   */\n  visible?: ?boolean,\n  /**\n   * The `onRequestClose` callback is called when the user taps the hardware back button on Android or the menu button on Apple TV.\n   *\n   * This is required on Apple TV and Android.\n   */\n  // onRequestClose?: (event: NativeSyntheticEvent<any>) => void;\n  onRequestClose?: ?DirectEventHandler<null>,\n  /**\n   * The `onShow` prop allows passing a function that will be called once the modal has been shown.\n   */\n  // onShow?: (event: NativeSyntheticEvent<any>) => void;\n  onShow?: ?DirectEventHandler<null>,\n\n  /**\n   * The `backdropColor` props sets the background color of the modal's container.\n   * Defaults to `white` if not provided and transparent is `false`. Ignored if `transparent` is `true`.\n   */\n  backdropColor?: ColorValue,\n};\n\nexport type ModalPropsIOS = {\n  /**\n   * The `presentationStyle` determines the style of modal to show\n   */\n  presentationStyle?: ?(\n    | 'fullScreen'\n    | 'pageSheet'\n    | 'formSheet'\n    | 'overFullScreen'\n  ),\n\n  /**\n   * The `supportedOrientations` prop allows the modal to be rotated to any of the specified orientations.\n   * On iOS, the modal is still restricted by what's specified in your app's Info.plist's UISupportedInterfaceOrientations field.\n   */\n  supportedOrientations?: ?$ReadOnlyArray<\n    | 'portrait'\n    | 'portrait-upside-down'\n    | 'landscape'\n    | 'landscape-left'\n    | 'landscape-right',\n  >,\n\n  /**\n   * The `onDismiss` prop allows passing a function that will be called once the modal has been dismissed.\n   */\n  // onDismiss?: (() => void) | undefined;\n  onDismiss?: ?() => void,\n\n  /**\n   * The `onOrientationChange` callback is called when the orientation changes while the modal is being displayed.\n   * The orientation provided is only 'portrait' or 'landscape'. This callback is also called on initial render, regardless of the current orientation.\n   */\n  // onOrientationChange?:\n  //   | ((event: NativeSyntheticEvent<any>) => void)\n  //   | undefined;\n  onOrientationChange?: ?DirectEventHandler<OrientationChangeEvent>,\n};\n\nexport type ModalPropsAndroid = {\n  /**\n   *  Controls whether to force hardware acceleration for the underlying window.\n   */\n  hardwareAccelerated?: ?boolean,\n\n  /**\n   *  Determines whether your modal should go under the system statusbar.\n   */\n  statusBarTranslucent?: ?boolean,\n\n  /**\n   *  Determines whether your modal should go under the system navigationbar.\n   */\n  navigationBarTranslucent?: ?boolean,\n};\n\nexport type ModalProps = {\n  ...ModalBaseProps,\n  ...ModalPropsIOS,\n  ...ModalPropsAndroid,\n  ...ViewProps,\n};\n\nfunction confirmProps(props: ModalProps) {\n  if (__DEV__) {\n    if (\n      props.presentationStyle &&\n      props.presentationStyle !== 'overFullScreen' &&\n      props.transparent === true\n    ) {\n      console.warn(\n        `Modal with '${props.presentationStyle}' presentation style and 'transparent' value is not supported.`,\n      );\n    }\n    if (\n      props.navigationBarTranslucent === true &&\n      props.statusBarTranslucent !== true\n    ) {\n      console.warn(\n        'Modal with translucent navigation bar and without translucent status bar is not supported.',\n      );\n    }\n  }\n}\n\n// Create a state to track whether the Modal is rendering or not.\n// This is the only prop that controls whether the modal is rendered or not.\ntype State = {\n  isRendered: boolean,\n};\n\nclass Modal extends React.Component<ModalProps, State> {\n  static defaultProps: {hardwareAccelerated: boolean, visible: boolean} = {\n    visible: true,\n    hardwareAccelerated: false,\n  };\n\n  static contextType: React.Context<RootTag> = RootTagContext;\n\n  _identifier: number;\n  _eventSubscription: ?EventSubscription;\n\n  constructor(props: ModalProps) {\n    super(props);\n    if (__DEV__) {\n      confirmProps(props);\n    }\n    this._identifier = uniqueModalIdentifier++;\n    this.state = {\n      isRendered: props.visible === true,\n    };\n  }\n\n  componentDidMount() {\n    // 'modalDismissed' is for the old renderer in iOS only\n    if (ModalEventEmitter) {\n      this._eventSubscription = ModalEventEmitter.addListener(\n        'modalDismissed',\n        event => {\n          this.setState({isRendered: false}, () => {\n            if (event.modalID === this._identifier && this.props.onDismiss) {\n              this.props.onDismiss();\n            }\n          });\n        },\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      this.setState({isRendered: false});\n    }\n    if (this._eventSubscription) {\n      this._eventSubscription.remove();\n    }\n  }\n\n  componentDidUpdate(prevProps: ModalProps) {\n    if (prevProps.visible === false && this.props.visible === true) {\n      this.setState({isRendered: true});\n    }\n\n    if (__DEV__) {\n      confirmProps(this.props);\n    }\n  }\n\n  // Helper function to encapsulate platform specific logic to show or not the Modal.\n  _shouldShowModal(): boolean {\n    if (Platform.OS === 'ios') {\n      return this.props.visible === true || this.state.isRendered === true;\n    }\n\n    return this.props.visible === true;\n  }\n\n  render(): React.Node {\n    if (!this._shouldShowModal()) {\n      return null;\n    }\n\n    const containerStyles = {\n      backgroundColor:\n        this.props.transparent === true\n          ? 'transparent'\n          : this.props.backdropColor ?? 'white',\n    };\n\n    let animationType = this.props.animationType || 'none';\n\n    let presentationStyle = this.props.presentationStyle;\n    if (!presentationStyle) {\n      presentationStyle = 'fullScreen';\n      if (this.props.transparent === true) {\n        presentationStyle = 'overFullScreen';\n      }\n    }\n\n    const innerChildren = __DEV__ ? (\n      <AppContainer rootTag={this.context}>{this.props.children}</AppContainer>\n    ) : (\n      this.props.children\n    );\n\n    const onDismiss = () => {\n      // OnDismiss is implemented on iOS only.\n      if (Platform.OS === 'ios') {\n        this.setState({isRendered: false}, () => {\n          if (this.props.onDismiss) {\n            this.props.onDismiss();\n          }\n        });\n      }\n    };\n\n    return (\n      <RCTModalHostView\n        animationType={animationType}\n        presentationStyle={presentationStyle}\n        transparent={this.props.transparent}\n        hardwareAccelerated={this.props.hardwareAccelerated}\n        onRequestClose={this.props.onRequestClose}\n        onShow={this.props.onShow}\n        onDismiss={onDismiss}\n        visible={this.props.visible}\n        statusBarTranslucent={this.props.statusBarTranslucent}\n        navigationBarTranslucent={this.props.navigationBarTranslucent}\n        identifier={this._identifier}\n        style={styles.modal}\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        onStartShouldSetResponder={this._shouldSetResponder}\n        supportedOrientations={this.props.supportedOrientations}\n        onOrientationChange={this.props.onOrientationChange}\n        testID={this.props.testID}>\n        <VirtualizedListContextResetter>\n          <ScrollView.Context.Provider value={null}>\n            <View\n              // $FlowFixMe[incompatible-type]\n              style={[styles.container, containerStyles]}\n              collapsable={false}>\n              {innerChildren}\n            </View>\n          </ScrollView.Context.Provider>\n        </VirtualizedListContextResetter>\n      </RCTModalHostView>\n    );\n  }\n\n  // We don't want any responder events bubbling out of the modal.\n  _shouldSetResponder(): boolean {\n    return true;\n  }\n}\n\nconst side = I18nManager.getConstants().isRTL ? 'right' : 'left';\nconst styles = StyleSheet.create({\n  modal: {\n    position: 'absolute',\n  },\n  container: {\n    /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.111 was deployed. To see\n     * the error, delete this comment and run Flow. */\n    // $FlowFixMe[incompatible-call]\n    [side]: 0,\n    top: 0,\n    flex: 1,\n  },\n});\n\nconst ExportedModal: React.ComponentType<React.ElementConfig<typeof Modal>> =\n  ModalInjection.unstable_Modal ?? Modal;\n\nexport default ExportedModal;\n"],"mappings":"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","ignoreList":[]}