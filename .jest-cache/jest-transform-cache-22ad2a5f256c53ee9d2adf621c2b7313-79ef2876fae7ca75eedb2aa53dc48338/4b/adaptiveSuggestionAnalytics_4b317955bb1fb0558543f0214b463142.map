{"version":3,"names":["_asyncStorage","_interopRequireDefault","require","AdaptiveSuggestionAnalytics","_classCallCheck2","default","STORAGE_KEY","MAX_EVENTS","RETENTION_DAYS","_createClass2","key","value","_trackEvent","_asyncToGenerator2","eventType","userId","suggestion","additionalData","_this","_suggestion$cta","now","Date","event","timestamp","getTime","hashUserId","category","confidence","timeOfDay","getHours","dayOfWeek","getDay","targetScreen","cta","screen","sessionDuration","snoozeHours","events","getEvents","push","filteredEvents","filter","e","slice","AsyncStorage","setItem","JSON","stringify","console","log","error","trackEvent","_x","_x2","_x3","_x4","apply","arguments","_getMetrics","days","length","undefined","cutoffTime","recentEvents","calculateMetrics","getEmptyMetrics","getMetrics","_getCategoryRanking","metrics","Object","entries","categoryMetrics","map","_ref","_ref2","_slicedToArray2","data","ctr","shown","clicked","avgConfidence","rank","sort","a","b","item","index","assign","getCategoryRanking","_getOptimalTimingRecommendations","hourMetrics","dayMetrics","forEach","getDayLabel","day","getHourLabel","hour","bestHours","_ref3","_ref4","parseInt","label","bestDays","_ref5","_ref6","quietHours","_ref7","_ref8","_","_ref9","_ref0","getOptimalTimingRecommendations","allEvents","dismissed","dismissalRate","categories","_toConsumableArray2","Set","catShown","catClicked","catDismissed","reduce","sum","hourCTRs","_loop","hourShown","hourClicked","sortedHours","_ref1","_ref10","worstHours","_ref11","_ref12","dayCTRs","_loop2","dayShown","dayClicked","_ref13","_ref14","sessionsWithDuration","avgSessionDuration","uniqueUsers","returnUsers","returnUserRate","snoozedUsers","snoozedButReturned","some","Math","max","d","previousPeriodStart","previousPeriodEnd","previousEvents","prevShown","prevClicked","prevDismissed","prevCTR","prevDismissalRate","ctrChange","dismissalChange","prevClickedEvents","prevSessionsWithDuration","prevAvgSessionDuration","prevUniqueUsers","prevReturnUsers","prevReturnUserRate","prevDismissedEvents","prevSnoozedUsers","prevSnoozedButReturned","engagementChange","weightSum","sessionDurationChange","returnRateChange","snoozeReturnChange","totalShown","totalClicked","totalDismissed","clickThroughRate","timeMetrics","engagementMetrics","trends","_getEvents","stored","getItem","parse","hash","i","char","charCodeAt","abs","toString","_clearOldData","daysToKeep","clearOldData","getInstance","instance","adaptiveSuggestionAnalytics","exports","_default"],"sources":["adaptiveSuggestionAnalytics.ts"],"sourcesContent":["/**\n * üìä Adaptive Suggestion Analytics Service\n * \n * Tracks and analyzes the performance of JITAI/Adaptive Interventions:\n * - Success rates (click-through rates)  \n * - Dismissal patterns\n * - Category effectiveness\n * - Timing analytics\n * - User engagement trends\n * \n * Privacy-compliant with data aggregation and retention policies.\n */\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AdaptiveSuggestion } from '../hooks/useAdaptiveSuggestion';\n\nexport interface SuggestionEvent {\n  timestamp: number;\n  userId: string; // Hashed for privacy\n  category: string;\n  confidence: number;\n  eventType: 'shown' | 'clicked' | 'dismissed';\n  timeOfDay: number; // Hour (0-23)\n  dayOfWeek: number; // 0=Sunday, 6=Saturday\n  sessionDuration?: number; // How long user stayed after click\n  targetScreen?: string;\n  snoozeHours?: number;\n}\n\nexport interface AnalyticsMetrics {\n  // Overall metrics\n  totalShown: number;\n  totalClicked: number;\n  totalDismissed: number;\n  clickThroughRate: number;\n  dismissalRate: number;\n  \n  // Category breakdown\n  categoryMetrics: {\n    [category: string]: {\n      shown: number;\n      clicked: number;\n      dismissed: number;\n      ctr: number; // Click-through rate\n      avgConfidence: number;\n    };\n  };\n  \n  // Time-based insights\n  timeMetrics: {\n    bestHours: number[]; // Top 3 performing hours\n    worstHours: number[]; // Bottom 3 performing hours\n    bestDays: number[]; // Top performing days of week\n  };\n  \n  // Engagement patterns\n  engagementMetrics: {\n    avgSessionDuration: number;\n    returnUserRate: number; // Users who clicked multiple suggestions\n    snoozedButReturned: number; // Users who snoozed then later clicked\n  };\n  \n  // Trends (last 7 vs previous 7 days)\n  trends: {\n    ctrChange: number; // Percentage change in CTR\n    dismissalChange: number;\n    engagementChange: number;\n  };\n}\n\nclass AdaptiveSuggestionAnalytics {\n  private static instance: AdaptiveSuggestionAnalytics;\n  private readonly STORAGE_KEY = 'adaptive_suggestion_analytics';\n  private readonly MAX_EVENTS = 1000; // Keep last 1000 events\n  private readonly RETENTION_DAYS = 30; // 30 days retention\n\n  private constructor() {}\n\n  public static getInstance(): AdaptiveSuggestionAnalytics {\n    if (!AdaptiveSuggestionAnalytics.instance) {\n      AdaptiveSuggestionAnalytics.instance = new AdaptiveSuggestionAnalytics();\n    }\n    return AdaptiveSuggestionAnalytics.instance;\n  }\n\n  /**\n   * üìù Track suggestion event\n   */\n  async trackEvent(\n    eventType: 'shown' | 'clicked' | 'dismissed',\n    userId: string,\n    suggestion: AdaptiveSuggestion,\n    additionalData?: {\n      sessionDuration?: number;\n      snoozeHours?: number;\n    }\n  ): Promise<void> {\n    try {\n      const now = new Date();\n      const event: SuggestionEvent = {\n        timestamp: now.getTime(),\n        userId: this.hashUserId(userId),\n        category: suggestion.category || 'general',\n        confidence: suggestion.confidence || 0.5,\n        eventType,\n        timeOfDay: now.getHours(),\n        dayOfWeek: now.getDay(),\n        targetScreen: suggestion.cta?.screen,\n        sessionDuration: additionalData?.sessionDuration,\n        snoozeHours: additionalData?.snoozeHours\n      };\n\n      const events = await this.getEvents();\n      events.push(event);\n\n      // Keep only recent events and within retention\n      const filteredEvents = events\n        .filter(e => e.timestamp > (Date.now() - (this.RETENTION_DAYS * 24 * 60 * 60 * 1000)))\n        .slice(-this.MAX_EVENTS);\n\n      await AsyncStorage.setItem(this.STORAGE_KEY, JSON.stringify(filteredEvents));\n      \n      console.log(`üìä Tracked adaptive suggestion event: ${eventType} for ${suggestion.category}`);\n    } catch (error) {\n      console.error('‚ùå Failed to track adaptive suggestion event:', error);\n    }\n  }\n\n  /**\n   * üìä Get comprehensive analytics metrics\n   */\n  async getMetrics(days: number = 7): Promise<AnalyticsMetrics> {\n    try {\n      const events = await this.getEvents();\n      const cutoffTime = Date.now() - (days * 24 * 60 * 60 * 1000);\n      const recentEvents = events.filter(e => e.timestamp >= cutoffTime);\n\n      return this.calculateMetrics(recentEvents, events);\n    } catch (error) {\n      console.error('‚ùå Failed to get analytics metrics:', error);\n      return this.getEmptyMetrics();\n    }\n  }\n\n  /**\n   * üìà Get category performance ranking\n   */\n  async getCategoryRanking(days: number = 7): Promise<Array<{\n    category: string;\n    ctr: number;\n    shown: number;\n    clicked: number;\n    avgConfidence: number;\n    rank: number;\n  }>> {\n    const metrics = await this.getMetrics(days);\n    \n    return Object.entries(metrics.categoryMetrics)\n      .map(([category, data]) => ({\n        category,\n        ctr: data.ctr,\n        shown: data.shown,\n        clicked: data.clicked,\n        avgConfidence: data.avgConfidence,\n        rank: 0\n      }))\n      .sort((a, b) => b.ctr - a.ctr)\n      .map((item, index) => ({ ...item, rank: index + 1 }));\n  }\n\n  /**\n   * üïê Get optimal timing recommendations\n   */\n  async getOptimalTimingRecommendations(): Promise<{\n    bestHours: Array<{ hour: number; ctr: number; label: string }>;\n    bestDays: Array<{ day: number; ctr: number; label: string }>;\n    quietHours: number[];\n  }> {\n    const events = await this.getEvents();\n    \n    // Hour-based analysis\n    const hourMetrics: { [hour: number]: { shown: number; clicked: number } } = {};\n    const dayMetrics: { [day: number]: { shown: number; clicked: number } } = {};\n\n    events.forEach(event => {\n      // Hour metrics\n      if (!hourMetrics[event.timeOfDay]) {\n        hourMetrics[event.timeOfDay] = { shown: 0, clicked: 0 };\n      }\n      if (event.eventType === 'shown') hourMetrics[event.timeOfDay].shown++;\n      if (event.eventType === 'clicked') hourMetrics[event.timeOfDay].clicked++;\n\n      // Day metrics\n      if (!dayMetrics[event.dayOfWeek]) {\n        dayMetrics[event.dayOfWeek] = { shown: 0, clicked: 0 };\n      }\n      if (event.eventType === 'shown') dayMetrics[event.dayOfWeek].shown++;\n      if (event.eventType === 'clicked') dayMetrics[event.dayOfWeek].clicked++;\n    });\n\n    const getDayLabel = (day: number): string => {\n      const days = ['Pazar', 'Pazartesi', 'Salƒ±', '√áar≈üamba', 'Per≈üembe', 'Cuma', 'Cumartesi'];\n      return days[day];\n    };\n\n    const getHourLabel = (hour: number): string => {\n      if (hour >= 6 && hour < 12) return 'Sabah';\n      if (hour >= 12 && hour < 17) return '√ñƒüleden Sonra';\n      if (hour >= 17 && hour < 21) return 'Ak≈üam';\n      return 'Gece';\n    };\n\n    const bestHours = Object.entries(hourMetrics)\n      .map(([hour, metrics]) => ({\n        hour: parseInt(hour),\n        ctr: metrics.shown > 0 ? metrics.clicked / metrics.shown : 0,\n        label: getHourLabel(parseInt(hour))\n      }))\n      .sort((a, b) => b.ctr - a.ctr)\n      .slice(0, 6);\n\n    const bestDays = Object.entries(dayMetrics)\n      .map(([day, metrics]) => ({\n        day: parseInt(day),\n        ctr: metrics.shown > 0 ? metrics.clicked / metrics.shown : 0,\n        label: getDayLabel(parseInt(day))\n      }))\n      .sort((a, b) => b.ctr - a.ctr);\n\n    // Identify quiet hours (very low CTR)\n    const quietHours = Object.entries(hourMetrics)\n      .filter(([_, metrics]) => {\n        const ctr = metrics.shown > 0 ? metrics.clicked / metrics.shown : 0;\n        return ctr < 0.1 && metrics.shown > 5; // Less than 10% CTR with enough data\n      })\n      .map(([hour]) => parseInt(hour));\n\n    return { bestHours, bestDays, quietHours };\n  }\n\n  /**\n   * üßÆ Calculate comprehensive metrics\n   */\n  private calculateMetrics(recentEvents: SuggestionEvent[], allEvents: SuggestionEvent[]): AnalyticsMetrics {\n    const shown = recentEvents.filter(e => e.eventType === 'shown');\n    const clicked = recentEvents.filter(e => e.eventType === 'clicked');\n    const dismissed = recentEvents.filter(e => e.eventType === 'dismissed');\n\n    const ctr = shown.length > 0 ? clicked.length / shown.length : 0;\n    const dismissalRate = shown.length > 0 ? dismissed.length / shown.length : 0;\n\n    // Category metrics\n    const categories = [...new Set(recentEvents.map(e => e.category))];\n    const categoryMetrics: AnalyticsMetrics['categoryMetrics'] = {};\n\n    categories.forEach(category => {\n      const catShown = shown.filter(e => e.category === category);\n      const catClicked = clicked.filter(e => e.category === category);\n      const catDismissed = dismissed.filter(e => e.category === category);\n      \n      categoryMetrics[category] = {\n        shown: catShown.length,\n        clicked: catClicked.length,\n        dismissed: catDismissed.length,\n        ctr: catShown.length > 0 ? catClicked.length / catShown.length : 0,\n        avgConfidence: catShown.length > 0 \n          ? catShown.reduce((sum, e) => sum + e.confidence, 0) / catShown.length \n          : 0\n      };\n    });\n\n    // Time metrics\n    const hourCTRs: { [hour: number]: number } = {};\n    for (let hour = 0; hour < 24; hour++) {\n      const hourShown = shown.filter(e => e.timeOfDay === hour);\n      const hourClicked = clicked.filter(e => e.timeOfDay === hour);\n      hourCTRs[hour] = hourShown.length > 0 ? hourClicked.length / hourShown.length : 0;\n    }\n\n    const sortedHours = Object.entries(hourCTRs).sort((a, b) => b[1] - a[1]);\n    const bestHours = sortedHours.slice(0, 3).map(([hour]) => parseInt(hour));\n    const worstHours = sortedHours.slice(-3).map(([hour]) => parseInt(hour));\n\n    // Day metrics\n    const dayCTRs: { [day: number]: number } = {};\n    for (let day = 0; day < 7; day++) {\n      const dayShown = shown.filter(e => e.dayOfWeek === day);\n      const dayClicked = clicked.filter(e => e.dayOfWeek === day);\n      dayCTRs[day] = dayShown.length > 0 ? dayClicked.length / dayShown.length : 0;\n    }\n    const bestDays = Object.entries(dayCTRs)\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, 3)\n      .map(([day]) => parseInt(day));\n\n    // Engagement metrics\n    const sessionsWithDuration = clicked.filter(e => e.sessionDuration);\n    const avgSessionDuration = sessionsWithDuration.length > 0\n      ? sessionsWithDuration.reduce((sum, e) => sum + (e.sessionDuration || 0), 0) / sessionsWithDuration.length\n      : 0;\n\n    const uniqueUsers = [...new Set(recentEvents.map(e => e.userId))];\n    const returnUsers = uniqueUsers.filter(userId => \n      clicked.filter(e => e.userId === userId).length > 1\n    );\n    const returnUserRate = uniqueUsers.length > 0 ? returnUsers.length / uniqueUsers.length : 0;\n\n    const snoozedUsers = [...new Set(dismissed.filter(e => e.snoozeHours).map(e => e.userId))];\n    const snoozedButReturned = snoozedUsers.filter(userId =>\n      clicked.some(e => e.userId === userId && e.timestamp > \n        Math.max(...dismissed.filter(d => d.userId === userId).map(d => d.timestamp))\n      )\n    ).length;\n\n    // Trends (compare with previous period)\n    const previousPeriodStart = Date.now() - (14 * 24 * 60 * 60 * 1000);\n    const previousPeriodEnd = Date.now() - (7 * 24 * 60 * 60 * 1000);\n    const previousEvents = allEvents.filter(e => \n      e.timestamp >= previousPeriodStart && e.timestamp < previousPeriodEnd\n    );\n\n    const prevShown = previousEvents.filter(e => e.eventType === 'shown').length;\n    const prevClicked = previousEvents.filter(e => e.eventType === 'clicked').length;\n    const prevDismissed = previousEvents.filter(e => e.eventType === 'dismissed').length;\n\n    const prevCTR = prevShown > 0 ? prevClicked / prevShown : 0;\n    const prevDismissalRate = prevShown > 0 ? prevDismissed / prevShown : 0;\n\n    const ctrChange = prevCTR > 0 ? ((ctr - prevCTR) / prevCTR) * 100 : 0;\n    const dismissalChange = prevDismissalRate > 0 ? ((dismissalRate - prevDismissalRate) / prevDismissalRate) * 100 : 0;\n\n    // Calculate previous period engagement metrics\n    const prevClickedEvents = previousEvents.filter(e => e.eventType === 'clicked');\n    const prevSessionsWithDuration = prevClickedEvents.filter(e => e.sessionDuration);\n    const prevAvgSessionDuration = prevSessionsWithDuration.length > 0\n      ? prevSessionsWithDuration.reduce((sum, e) => sum + (e.sessionDuration || 0), 0) / prevSessionsWithDuration.length\n      : 0;\n\n    const prevUniqueUsers = [...new Set(previousEvents.map(e => e.userId))];\n    const prevReturnUsers = prevUniqueUsers.filter(userId => \n      prevClickedEvents.filter(e => e.userId === userId).length > 1\n    );\n    const prevReturnUserRate = prevUniqueUsers.length > 0 ? prevReturnUsers.length / prevUniqueUsers.length : 0;\n\n    const prevDismissedEvents = previousEvents.filter(e => e.eventType === 'dismissed');\n    const prevSnoozedUsers = [...new Set(prevDismissedEvents.filter(e => e.snoozeHours).map(e => e.userId))];\n    const prevSnoozedButReturned = prevSnoozedUsers.filter(userId =>\n      prevClickedEvents.some(e => e.userId === userId && e.timestamp > \n        Math.max(...prevDismissedEvents.filter(d => d.userId === userId).map(d => d.timestamp))\n      )\n    ).length;\n\n    // Calculate engagement change as weighted average of multiple factors\n    let engagementChange = 0;\n    let weightSum = 0;\n\n    // 1. Session duration change (weight: 0.4)\n    if (prevAvgSessionDuration > 0 && avgSessionDuration > 0) {\n      const sessionDurationChange = ((avgSessionDuration - prevAvgSessionDuration) / prevAvgSessionDuration) * 100;\n      engagementChange += sessionDurationChange * 0.4;\n      weightSum += 0.4;\n    }\n\n    // 2. Return user rate change (weight: 0.35)\n    if (prevReturnUserRate > 0 && returnUserRate > 0) {\n      const returnRateChange = ((returnUserRate - prevReturnUserRate) / prevReturnUserRate) * 100;\n      engagementChange += returnRateChange * 0.35;\n      weightSum += 0.35;\n    }\n\n    // 3. Snoozed but returned change (weight: 0.25)\n    if (prevSnoozedButReturned > 0 && snoozedButReturned > 0) {\n      const snoozeReturnChange = ((snoozedButReturned - prevSnoozedButReturned) / prevSnoozedButReturned) * 100;\n      engagementChange += snoozeReturnChange * 0.25;\n      weightSum += 0.25;\n    }\n\n    // Normalize by actual weights used\n    engagementChange = weightSum > 0 ? engagementChange / weightSum : 0;\n\n    return {\n      totalShown: shown.length,\n      totalClicked: clicked.length,\n      totalDismissed: dismissed.length,\n      clickThroughRate: ctr,\n      dismissalRate,\n      categoryMetrics,\n      timeMetrics: {\n        bestHours,\n        worstHours,\n        bestDays\n      },\n      engagementMetrics: {\n        avgSessionDuration,\n        returnUserRate,\n        snoozedButReturned\n      },\n      trends: {\n        ctrChange,\n        dismissalChange,\n        engagementChange // Calculated above as weighted average of engagement metrics\n      }\n    };\n  }\n\n  /**\n   * üóÑÔ∏è Get stored events\n   */\n  private async getEvents(): Promise<SuggestionEvent[]> {\n    try {\n      const stored = await AsyncStorage.getItem(this.STORAGE_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.error('‚ùå Failed to get stored analytics events:', error);\n      return [];\n    }\n  }\n\n  /**\n   * üîê Hash user ID for privacy\n   */\n  private hashUserId(userId: string): string {\n    // Simple hash function for privacy (in production, use crypto)\n    let hash = 0;\n    for (let i = 0; i < userId.length; i++) {\n      const char = userId.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return Math.abs(hash).toString(16);\n  }\n\n  /**\n   * üìä Get empty metrics structure\n   */\n  private getEmptyMetrics(): AnalyticsMetrics {\n    return {\n      totalShown: 0,\n      totalClicked: 0,\n      totalDismissed: 0,\n      clickThroughRate: 0,\n      dismissalRate: 0,\n      categoryMetrics: {},\n      timeMetrics: {\n        bestHours: [],\n        worstHours: [],\n        bestDays: []\n      },\n      engagementMetrics: {\n        avgSessionDuration: 0,\n        returnUserRate: 0,\n        snoozedButReturned: 0\n      },\n      trends: {\n        ctrChange: 0,\n        dismissalChange: 0,\n        engagementChange: 0\n      }\n    };\n  }\n\n  /**\n   * üßπ Clear old analytics data\n   */\n  async clearOldData(daysToKeep: number = 30): Promise<void> {\n    try {\n      const events = await this.getEvents();\n      const cutoffTime = Date.now() - (daysToKeep * 24 * 60 * 60 * 1000);\n      const filteredEvents = events.filter(e => e.timestamp > cutoffTime);\n      \n      await AsyncStorage.setItem(this.STORAGE_KEY, JSON.stringify(filteredEvents));\n      console.log(`üßπ Cleared analytics data older than ${daysToKeep} days`);\n    } catch (error) {\n      console.error('‚ùå Failed to clear old analytics data:', error);\n    }\n  }\n}\n\nexport const adaptiveSuggestionAnalytics = AdaptiveSuggestionAnalytics.getInstance();\nexport default adaptiveSuggestionAnalytics;\n"],"mappings":"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","ignoreList":[]}