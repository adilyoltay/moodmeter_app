{"version":3,"names":["getTrendFromP50","series","threshold","arguments","length","undefined","Array","isArray","vals","map","v","Number","isFinite","NaN","filter","first","last","diff","Math","abs","max"],"sources":["trend.ts"],"sourcesContent":["export type Trend = 'up' | 'down' | 'stable';\n\n/**\n * Compute trend from a series of p50 (median) values.\n * - Ignores NaN/undefined values\n * - Uses first and last valid values\n * - Returns 'up' | 'down' when absolute delta >= threshold, otherwise 'stable'\n */\nexport function getTrendFromP50(series: Array<number | null | undefined>, threshold: number = 10): Trend {\n  if (!Array.isArray(series) || series.length === 0) return 'stable';\n  const vals = series\n    .map((v) => (typeof v === 'number' && Number.isFinite(v) ? v : NaN))\n    .filter((v) => Number.isFinite(v));\n  if (vals.length < 2) return 'stable';\n  const first = vals[0]!;\n  const last = vals[vals.length - 1]!;\n  const diff = last - first;\n  if (Math.abs(diff) >= Math.max(0, threshold)) {\n    return diff > 0 ? 'up' : 'down';\n  }\n  return 'stable';\n}\n\n"],"mappings":";;;;AAQO,SAASA,eAAeA,CAACC,MAAwC,EAAiC;EAAA,IAA/BC,SAAiB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC9F,IAAI,CAACG,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,IAAIA,MAAM,CAACG,MAAM,KAAK,CAAC,EAAE,OAAO,QAAQ;EAClE,IAAMI,IAAI,GAAGP,MAAM,CAChBQ,GAAG,CAAC,UAACC,CAAC;IAAA,OAAM,OAAOA,CAAC,KAAK,QAAQ,IAAIC,MAAM,CAACC,QAAQ,CAACF,CAAC,CAAC,GAAGA,CAAC,GAAGG,GAAG;EAAA,CAAC,CAAC,CACnEC,MAAM,CAAC,UAACJ,CAAC;IAAA,OAAKC,MAAM,CAACC,QAAQ,CAACF,CAAC,CAAC;EAAA,EAAC;EACpC,IAAIF,IAAI,CAACJ,MAAM,GAAG,CAAC,EAAE,OAAO,QAAQ;EACpC,IAAMW,KAAK,GAAGP,IAAI,CAAC,CAAC,CAAE;EACtB,IAAMQ,IAAI,GAAGR,IAAI,CAACA,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAE;EACnC,IAAMa,IAAI,GAAGD,IAAI,GAAGD,KAAK;EACzB,IAAIG,IAAI,CAACC,GAAG,CAACF,IAAI,CAAC,IAAIC,IAAI,CAACE,GAAG,CAAC,CAAC,EAAElB,SAAS,CAAC,EAAE;IAC5C,OAAOe,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,MAAM;EACjC;EACA,OAAO,QAAQ;AACjB","ignoreList":[]}