{"version":3,"names":["_accessibility","require","_findAll","_matchAccessibilityState","_matchAccessibilityValue","_matchStringProp","_within","_makeQueries","matchAccessibleNameIfNeeded","node","name","_ref","getQueriesForElement","queryAllByText","queryAllByLabelText","length","matchAccessibleStateIfNeeded","options","matchAccessibilityState","matchAccessibilityValueIfNeeded","value","matchAccessibilityValue","queryAllByRole","instance","queryAllByRoleFn","role","normalizedRole","normalizeRole","findAll","isAccessibilityElement","matchStringProp","getRole","formatQueryParams","arguments","undefined","params","String","push","accessibilityStateKeys","forEach","stateKey","accessibilityValueKeys","valueKey","_options$value","_options$value2","join","getMultipleError","getMissingError","_ref2","makeQueries","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy","bindByRoleQueries","getByRole","getAllByRole","queryByRole","findByRole","findAllByRole","exports"],"sources":["../../src/queries/role.ts"],"sourcesContent":["import type { AccessibilityRole, Role } from 'react-native';\nimport type { ReactTestInstance } from 'react-test-renderer';\n\nimport {\n  accessibilityStateKeys,\n  accessibilityValueKeys,\n  getRole,\n  isAccessibilityElement,\n  normalizeRole,\n} from '../helpers/accessibility';\nimport { findAll } from '../helpers/find-all';\nimport type { AccessibilityStateMatcher } from '../helpers/matchers/match-accessibility-state';\nimport { matchAccessibilityState } from '../helpers/matchers/match-accessibility-state';\nimport type { AccessibilityValueMatcher } from '../helpers/matchers/match-accessibility-value';\nimport { matchAccessibilityValue } from '../helpers/matchers/match-accessibility-value';\nimport { matchStringProp } from '../helpers/matchers/match-string-prop';\nimport type { TextMatch } from '../matches';\nimport type { StringWithAutocomplete } from '../types';\nimport { getQueriesForElement } from '../within';\nimport type {\n  FindAllByQuery,\n  FindByQuery,\n  GetAllByQuery,\n  GetByQuery,\n  QueryAllByQuery,\n  QueryByQuery,\n} from './make-queries';\nimport { makeQueries } from './make-queries';\nimport type { CommonQueryOptions } from './options';\n\nexport type ByRoleMatcher = StringWithAutocomplete<AccessibilityRole | Role> | RegExp;\n\nexport type ByRoleOptions = CommonQueryOptions &\n  AccessibilityStateMatcher & {\n    name?: TextMatch;\n    value?: AccessibilityValueMatcher;\n  };\n\nconst matchAccessibleNameIfNeeded = (node: ReactTestInstance, name?: TextMatch) => {\n  if (name == null) return true;\n\n  const { queryAllByText, queryAllByLabelText } = getQueriesForElement(node);\n  return queryAllByText(name).length > 0 || queryAllByLabelText(name).length > 0;\n};\n\nconst matchAccessibleStateIfNeeded = (node: ReactTestInstance, options?: ByRoleOptions) => {\n  return options != null ? matchAccessibilityState(node, options) : true;\n};\n\nconst matchAccessibilityValueIfNeeded = (\n  node: ReactTestInstance,\n  value?: AccessibilityValueMatcher,\n) => {\n  return value != null ? matchAccessibilityValue(node, value) : true;\n};\n\nconst queryAllByRole = (\n  instance: ReactTestInstance,\n): QueryAllByQuery<ByRoleMatcher, ByRoleOptions> =>\n  function queryAllByRoleFn(role, options) {\n    const normalizedRole = typeof role === 'string' ? normalizeRole(role) : role;\n    return findAll(\n      instance,\n      (node) =>\n        // run the cheapest checks first, and early exit to avoid unneeded computations\n        isAccessibilityElement(node) &&\n        matchStringProp(getRole(node), normalizedRole) &&\n        matchAccessibleStateIfNeeded(node, options) &&\n        matchAccessibilityValueIfNeeded(node, options?.value) &&\n        matchAccessibleNameIfNeeded(node, options?.name),\n      options,\n    );\n  };\n\nconst formatQueryParams = (role: TextMatch, options: ByRoleOptions = {}) => {\n  const params = [`role: ${String(role)}`];\n\n  if (options.name) {\n    params.push(`name: ${String(options.name)}`);\n  }\n\n  accessibilityStateKeys.forEach((stateKey) => {\n    if (options[stateKey] !== undefined) {\n      params.push(`${stateKey} state: ${options[stateKey]}`);\n    }\n  });\n\n  accessibilityValueKeys.forEach((valueKey) => {\n    if (options?.value?.[valueKey] !== undefined) {\n      params.push(`${valueKey} value: ${options?.value?.[valueKey]}`);\n    }\n  });\n\n  return params.join(', ');\n};\n\nconst getMultipleError = (role: TextMatch, options?: ByRoleOptions) =>\n  `Found multiple elements with ${formatQueryParams(role, options)}`;\n\nconst getMissingError = (role: TextMatch, options?: ByRoleOptions) =>\n  `Unable to find an element with ${formatQueryParams(role, options)}`;\n\nconst { getBy, getAllBy, queryBy, queryAllBy, findBy, findAllBy } = makeQueries(\n  queryAllByRole,\n  getMissingError,\n  getMultipleError,\n);\n\nexport type ByRoleQueries = {\n  getByRole: GetByQuery<ByRoleMatcher, ByRoleOptions>;\n  getAllByRole: GetAllByQuery<ByRoleMatcher, ByRoleOptions>;\n  queryByRole: QueryByQuery<ByRoleMatcher, ByRoleOptions>;\n  queryAllByRole: QueryAllByQuery<ByRoleMatcher, ByRoleOptions>;\n  findByRole: FindByQuery<ByRoleMatcher, ByRoleOptions>;\n  findAllByRole: FindAllByQuery<ByRoleMatcher, ByRoleOptions>;\n};\n\nexport const bindByRoleQueries = (instance: ReactTestInstance): ByRoleQueries => ({\n  getByRole: getBy(instance),\n  getAllByRole: getAllBy(instance),\n  queryByRole: queryBy(instance),\n  queryAllByRole: queryAllBy(instance),\n  findByRole: findBy(instance),\n  findAllByRole: findAllBy(instance),\n});\n"],"mappings":"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","ignoreList":[]}