{"version":3,"names":["_react","require","_asyncStorage","_interopRequireDefault","_featureFlags","_aiTelemetry","_adaptiveSuggestionAnalytics","_circadianTimingEngine","_abTestingFramework","DEFAULT_COOLDOWN_HOURS","__DEV__","DEFAULT_SNOOZE_HOURS","AsyncStorage","removeItem","catch","console","log","QUIET_START_HOUR","QUIET_END_HOUR","useAdaptiveSuggestion","_useState","useState","_useState2","_slicedToArray2","default","loading","setLoading","isQuietHours","now","Date","hour","getHours","buildMinimalContext","_ref","_asyncToGenerator2","userId","context","timestamp","currentContext","userState","stressLevel","activityState","energyLevel","threeDaysAgo","_yield$import","StorageKeys","compulsionsKey","COMPULSIONS","compulsionsData","getItem","compulsions","JSON","parse","recentCompulsions","filter","c","recentActivity","compulsionCount","length","error","warn","thoughtRecordsKey","THOUGHT_RECORDS","cbtData","records","recentRecords","r","cbtRecords","moodTracker","moodEntries","getMoodEntries","breathworkKey","BREATH_SESSIONS","breathworkData","sessions","recentSessions","s","breathworkSessions","_x","apply","arguments","buildContextAnalysisResult","minimalContext","analysisId","environmentalFactors","factor","value","confidence","source","Object","assign","moodIndicator","socialEngagement","riskAssessment","overallRisk","riskFactors","protectiveFactors","interventionUrgency","insights","keyObservations","patterns","recommendations","predictedNeeds","privacyLevel","dataQuality","sources","generateSuggestion","useCallback","_ref2","_testParameters","_testParameters2","_testParameters$respe","_testParameters3","_testParameters$minim","_testParameters4","FEATURE_FLAGS","isEnabled","show","testParameters","testId","testAssignment","abTestingFramework","getUserTestAssignment","parameters","cooldownHours","snoozeHours","respectCircadianTiming","minimumTimingScore","snoozeKey","snoozeUntil","parseInt","cooldownKey","lastSuggested","timeSinceLastSuggestion","cooldownMs","hoursLeft","Math","ceil","timingRecommendation","circadianTimingEngine","getTimingRecommendation","score","rationale","alternatives","bestAlternative","timing","_timing","_yield$import2","jitaiEngine","jitaiContext","userProfile","preferredLanguage","symptomSeverity","communicationStyle","triggerWords","avoidanceTopics","therapeuticGoals","preferredCBTTechniques","culturalContext","interventionHistory","currentUserState","isAppActive","lastInteraction","recentMood","stressPattern","personalizationProfile","preferredTimes","responsiveStates","effectiveCategories","culturalPreferences","language","predictOptimalTiming","optimalTiming","suggestion","adaptiveInterventions","interventionContext","userConfig","enabled","userAutonomyLevel","maxInterventionsPerHour","maxInterventionsPerDay","respectQuietHours","quietHours","start","end","preferredDeliveryMethods","allowInAppInterruptions","allowNotifications","enableHapticFeedback","adaptToUserFeedback","learnFromEffectiveness","culturalAdaptation","crisisOverride","emergencyContacts","escalationProtocol","recentInterventions","recentUserActivity","lastAppUsage","sessionDuration","deviceState","batteryLevel","isCharging","networkConnected","inFocus","triggerContextualIntervention","generateEnhancedFallbackSuggestion","id","title","content","category","priority","cta","label","screen","params","setItem","toString","trackAIInteraction","AIEventType","ADAPTIVE_SUGGESTION_SHOWN","delivery","adaptiveSuggestionAnalytics","trackEvent","_timingRecommendation","recordTestEvent","suggestionCategory","timingScore","userStressLevel","_x2","generateFallbackSuggestion","autoStart","protocol","_ref3","shouldTryBreathwork","_yield$import3","BreathworkSuggestionService","moodScore","undefined","lastMood","getLastMoodEntry","mood_score","breathworkContext","currentTime","anxietyLevel","max","min","round","breathworkService","getInstance","breathworkSuggestion","_breathworkSuggestion","_breathworkSuggestion2","name","trigger","reason","description","duration","urgency","_x3","_x4","generateSuggestionFromPipeline","_ref4","result","_testParameters5","_testParameters$respe2","_testParameters6","_testParameters$minim2","_testParameters7","weeklyDelta","volatility","baselines","sampleSize","bestTimes","analytics","Array","isArray","pattern","find","p","dashboardMetrics","_result$insights","_result$insights2","therapeuticCount","therapeutic","progressCount","progress","totalInsights","_result$metadata","metadata","processingTime","floor","patternDiversity","therapeuticRatio","cbt","_result$metadata2","_result$metadata3","temporalPatterns","_p$type","temporal","type","includes","allPatterns","increasingPatterns","_p$description","_p$description2","_p$description3","trend","toLowerCase","severity","decreasingPatterns","_p$description4","_p$description5","_p$description6","stablePatterns","trendStrength","patternSampleSize","metadataSampleSize","patternConflict","abs","patternConsistency","_result$metadata4","contextSize","generateMoodSuggestion","generateCBTSuggestion","generateTrackingSuggestion","hasWeeklyDelta","hasVolatility","_x5","_x6","mood","trackSuggestionClick","_ref5","currentHour","learnFromInteraction","_x7","_x8","_x9","trackSuggestionDismissal","_ref6","_x0","_x1","_x10","snoozeSuggestion","_ref7","hours","_testAssignment$param","ADAPTIVE_SUGGESTION_DISMISSED","_x11","_x12"],"sources":["useAdaptiveSuggestion.ts"],"sourcesContent":["/**\n * üéØ useAdaptiveSuggestion Hook\n * \n * JITAI/Adaptive Interventions i√ßin minimal tetik kancasƒ±.\n * Privacy-first, flag-kontroll√º, cooldown'lu adaptif √∂neriler.\n * \n * Features:\n * - 4 saatlik cooldown\n * - Quiet hours (22:00-08:00) saygƒ±sƒ±\n * - Flag-based feature control\n * - Minimal context generation\n * - Non-blocking error handling\n */\n\nimport { useState, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { FEATURE_FLAGS } from '@/constants/featureFlags';\nimport { trackAIInteraction, AIEventType } from '../telemetry/aiTelemetry';\nimport { adaptiveSuggestionAnalytics } from '../analytics/adaptiveSuggestionAnalytics';\nimport { circadianTimingEngine, TimingRecommendation } from '../timing/circadianTimingEngine';\nimport { abTestingFramework, ABTestVariant } from '../testing/abTestingFramework';\nimport type { UnifiedPipelineResult } from '../core/UnifiedAIPipeline';\n\n// Types\ninterface AdaptiveSuggestion {\n  show: boolean;\n  title?: string;\n  content?: string;\n  cta?: {\n    screen: string;\n    params?: any;\n  };\n  confidence?: number;\n  category?: 'breathwork' | 'cbt' | 'mood' | 'tracking';\n}\n\ninterface MinimalContext {\n  userId: string;\n  timestamp: number;\n  currentContext: {\n    userState: {\n      stressLevel: 'low' | 'moderate' | 'high';\n      activityState: 'unknown' | 'active' | 'resting';\n      energyLevel: number; // 1-100\n    };\n  };\n  recentActivity?: {\n    compulsionCount?: number;\n    moodEntries?: number;\n    breathworkSessions?: number;\n    cbtRecords?: number;\n  };\n}\n\n// Default Constants (overridden by A/B tests)\nconst DEFAULT_COOLDOWN_HOURS = __DEV__ ? 0.1 : 4; // 6 minutes in dev, 4 hours in production\nconst DEFAULT_SNOOZE_HOURS = __DEV__ ? 0.05 : 2;  // 3 minutes in dev, 2 hours in production\n\n// üîß DEV MODE: Auto-clear cooldown on hook init for testing\nif (__DEV__) {\n  AsyncStorage.removeItem('adaptive_suggestion_last_a477080d-4d3f-4edc-9c31-4a1076c0967b').catch(() => {});\n  console.log('üîß DEV: Auto-cleared adaptive suggestion cooldown for testing');\n}\nconst QUIET_START_HOUR = 22; // 22:00\nconst QUIET_END_HOUR = 8;    // 08:00\n\nexport function useAdaptiveSuggestion() {\n  const [loading, setLoading] = useState(false);\n\n  /**\n   * üïê Check if current time is within quiet hours\n   */\n  const isQuietHours = (): boolean => {\n    const now = new Date();\n    const hour = now.getHours();\n    \n    // 22:00-08:00 quiet period\n    return hour >= QUIET_START_HOUR || hour < QUIET_END_HOUR;\n  };\n\n  /**\n   * üìä Build minimal context for JITAI/Adaptive systems\n   */\n  const buildMinimalContext = async (userId: string): Promise<MinimalContext> => {\n    const context: MinimalContext = {\n      userId,\n      timestamp: Date.now(),\n      currentContext: {\n        userState: {\n          stressLevel: 'moderate', // Default moderate\n          activityState: 'unknown',\n          energyLevel: 50 // Default neutral\n        }\n      }\n    };\n\n    try {\n      // Minimal recent activity data (last 3 days for privacy)\n      const threeDaysAgo = Date.now() - (3 * 24 * 60 * 60 * 1000);\n      \n      // Get basic counts without PII\n      const { StorageKeys } = await import('@/utils/storage');\n      \n      // Compulsions count\n      try {\n        const compulsionsKey = StorageKeys.COMPULSIONS(userId);\n        const compulsionsData = await AsyncStorage.getItem(compulsionsKey);\n        if (compulsionsData) {\n          const compulsions = JSON.parse(compulsionsData);\n          const recentCompulsions = compulsions.filter((c: any) => \n            c.timestamp >= threeDaysAgo\n          );\n          context.recentActivity = context.recentActivity || {};\n          context.recentActivity.compulsionCount = recentCompulsions.length;\n          \n          // Infer stress level from recent activity\n          if (recentCompulsions.length > 10) {\n            context.currentContext.userState.stressLevel = 'high';\n            context.currentContext.userState.energyLevel = 30;\n          } else if (recentCompulsions.length > 5) {\n            context.currentContext.userState.stressLevel = 'moderate';\n            context.currentContext.userState.energyLevel = 50;\n          } else {\n            context.currentContext.userState.stressLevel = 'low';\n            context.currentContext.userState.energyLevel = 70;\n          }\n        }\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to get compulsions data for context:', error);\n      }\n\n      // CBT records count\n      try {\n        const thoughtRecordsKey = StorageKeys.THOUGHT_RECORDS(userId);\n        const cbtData = await AsyncStorage.getItem(thoughtRecordsKey);\n        if (cbtData) {\n          const records = JSON.parse(cbtData);\n          const recentRecords = records.filter((r: any) => \n            r.timestamp >= threeDaysAgo\n          );\n          context.recentActivity = context.recentActivity || {};\n          context.recentActivity.cbtRecords = recentRecords.length;\n        }\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to get CBT data for context:', error);\n      }\n\n      // Mood entries count\n      try {\n        const moodTracker = (await import('@/services/moodTrackingService')).default;\n        const moodEntries = await moodTracker.getMoodEntries(userId, 3); // 3 days\n        context.recentActivity = context.recentActivity || {};\n        context.recentActivity.moodEntries = moodEntries.length;\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to get mood data for context:', error);\n      }\n\n      // Breathwork sessions count  \n      try {\n        const breathworkKey = StorageKeys.BREATH_SESSIONS(userId);\n        const breathworkData = await AsyncStorage.getItem(breathworkKey);\n        if (breathworkData) {\n          const sessions = JSON.parse(breathworkData);\n          const recentSessions = sessions.filter((s: any) => \n            s.timestamp >= threeDaysAgo\n          );\n          context.recentActivity = context.recentActivity || {};\n          context.recentActivity.breathworkSessions = recentSessions.length;\n        }\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to get breathwork data for context:', error);\n      }\n\n    } catch (error) {\n      console.warn('‚ö†Ô∏è Error building minimal context, using defaults:', error);\n    }\n\n    return context;\n  };\n\n  /**\n   * üìä Build complete ContextAnalysisResult for AI engines\n   */\n  const buildContextAnalysisResult = (userId: string, minimalContext: MinimalContext): any => {\n    return {\n      userId,\n      timestamp: new Date(),\n      analysisId: `context_${Date.now()}`,\n      environmentalFactors: [\n        {\n          factor: 'TIME_OF_DAY',\n          value: new Date().getHours(),\n          confidence: 0.9,\n          source: 'device'\n        }\n      ],\n      userState: {\n        ...minimalContext.currentContext.userState,\n        activityState: minimalContext.currentContext.userState.activityState,\n        stressLevel: minimalContext.currentContext.userState.stressLevel,\n        moodIndicator: 'neutral' as const,\n        socialEngagement: 50\n      },\n      riskAssessment: {\n        overallRisk: minimalContext.currentContext.userState.stressLevel,\n        riskFactors: [],\n        protectiveFactors: [],\n        interventionUrgency: minimalContext.currentContext.userState.stressLevel === 'high' ? 'medium' : 'low'\n      },\n      insights: { \n        keyObservations: [],\n        patterns: [], \n        recommendations: [],\n        predictedNeeds: []\n      },\n      privacyLevel: 'minimal' as const,\n      dataQuality: 0.8,\n      sources: ['device', 'user_activity']\n    };\n  };\n\n  /**\n   * üéØ Generate adaptive suggestion\n   */\n  const generateSuggestion = useCallback(async (userId: string): Promise<AdaptiveSuggestion> => {\n    // 1. Flag checks - fail fast if any required flag is disabled\n    if (!FEATURE_FLAGS.isEnabled('AI_JITAI_SYSTEM') || \n        !FEATURE_FLAGS.isEnabled('AI_ADAPTIVE_INTERVENTIONS')) {\n      console.log('üö´ Adaptive suggestions disabled by feature flags');\n      return { show: false };\n    }\n\n    // üß™ Get A/B test assignment and parameters\n    let testParameters: ABTestVariant['parameters'] | null = null;\n    let testId: string | null = null;\n    try {\n      const testAssignment = await abTestingFramework.getUserTestAssignment(userId);\n      testParameters = testAssignment.parameters;\n      testId = testAssignment.testId;\n      \n      if (testId && testParameters) {\n        console.log(`üß™ User in A/B test: ${testId}`, testParameters);\n      }\n    } catch (error) {\n      console.warn('‚ö†Ô∏è Failed to get A/B test assignment:', error);\n    }\n\n    // Use test parameters or defaults\n    const cooldownHours = testParameters?.cooldownHours || DEFAULT_COOLDOWN_HOURS;\n    const snoozeHours = testParameters?.snoozeHours || DEFAULT_SNOOZE_HOURS;\n    const respectCircadianTiming = testParameters?.respectCircadianTiming ?? true;\n    const minimumTimingScore = testParameters?.minimumTimingScore ?? 30;\n\n    try {\n      setLoading(true);\n\n      // 2. Snooze check\n      const snoozeKey = `adaptive_suggestion_snooze_until_${userId}`;\n      const snoozeUntil = await AsyncStorage.getItem(snoozeKey);\n      if (snoozeUntil && Date.now() < parseInt(snoozeUntil)) {\n        console.log('üò¥ Adaptive suggestion snoozed');\n        return { show: false };\n      }\n\n      // 3. Cooldown check (using A/B test parameters)\n      const cooldownKey = `adaptive_suggestion_last_${userId}`;\n      const lastSuggested = await AsyncStorage.getItem(cooldownKey);\n      if (lastSuggested) {\n        const timeSinceLastSuggestion = Date.now() - parseInt(lastSuggested);\n        const cooldownMs = cooldownHours * 60 * 60 * 1000;\n        \n        if (timeSinceLastSuggestion < cooldownMs) {\n          const hoursLeft = Math.ceil((cooldownMs - timeSinceLastSuggestion) / (60 * 60 * 1000));\n          console.log(`‚è∞ Adaptive suggestion cooldown: ${hoursLeft}h remaining (A/B test: ${cooldownHours}h)`);\n          if (__DEV__) {\n            console.log(`üîß DEV MODE: To clear cooldown, run in console: AsyncStorage.removeItem('${cooldownKey}')`);\n          }\n          return { show: false };\n        }\n      }\n\n      // 4. Quiet hours check\n      if (isQuietHours()) {\n        console.log('üåô Quiet hours - no adaptive suggestions');\n        return { show: false };\n      }\n\n      // 4.5. üïê Smart Timing Check (A/B test controlled)\n      let timingRecommendation: TimingRecommendation | null = null;\n      if (respectCircadianTiming) {\n        try {\n          timingRecommendation = await circadianTimingEngine.getTimingRecommendation(userId);\n          \n          if (timingRecommendation.score < minimumTimingScore) {\n            console.log(`‚è∞ Poor timing score: ${timingRecommendation.score}/100 (min: ${minimumTimingScore}) - ${timingRecommendation.rationale}`);\n            \n            // Show alternatives if available\n            if (timingRecommendation.alternatives && timingRecommendation.alternatives.length > 0) {\n              const bestAlternative = timingRecommendation.alternatives[0];\n              console.log(`üí° Better timing available at ${bestAlternative.hour}:00 (score: ${bestAlternative.score})`);\n            }\n            \n            return { show: false };\n          }\n          \n          console.log(`‚è∞ Good timing: ${timingRecommendation.score}/100 - ${timingRecommendation.rationale}`);\n        } catch (error) {\n          console.warn('‚ö†Ô∏è Circadian timing check failed:', error);\n          // Continue without timing optimization\n        }\n      } else {\n        console.log('‚è∞ Circadian timing disabled by A/B test - proceeding without timing check');\n      }\n\n      // 5. Build minimal context\n      const context = await buildMinimalContext(userId);\n      console.log('üìä Built minimal context for adaptive suggestion:', {\n        stressLevel: context.currentContext.userState.stressLevel,\n        energyLevel: context.currentContext.userState.energyLevel,\n        recentActivity: context.recentActivity\n      });\n\n      // 6. JITAI timing prediction\n      let timing: any = null;\n      let confidence = 0;\n\n      try {\n        const { jitaiEngine } = await import('../jitai/jitaiEngine');\n        \n        // Build complete JITAI context\n        const jitaiContext = {\n          userId,\n          userProfile: {\n            preferredLanguage: 'tr',\n            symptomSeverity: context.currentContext.userState.stressLevel === 'high' ? 7 : \n                           context.currentContext.userState.stressLevel === 'low' ? 3 : 5,\n            communicationStyle: 'encouraging' as any,\n            triggerWords: [],\n            avoidanceTopics: [],\n            therapeuticGoals: [],\n            preferredCBTTechniques: [],\n            riskFactors: [],\n            culturalContext: 'turkish'\n          },\n          currentContext: buildContextAnalysisResult(userId, context),\n          interventionHistory: [],\n          currentUserState: {\n            isAppActive: true,\n            lastInteraction: new Date(),\n            recentMood: 'neutral',\n            energyLevel: context.currentContext.userState.energyLevel,\n            stressPattern: [context.currentContext.userState.stressLevel as any]\n          },\n          personalizationProfile: {\n            preferredTimes: ['09:00', '14:00', '19:00'],\n            responsiveStates: ['ACTIVE', 'RESTING'] as any[], // UserActivityState enum values\n            effectiveCategories: ['breathwork', 'cbt'] as any[],\n            culturalPreferences: { language: 'tr' },\n            communicationStyle: 'encouraging' as const\n          }\n        };\n        \n        timing = await jitaiEngine.predictOptimalTiming(jitaiContext);\n        confidence = timing?.optimalTiming?.confidence || 0;\n        \n        console.log('üéØ JITAI timing prediction:', { confidence });\n        \n        if (confidence < 0.5) {\n          console.log('üìâ JITAI confidence too low, skipping suggestion');\n          return { show: false };\n        }\n      } catch (error) {\n        console.warn('‚ö†Ô∏è JITAI timing prediction failed:', error);\n        // Continue with default confidence\n        confidence = 0.6; // Default moderate confidence\n      }\n\n      // 7. Adaptive intervention trigger\n      let suggestion: any = null;\n      \n      try {\n        const adaptiveInterventions = (await import('../interventions/adaptiveInterventions')).default;\n        \n        // Build complete intervention context\n        const interventionContext = {\n          userId,\n          userProfile: {\n            preferredLanguage: 'tr',\n            symptomSeverity: context.currentContext.userState.stressLevel === 'high' ? 7 : \n                           context.currentContext.userState.stressLevel === 'low' ? 3 : 5,\n            communicationStyle: 'encouraging' as any,\n            triggerWords: [],\n            avoidanceTopics: [],\n            therapeuticGoals: [],\n            preferredCBTTechniques: [],\n            riskFactors: [],\n            culturalContext: 'turkish'\n          },\n          currentContext: buildContextAnalysisResult(userId, context),\n          userConfig: {\n            enabled: true,\n            userAutonomyLevel: 'high' as const,\n            maxInterventionsPerHour: 2,\n            maxInterventionsPerDay: 6,\n            respectQuietHours: true,\n            quietHours: {\n              start: \"22:00\",\n              end: \"08:00\"\n            },\n            preferredDeliveryMethods: [],\n            allowInAppInterruptions: true,\n            allowNotifications: false, // Only in-app for now\n            enableHapticFeedback: true,\n            adaptToUserFeedback: true,\n            learnFromEffectiveness: true,\n            culturalAdaptation: true,\n            crisisOverride: true,\n            emergencyContacts: [],\n            escalationProtocol: true\n          },\n          recentInterventions: [],\n          recentUserActivity: {\n            lastAppUsage: new Date(),\n            sessionDuration: 0\n          },\n          deviceState: {\n            batteryLevel: 1,\n            isCharging: false,\n            networkConnected: true,\n            inFocus: true\n          }\n        };\n\n        suggestion = await adaptiveInterventions.triggerContextualIntervention(interventionContext);\n        console.log('üí° Adaptive intervention generated:', suggestion);\n\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Adaptive intervention failed:', error);\n        // Generate fallback suggestion with enhanced breathwork logic\n        suggestion = await generateEnhancedFallbackSuggestion(userId, context);\n      }\n\n      // üîß DEV MODE: Force suggestion for Quality Ribbon testing if no suggestion generated\n      if (__DEV__ && (!suggestion || !suggestion.show)) {\n        console.log('üîß DEV: No suggestion generated, forcing one for Quality Ribbon test');\n        suggestion = {\n          show: true,\n          id: `dev_test_${Date.now()}`,\n          title: 'üéØ Debug: Quality Ribbon Test',\n          content: 'Bu Development modda Quality Ribbon g√∂r√ºn√ºm√ºn√º test etmek i√ßin otomatik olu≈üturulan bir √∂nerdir.',\n          category: 'mood',\n          confidence: 0.85,\n          priority: 'medium',\n          timing: 'optimal',\n          cta: {\n            label: 'Teste Devam Et',\n            screen: '/(tabs)/mood',\n            params: {}\n          }\n        };\n      }\n\n      // 8. Process and return suggestion\n      if (suggestion && suggestion.show) {\n        // Update last suggested timestamp\n        await AsyncStorage.setItem(cooldownKey, Date.now().toString());\n        \n        // Track suggestion shown in both telemetry and analytics\n        await trackAIInteraction(AIEventType.ADAPTIVE_SUGGESTION_SHOWN, {\n          userId,\n          category: suggestion.category || 'general',\n          confidence,\n          delivery: 'inline_card',\n          source: 'today', // Consistent source for today-generated suggestions\n          stressLevel: context.currentContext.userState.stressLevel,\n          energyLevel: context.currentContext.userState.energyLevel\n        });\n        \n        // üìä Track in analytics for performance analysis\n        await adaptiveSuggestionAnalytics.trackEvent('shown', userId, {\n          show: true,\n          title: suggestion.title,\n          content: suggestion.content,\n          category: suggestion.category,\n          confidence,\n          cta: suggestion.cta\n        });\n\n        // üß™ Record A/B test event\n        if (testId) {\n          await abTestingFramework.recordTestEvent(userId, 'suggestion_shown', {\n            suggestionCategory: suggestion.category,\n            timingScore: timingRecommendation?.score,\n            userStressLevel: context.currentContext.userState.stressLevel\n          });\n        }\n\n        return {\n          show: true,\n          title: suggestion.title,\n          content: suggestion.content,\n          cta: suggestion.cta,\n          confidence,\n          category: suggestion.category\n        };\n      }\n\n      return { show: false };\n\n    } catch (error) {\n      console.error('‚ùå Adaptive suggestion generation failed:', error);\n      return { show: false };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * üõ†Ô∏è Generate fallback suggestion based on context\n   */\n  const generateFallbackSuggestion = (context: MinimalContext): any => {\n    const { recentActivity, currentContext } = context;\n    \n    // High stress ‚Üí breathwork\n    if (currentContext.userState.stressLevel === 'high') {\n      return {\n        show: true,\n        title: \"Nefes Al\",\n        content: \"Stres seviyeniz y√ºksek g√∂r√ºn√ºyor. 5 dakikalƒ±k nefes egzersizi yapmak ister misiniz?\",\n        category: 'breathwork',\n        cta: {\n          screen: '/(tabs)/breathwork',\n          params: { autoStart: true, protocol: 'box' }\n        }\n      };\n    }\n\n    // Low activity ‚Üí mood check\n    if (!recentActivity || (recentActivity.moodEntries || 0) === 0) {\n      return {\n        show: true,\n        title: \"Nasƒ±l Hissediyorsun?\",\n        content: \"Bug√ºn nasƒ±l hissettiƒüinizi kaydetmek ister misiniz?\",\n        category: 'mood',\n        cta: {\n          screen: '/(tabs)/mood'\n        }\n      };\n    }\n\n    // High compulsions, low CBT ‚Üí CBT suggestion\n    if ((recentActivity?.compulsionCount || 0) > 5 && (recentActivity?.cbtRecords || 0) === 0) {\n      return {\n        show: true,\n        title: \"D√º≈ü√ºnce Kaydƒ±\",\n        content: \"Son g√ºnlerde biraz zorlanƒ±yor gibisiniz. D√º≈ü√ºncelerinizi kaydetmek yardƒ±mcƒ± olabilir.\",\n        category: 'cbt',\n        cta: {\n          screen: '/(tabs)/cbt'\n        }\n      };\n    }\n\n    return { show: false };\n  };\n\n  /**\n   * üå¨Ô∏è Enhanced fallback suggestion with breathwork service integration\n   */\n  const generateEnhancedFallbackSuggestion = async (userId: string, context: MinimalContext): Promise<any> => {\n    const { recentActivity, currentContext } = context;\n    \n    // 1. Check if breathwork suggestion should be prioritized\n    const shouldTryBreathwork = (\n      currentContext.userState.stressLevel === 'high' ||\n      currentContext.userState.energyLevel < 30 ||\n      (recentActivity?.compulsionCount || 0) > 3\n    );\n\n    if (shouldTryBreathwork) {\n      try {\n        // Import breathwork service and mood tracker\n        const { BreathworkSuggestionService } = await import('../services/breathworkSuggestionService');\n        const moodTracker = (await import('@/services/moodTrackingService')).default;\n        \n        // Get mood score for context\n        let moodScore: number | undefined = undefined;\n        try {\n          const lastMood = await moodTracker.getLastMoodEntry(userId);\n          moodScore = lastMood?.mood_score;\n        } catch (error) {\n          console.warn('‚ö†Ô∏è Failed to get mood for breathwork context:', error);\n        }\n        \n        const breathworkContext = {\n          userId,\n          currentTime: new Date(),\n          moodScore,\n          recentCompulsions: recentActivity?.compulsionCount || 0,\n          anxietyLevel: moodScore ? Math.max(1, Math.min(10, Math.round(11 - moodScore/10))) : \n                      currentContext.userState.stressLevel === 'high' ? 8 : \n                      currentContext.userState.stressLevel === 'low' ? 3 : 5\n        };\n        \n        const breathworkService = BreathworkSuggestionService.getInstance();\n        const breathworkSuggestion = await breathworkService.generateSuggestion(breathworkContext);\n        \n        if (breathworkSuggestion) {\n          const protocol = breathworkSuggestion.protocol?.name || 'box';\n          const anxietyLevel = breathworkContext.anxietyLevel;\n          \n          return {\n            show: true,\n            id: `breathwork_${Date.now()}`,\n            title: breathworkSuggestion.trigger?.reason || \"Nefes Al\",\n            content: breathworkSuggestion.protocol.description || \n                    `${protocol === '4-7-8' ? '4-7-8' : 'Kutu'} nefes tekniƒüi ile ${Math.ceil(breathworkSuggestion.protocol.duration / 60) || 5} dakika nefes egzersizi yaparak rahatlamaya ne dersiniz?`,\n            category: 'breathwork',\n            confidence: 0.8,\n            priority: breathworkSuggestion.urgency === 'high' ? 'urgent' : \n                     breathworkSuggestion.urgency === 'low' ? 'low' : 'medium',\n            timing: 'optimal',\n            cta: {\n              label: 'Nefes Egzersiziyle Ba≈üla',\n              screen: '/(tabs)/breathwork',\n              params: {\n                protocol: anxietyLevel >= 7 ? '4-7-8' : 'box',\n                autoStart: 'true',\n                source: 'adaptive_suggestion'\n              }\n            }\n          };\n        }\n        \n        console.log('üå¨Ô∏è Breathwork service returned no suggestion');\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Enhanced breathwork suggestion failed:', error);\n      }\n    }\n\n    // 2. Fall back to original suggestion logic\n    return generateFallbackSuggestion(context);\n  };\n\n  /**\n   * üîÑ Generate suggestion from UnifiedAIPipeline result\n   */\n  const generateSuggestionFromPipeline = useCallback(async (\n    userId: string, \n    result: UnifiedPipelineResult, \n    source: 'mood' | 'cbt' | 'tracking' | 'today' = 'today'\n  ): Promise<AdaptiveSuggestion> => {\n    // 1. Flag checks\n    if (!FEATURE_FLAGS.isEnabled('AI_JITAI_SYSTEM') || \n        !FEATURE_FLAGS.isEnabled('AI_ADAPTIVE_INTERVENTIONS')) {\n      console.log('üö´ Pipeline-based adaptive suggestions disabled by flags');\n      return { show: false };\n    }\n\n    try {\n      // 2. Get A/B test parameters\n      let testParameters: ABTestVariant['parameters'] | null = null;\n      let testId: string | null = null;\n      try {\n        const testAssignment = await abTestingFramework.getUserTestAssignment(userId);\n        testParameters = testAssignment.parameters;\n        testId = testAssignment.testId;\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to get A/B test assignment:', error);\n      }\n\n      const cooldownHours = testParameters?.cooldownHours || DEFAULT_COOLDOWN_HOURS;\n      const respectCircadianTiming = testParameters?.respectCircadianTiming ?? true;\n      const minimumTimingScore = testParameters?.minimumTimingScore ?? 30;\n\n      // 3. Check cooldown/snooze/quiet (reuse existing logic)\n      const snoozeKey = `adaptive_suggestion_snooze_until_${userId}`;\n      const snoozeUntil = await AsyncStorage.getItem(snoozeKey);\n      if (snoozeUntil && Date.now() < parseInt(snoozeUntil)) {\n        return { show: false };\n      }\n\n      const cooldownKey = `adaptive_suggestion_last_${userId}`;\n      const lastSuggested = await AsyncStorage.getItem(cooldownKey);\n      if (lastSuggested) {\n        const timeSinceLastSuggestion = Date.now() - parseInt(lastSuggested);\n        const cooldownMs = cooldownHours * 60 * 60 * 1000;\n        if (timeSinceLastSuggestion < cooldownMs) {\n          return { show: false };\n        }\n      }\n\n      if (isQuietHours()) {\n        return { show: false };\n      }\n\n      // 4. Timing check\n      if (respectCircadianTiming) {\n        try {\n          const timingRecommendation = await circadianTimingEngine.getTimingRecommendation(userId);\n          if (timingRecommendation.score < minimumTimingScore) {\n            console.log(`‚è∞ Poor timing score for ${source}: ${timingRecommendation.score}/${minimumTimingScore}`);\n            return { show: false };\n          }\n        } catch (error) {\n          console.warn('‚ö†Ô∏è Circadian timing check failed:', error);\n        }\n      }\n\n      // 5. Extract metrics safely from pipeline result\n      let weeklyDelta = 0;\n      let volatility = 0;\n      let baselines: any = {};\n      let sampleSize = 0;\n      let bestTimes: number[] = [];\n\n      try {\n        // Primary: analytics data\n        if (result.analytics && source !== 'today' && result.analytics[source as keyof typeof result.analytics]) {\n          const analytics = (result.analytics as any)[source];\n          weeklyDelta = analytics.weeklyDelta || 0;\n          volatility = analytics.volatility || 0;\n          baselines = analytics.baselines || {};\n          sampleSize = analytics.sampleSize || 0;\n          bestTimes = analytics.bestTimes || [];\n        }\n        // Enhanced Fallback: patterns data with source-specific extraction\n        else if (Array.isArray(result.patterns)) {\n          const pattern = result.patterns.find((p: any) => p.category === source);\n          if (pattern?.dashboardMetrics) {\n            weeklyDelta = pattern.dashboardMetrics.weeklyDelta || 0;\n            volatility = pattern.dashboardMetrics.volatility || 0;\n            baselines = pattern.dashboardMetrics.baselines || {};\n            sampleSize = pattern.dashboardMetrics.sampleSize || 0;\n          }\n        }\n        // üîß ENHANCED FALLBACK: Source-specific heuristics when analytics missing\n        else {\n          console.log(`‚ö° Analytics absent for ${source}, using enhanced fallbacks`);\n          \n          if (source === 'cbt') {\n            // CBT: infer progress from insights.therapeutic and insights.progress with enhanced confidence\n            const therapeuticCount = result.insights?.therapeutic?.length || 0;\n            const progressCount = result.insights?.progress?.length || 0;\n            const totalInsights = therapeuticCount + progressCount;\n            \n            if (totalInsights > 0) {\n              sampleSize = Math.max(totalInsights, result.metadata?.processingTime ? Math.min(10, Math.floor(result.metadata.processingTime / 800)) : 0);\n              \n              // Enhanced volatility inference from insight diversity and patterns\n              const patternDiversity = Array.isArray(result.patterns) ? result.patterns.length : 0;\n              volatility = therapeuticCount > 5 ? 30 : // High therapeutic activity\n                          therapeuticCount > 3 ? 20 : // Moderate activity\n                          therapeuticCount > 1 ? 15 : 10; // Low activity\n              \n              // Sophisticated weekly delta from therapeutic vs progress balance\n              const therapeuticRatio = totalInsights > 0 ? therapeuticCount / totalInsights : 0;\n              weeklyDelta = therapeuticRatio > 0.7 ? 8 : // High therapeutic focus = good progress\n                           therapeuticRatio > 0.4 ? 5 : // Balanced insights\n                           progressCount > 3 ? 3 : 0; // Progress-heavy but modest improvement\n              \n              // Dynamic baseline based on insight quality\n              baselines.cbt = progressCount >= 3 ? 7 : // Good progress evidence\n                             therapeuticCount >= 2 ? 5 : // Some therapeutic work\n                             3; // Minimal baseline\n              \n              // Add pattern context if available\n              if (patternDiversity > 0) {\n                volatility = Math.min(volatility + patternDiversity * 2, 35); // Cap volatility\n                weeklyDelta = Math.max(weeklyDelta - 1, 0); // Patterns suggest complexity, reduce optimism slightly\n              }\n            } else {\n              // Enhanced fallback for no insights - use metadata context\n              const processingTime = result.metadata?.processingTime || 0;\n              if (processingTime > 2000) {\n                // Long processing suggests complex data, infer minimal activity\n                sampleSize = 1;\n                volatility = 5;\n                weeklyDelta = -2; // Slight negative trend assumption\n                baselines.cbt = 4;\n              } else {\n                // Short processing = no data\n                sampleSize = 0;\n                volatility = 0;\n                weeklyDelta = 0;\n                baselines.cbt = 3;\n              }\n            }\n            console.log(`üß† CBT enhanced fallback: insights=${totalInsights}, sampleSize=${sampleSize}, volatility=${volatility}, weeklyDelta=${weeklyDelta}`);\n            \n          } else if (source === 'tracking') {\n            // Tracking: enhanced trend analysis with pattern sophistication\n            if (Array.isArray(result.patterns) && result.patterns.length > 0) {\n              const temporalPatterns = result.patterns.filter((p: any) => p.temporal === true || p.type?.includes('temporal'));\n              const allPatterns = result.patterns;\n              \n              // Enhanced pattern classification\n              const increasingPatterns = allPatterns.filter((p: any) => \n                p.trend === 'increasing' || \n                p.description?.toLowerCase()?.includes('increase') || \n                p.description?.toLowerCase()?.includes('artƒ±') ||\n                p.description?.toLowerCase()?.includes('y√ºksel') ||\n                p.severity === 'high' && p.confidence > 0.7).length;\n                \n              const decreasingPatterns = allPatterns.filter((p: any) => \n                p.trend === 'decreasing' || \n                p.description?.toLowerCase()?.includes('azal') || \n                p.description?.toLowerCase()?.includes('d√º≈ü') ||\n                p.description?.toLowerCase()?.includes('improve') ||\n                p.severity === 'low' && p.confidence > 0.7).length;\n              \n              const stablePatterns = allPatterns.length - increasingPatterns - decreasingPatterns;\n              \n              // Sophisticated weeklyDelta calculation\n              const trendStrength = (increasingPatterns * 12) - (decreasingPatterns * 12) + (stablePatterns * 0);\n              weeklyDelta = Math.max(-25, Math.min(25, trendStrength)); // Clamped range\n              \n              // Enhanced sample size from multiple sources\n              const patternSampleSize = temporalPatterns.length * 2; // Temporal patterns worth more\n              const metadataSampleSize = result.metadata?.processingTime ? Math.min(10, Math.floor(result.metadata.processingTime / 400)) : 0;\n              sampleSize = Math.max(patternSampleSize, metadataSampleSize, allPatterns.length);\n              \n              // Dynamic volatility based on pattern conflict\n              const patternConflict = Math.abs(increasingPatterns - decreasingPatterns);\n              const patternConsistency = stablePatterns / allPatterns.length;\n              volatility = (patternConflict * 6) + (patternConsistency > 0.6 ? 0 : 10); // Conflict + inconsistency\n              \n              // Smart baseline inference\n              if (decreasingPatterns > increasingPatterns && decreasingPatterns >= 2) {\n                baselines.compulsions = 4; // Improving trend = lower baseline\n              } else if (increasingPatterns > decreasingPatterns && increasingPatterns >= 2) {\n                baselines.compulsions = 8; // Worsening trend = higher baseline  \n              } else {\n                baselines.compulsions = 6; // Stable/mixed trend = moderate baseline\n              }\n              \n              console.log(`üìä Tracking enhanced fallback: patterns=${allPatterns.length}, inc=${increasingPatterns}, dec=${decreasingPatterns}, stable=${stablePatterns}, weeklyDelta=${weeklyDelta}`);\n            } else {\n              // Enhanced metadata-only fallback\n              const processingTime = result.metadata?.processingTime || 0;\n              const contextSize = 0; // dataPoints not available in metadata type\n              \n              if (processingTime > 3000 || contextSize > 20) {\n                // Rich context suggests active tracking\n                sampleSize = Math.min(8, Math.floor(processingTime / 500) + Math.floor(contextSize / 5));\n                weeklyDelta = -2; // Assume slight improvement for active users\n                volatility = 8; // Moderate volatility for active tracking\n                baselines.compulsions = 5;\n              } else if (processingTime > 1000) {\n                // Some context\n                sampleSize = 3;\n                weeklyDelta = 0; // Neutral\n                volatility = 5;\n                baselines.compulsions = 6;\n              } else {\n                // Minimal context\n                sampleSize = 1;\n                weeklyDelta = 0;\n                volatility = 3;\n                baselines.compulsions = 7; // Higher baseline for uncertainty\n              }\n              \n              console.log(`üìä Tracking metadata fallback: processingTime=${processingTime}, contextSize=${contextSize}, sampleSize=${sampleSize}`);\n            }\n          }\n        }\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to extract metrics from pipeline result:', error);\n      }\n\n      // 6. Generate suggestion based on source and metrics\n      let suggestion: any = null;\n\n      switch (source) {\n        case 'mood':\n          suggestion = generateMoodSuggestion(weeklyDelta, volatility, baselines, sampleSize);\n          break;\n        case 'cbt':\n          suggestion = generateCBTSuggestion(weeklyDelta, volatility, baselines, sampleSize);\n          break;\n        case 'tracking':\n          suggestion = generateTrackingSuggestion(weeklyDelta, volatility, baselines, sampleSize);\n          break;\n        default:\n          return { show: false };\n      }\n\n      if (!suggestion || !suggestion.show) {\n        return { show: false };\n      }\n\n      // 7. Track and return\n      await AsyncStorage.setItem(cooldownKey, Date.now().toString());\n      \n      const confidence = 0.7; // Default confidence for pipeline-based suggestions\n      \n      await trackAIInteraction(AIEventType.ADAPTIVE_SUGGESTION_SHOWN, {\n        userId,\n        category: suggestion.category,\n        confidence,\n        delivery: 'cross_module_card',\n        source: source || 'today', // Ensure source is always present\n        hasWeeklyDelta: weeklyDelta !== 0,\n        hasVolatility: volatility > 0,\n        sampleSize\n      });\n\n      await adaptiveSuggestionAnalytics.trackEvent('shown', userId, suggestion);\n\n      if (testId) {\n        await abTestingFramework.recordTestEvent(userId, 'suggestion_shown', {\n          suggestionCategory: suggestion.category\n        });\n      }\n\n      return {\n        show: true,\n        title: suggestion.title,\n        content: suggestion.content,\n        cta: suggestion.cta,\n        confidence,\n        category: suggestion.category\n      };\n\n    } catch (error) {\n      console.error(`‚ùå Pipeline-based suggestion generation failed for ${source}:`, error);\n      return { show: false };\n    }\n  }, []);\n\n  /**\n   * üòä Generate mood-specific suggestions\n   */\n  const generateMoodSuggestion = (weeklyDelta: number, volatility: number, baselines: any, sampleSize: number): any => {\n    // Improvement ‚Üí CBT reinforcement\n    if (weeklyDelta > 10 && sampleSize >= 5) {\n      return {\n        show: true,\n        title: \"G√ºzel ƒ∞vme!\",\n        content: \"Mood'un bu hafta iyile≈ümi≈ü. Bunu bir CBT kaydƒ± ile peki≈ütirmek ister misin?\",\n        category: 'cbt',\n        cta: { screen: '/(tabs)/cbt' }\n      };\n    }\n\n    // Low mood/high volatility ‚Üí breathwork\n    if ((baselines.mood && baselines.mood < 40) || volatility > 15) {\n      return {\n        show: true,\n        title: \"Kƒ±sa Bir Mola\",\n        content: \"Kendini zorlayƒ±cƒ± hissediyorsun. 5 dakikalƒ±k nefes egzersizi rahatlatabilir.\",\n        category: 'breathwork',\n        cta: { screen: '/(tabs)/breathwork', params: { autoStart: true, protocol: 'box' } }\n      };\n    }\n\n    // Missing recency ‚Üí mood prompt\n    if (sampleSize < 3) {\n      return {\n        show: true,\n        title: \"Nasƒ±l Hissediyorsun?\",\n        content: \"Son g√ºnlerde mood kaydƒ± yok. ≈ûimdi bir kayƒ±t eklemek ister misin?\",\n        category: 'mood',\n        cta: { screen: '/(tabs)/mood' }\n      };\n    }\n\n    return { show: false };\n  };\n\n  /**\n   * üß† Generate CBT-specific suggestions\n   */\n  const generateCBTSuggestion = (weeklyDelta: number, volatility: number, baselines: any, sampleSize: number): any => {\n    // Good CBT progress ‚Üí mood tracking\n    if (weeklyDelta > 8 && sampleSize >= 3) {\n      return {\n        show: true,\n        title: \"ƒ∞lerleme Kaydƒ±\",\n        content: \"CBT kayƒ±tlarƒ±n √ßok tutarlƒ±! Mood tracking ile desteklemeye ne dersin?\",\n        category: 'mood',\n        cta: { screen: '/(tabs)/mood' }\n      };\n    }\n\n    // High distortion volatility ‚Üí breathwork before CBT\n    if (volatility > 20) {\n      return {\n        show: true,\n        title: \"√ñnce Sakinle≈ü\",\n        content: \"D√º≈ü√ºnceler karma≈üƒ±k g√∂r√ºn√ºyor. √ñnce nefes egzersizi ile sakinle≈ümeye ne dersin?\",\n        category: 'breathwork',\n        cta: { screen: '/(tabs)/breathwork', params: { autoStart: true, protocol: '4-7-8' } }\n      };\n    }\n\n    // Low CBT activity ‚Üí encourage\n    if (sampleSize < 2) {\n      return {\n        show: true,\n        title: \"D√º≈ü√ºnce Analizi\",\n        content: \"D√º≈ü√ºncelerini analiz etmek i√ßin g√ºzel bir zaman. Ba≈ülamaya ne dersin?\",\n        category: 'cbt',\n        cta: { screen: '/(tabs)/cbt' }\n      };\n    }\n\n    return { show: false };\n  };\n\n  /**\n   * üìä Generate tracking-specific suggestions\n   */\n  const generateTrackingSuggestion = (weeklyDelta: number, volatility: number, baselines: any, sampleSize: number): any => {\n    // High compulsion increase ‚Üí breathwork\n    if (weeklyDelta > 15 || (baselines.compulsions && baselines.compulsions > 8)) {\n      return {\n        show: true,\n        title: \"Stresi Azalt\",\n        content: \"Komp√ºlsiyon sayƒ±n artmƒ±≈ü. Hemen nefes egzersizi ile stresi azaltmaya ne dersin?\",\n        category: 'breathwork',\n        cta: { screen: '/(tabs)/breathwork', params: { autoStart: true, protocol: '4-7-8' } }\n      };\n    }\n\n    // Good resistance progress ‚Üí CBT analysis\n    if (weeklyDelta < -10 && sampleSize >= 5) {\n      return {\n        show: true,\n        title: \"Ba≈üarƒ±nƒ± Analiz Et\",\n        content: \"Diren√ß oranƒ±n harika! Bu pattern'i CBT kaydƒ± ile analiz etmek ister misin?\",\n        category: 'cbt',\n        cta: { screen: '/(tabs)/cbt' }\n      };\n    }\n\n    // Consistent tracking ‚Üí mood correlation\n    if (sampleSize >= 7) {\n      return {\n        show: true,\n        title: \"Mood Korelasyonu\",\n        content: \"Takip kayƒ±tlarƒ±n √ßok d√ºzenli! Mood ile korelasyonunu g√∂rmek ister misin?\",\n        category: 'mood',\n        cta: { screen: '/(tabs)/mood' }\n      };\n    }\n\n    return { show: false };\n  };\n\n  /**\n   * üìä Track suggestion click for analytics\n   */\n  const trackSuggestionClick = useCallback(async (userId: string, suggestion: AdaptiveSuggestion, sessionDuration?: number): Promise<void> => {\n    try {\n      await adaptiveSuggestionAnalytics.trackEvent('clicked', userId, suggestion, { sessionDuration });\n      \n      // üïê Learn from successful interaction for circadian timing\n      const currentHour = new Date().getHours();\n      await circadianTimingEngine.learnFromInteraction(\n        userId, \n        currentHour, \n        true, // Successful (clicked)\n        suggestion.category === 'breathwork' ? 'high' : 'moderate' // Infer stress from category\n      );\n\n      // üß™ Record A/B test click event\n      try {\n        await abTestingFramework.recordTestEvent(userId, 'suggestion_clicked', {\n          suggestionCategory: suggestion.category,\n          sessionDuration\n        });\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to record A/B test click event:', error);\n      }\n      \n      console.log('üìä Tracked adaptive suggestion click for analytics, timing, and A/B testing');\n    } catch (error) {\n      console.error('‚ùå Failed to track suggestion click:', error);\n    }\n  }, []);\n\n  /**\n   * üìä Track suggestion dismissal for analytics\n   */\n  const trackSuggestionDismissal = useCallback(async (userId: string, suggestion: AdaptiveSuggestion, snoozeHours?: number): Promise<void> => {\n    try {\n      await adaptiveSuggestionAnalytics.trackEvent('dismissed', userId, suggestion, { snoozeHours });\n      \n      // üïê Learn from dismissal for circadian timing\n      const currentHour = new Date().getHours();\n      await circadianTimingEngine.learnFromInteraction(\n        userId, \n        currentHour, \n        false, // Not successful (dismissed)\n        suggestion.category === 'breathwork' ? 'high' : 'moderate' // Infer stress from category\n      );\n\n      // üß™ Record A/B test dismissal event\n      try {\n        await abTestingFramework.recordTestEvent(userId, 'suggestion_dismissed', {\n          suggestionCategory: suggestion.category,\n          snoozeHours\n        });\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Failed to record A/B test dismissal event:', error);\n      }\n      \n      console.log('üìä Tracked adaptive suggestion dismissal for analytics, timing, and A/B testing');\n    } catch (error) {\n      console.error('‚ùå Failed to track suggestion dismissal:', error);\n    }\n  }, []);\n\n  /**\n   * üò¥ Snooze suggestion for specified hours\n   */\n  const snoozeSuggestion = useCallback(async (userId: string, hours?: number, source = 'unknown'): Promise<void> => {\n    // Use A/B test parameter or provided value or default\n    let snoozeHours = hours;\n    if (!snoozeHours) {\n      try {\n        const testAssignment = await abTestingFramework.getUserTestAssignment(userId);\n        snoozeHours = testAssignment.parameters?.snoozeHours || DEFAULT_SNOOZE_HOURS;\n      } catch (error) {\n        snoozeHours = DEFAULT_SNOOZE_HOURS;\n      }\n    }\n    try {\n      const snoozeKey = `adaptive_suggestion_snooze_until_${userId}`;\n      const snoozeUntil = Date.now() + (snoozeHours * 60 * 60 * 1000);\n      await AsyncStorage.setItem(snoozeKey, snoozeUntil.toString());\n      \n      // Track dismissal in both telemetry and analytics\n      await trackAIInteraction(AIEventType.ADAPTIVE_SUGGESTION_DISMISSED, {\n        userId,\n        source,\n        snoozeHours,\n        category: 'dismissed' // Consistent category for dismissals\n      });\n      \n      // üìä Track dismissal in analytics (we need the suggestion object, so this will be handled from Today page)\n      console.log(`üò¥ Adaptive suggestion snoozed for ${snoozeHours} hours (A/B test controlled)`);\n    } catch (error) {\n      console.error('‚ùå Failed to snooze adaptive suggestion:', error);\n    }\n  }, []);\n\n  return {\n    generateSuggestion,\n    generateSuggestionFromPipeline,\n    snoozeSuggestion,\n    trackSuggestionClick,\n    trackSuggestionDismissal,\n    loading,\n    isQuietHours\n  };\n}\n\nexport type { AdaptiveSuggestion };\n"],"mappings":"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","ignoreList":[]}