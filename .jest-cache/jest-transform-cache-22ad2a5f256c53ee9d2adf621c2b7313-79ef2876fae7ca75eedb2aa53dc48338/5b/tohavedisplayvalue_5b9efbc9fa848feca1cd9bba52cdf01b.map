{"version":3,"names":["_jestMatcherUtils","require","_errors","_hostComponentNames","_textInput","_matches","_utils","toHaveDisplayValue","element","expectedValue","options","_this","checkHostElement","isHostTextInput","ErrorWithStack","type","receivedValue","getTextInputValue","pass","matches","normalizer","exact","message","formatMessage","matcherHint","isNot","join"],"sources":["../../src/matchers/to-have-display-value.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { matcherHint } from 'jest-matcher-utils';\n\nimport { ErrorWithStack } from '../helpers/errors';\nimport { isHostTextInput } from '../helpers/host-component-names';\nimport { getTextInputValue } from '../helpers/text-input';\nimport type { TextMatch, TextMatchOptions } from '../matches';\nimport { matches } from '../matches';\nimport { checkHostElement, formatMessage } from './utils';\n\nexport function toHaveDisplayValue(\n  this: jest.MatcherContext,\n  element: ReactTestInstance,\n  expectedValue: TextMatch,\n  options?: TextMatchOptions,\n) {\n  checkHostElement(element, toHaveDisplayValue, this);\n\n  if (!isHostTextInput(element)) {\n    throw new ErrorWithStack(\n      `toHaveDisplayValue() works only with host \"TextInput\" elements. Passed element has type \"${element.type}\".`,\n      toHaveDisplayValue,\n    );\n  }\n\n  const receivedValue = getTextInputValue(element);\n\n  return {\n    pass: matches(expectedValue, receivedValue, options?.normalizer, options?.exact),\n    message: () => {\n      return [\n        formatMessage(\n          matcherHint(`${this.isNot ? '.not' : ''}.toHaveDisplayValue`, 'element', ''),\n          `Expected element ${this.isNot ? 'not to' : 'to'} have display value`,\n          expectedValue,\n          'Received',\n          receivedValue,\n        ),\n      ].join('\\n');\n    },\n  };\n}\n"],"mappings":";;;;;;AACA,IAAAA,iBAAA,GAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,mBAAA,GAAAF,OAAA;AACA,IAAAG,UAAA,GAAAH,OAAA;AAEA,IAAAI,QAAA,GAAAJ,OAAA;AACA,IAAAK,MAAA,GAAAL,OAAA;AAEO,SAASM,kBAAkBA,CAEhCC,OAA0B,EAC1BC,aAAwB,EACxBC,OAA0B,EAC1B;EAAA,IAAAC,KAAA;EACA,IAAAL,MAAA,CAAAM,gBAAgB,EAACJ,OAAO,EAAED,kBAAkB,EAAE,IAAI,CAAC;EAEnD,IAAI,CAAC,IAAAJ,mBAAA,CAAAU,eAAe,EAACL,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIN,OAAA,CAAAY,cAAc,CACtB,4FAA4FN,OAAO,CAACO,IAAI,IAAI,EAC5GR,kBACF,CAAC;EACH;EAEA,IAAMS,aAAa,GAAG,IAAAZ,UAAA,CAAAa,iBAAiB,EAACT,OAAO,CAAC;EAEhD,OAAO;IACLU,IAAI,EAAE,IAAAb,QAAA,CAAAc,OAAO,EAACV,aAAa,EAAEO,aAAa,EAAEN,OAAO,oBAAPA,OAAO,CAAEU,UAAU,EAAEV,OAAO,oBAAPA,OAAO,CAAEW,KAAK,CAAC;IAChFC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;MACb,OAAO,CACL,IAAAhB,MAAA,CAAAiB,aAAa,EACX,IAAAvB,iBAAA,CAAAwB,WAAW,EAAC,GAAGb,KAAI,CAACc,KAAK,GAAG,MAAM,GAAG,EAAE,qBAAqB,EAAE,SAAS,EAAE,EAAE,CAAC,EAC5E,oBAAoBd,KAAI,CAACc,KAAK,GAAG,QAAQ,GAAG,IAAI,qBAAqB,EACrEhB,aAAa,EACb,UAAU,EACVO,aACF,CAAC,CACF,CAACU,IAAI,CAAC,IAAI,CAAC;IACd;EACF,CAAC;AACH","ignoreList":[]}