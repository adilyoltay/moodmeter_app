{"version":3,"names":["_react","_interopRequireWildcard","require","_asyncStorage","_interopRequireDefault","_queryClient","_supabase","_reactNative","_netinfo","_SupabaseAuthContext","_aiManager","_UnifiedAIPipeline","_contextIntelligence","_adaptiveInterventions","_jitaiEngine","_ybocsAnalysisService","_userProfilingService","_treatmentPlanningEngine","_riskAssessmentService","_types","_aiTelemetry","_featureFlags","_jsxRuntime","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","contextIntelligence","contextIntelligenceEngine","adaptiveInterventions","adaptiveInterventionsEngine","AIContext","createContext","undefined","AIProvider","_ref","children","_useAuth","useAuth","user","_useState","useState","_useState2","_slicedToArray2","isInitialized","setIsInitialized","_useState3","_useState4","isInitializing","setIsInitializing","_useState5","_useState6","initializationError","setInitializationError","useEffect","console","log","id","_useState7","_useState8","isOnline","setIsOnline","_useState9","_useState0","isConnected","setIsConnected","_useState1","_useState10","networkType","setNetworkType","_useState11","_useState12","safeMode","setSafeMode","_useState13","_useState14","safeModeReason","setSafeModeReason","_useState15","_useState16","userProfile","setUserProfile","_useState17","_useState18","treatmentPlan","setTreatmentPlan","_useState19","_useState20","currentRiskAssessment","setCurrentRiskAssessment","_useState21","_useState22","onboardingSession","setOnboardingSession","_useState23","_useState24","hasCompletedOnboarding","setHasCompletedOnboarding","_useState25","_useState26","availableFeatures","setAvailableFeatures","featuresCount","length","initializeAIServices","useCallback","_asyncToGenerator2","userId","reason","startTime","Date","now","__DEV__","trackAIInteraction","AIEventType","SYSTEM_STARTED","context","aiManager","initialize","isEnabled","initializationTasks","name","enabled","FEATURE_FLAGS","task","_task","apply","arguments","_task2","Error","_task3","_task4","jitaiEngine","_task5","ybocsAnalysisService","_task6","userProfilingService","_task7","_yield$import","externalAIService","_task8","_yield$import2","cbtEngine","_task9","_task0","_task1","_task10","_yield$import3","therapeuticPromptEngine","_task11","treatmentPlanningEngine","_task12","_yield$import4","artTherapyEngine","_task13","riskAssessmentService","features","results","Promise","allSettled","filter","map","_ref3","push","success","error","warn","SYSTEM_STATUS","event","service","message","String","_unused","_x","additionalFeatures","InteractionManager","runAfterInteractions","attempts","tryLoad","_ref4","loadUserAIData","setTimeout","initTime","enabledTaskCount","INSIGHTS_DELIVERED","initializationTime","successfulServices","totalAttempted","CHAT_ERROR","_ref5","trim","_yield$Promise$all","all","supabaseService","supabaseClient","from","select","eq","maybeSingle","_yield$Promise$all2","profileRowRes","planRowRes","completed","profileRow","data","onboarding_completed","profile_data","_yield$import5","useSecureStorage","_useSecureStorage","setItem","_unused2","AsyncStorage","JSON","stringify","_unused3","loadedProfile","_yield$import6","_useSecureStorage3","getItem","encLocal","_unused4","aiLocal","parse","_unused5","legacy","_unused6","_yield$import7","_useSecureStorage5","_unused7","_unused8","_yield$import8","svc","upsertAIProfile","_unused9","aiCompleted","legacyCompleted","_unused0","planRow","plan_data","_yield$import9","_useSecureStorage7","_unused1","_unused10","localPlan","_yield$import0","_useSecureStorage9","enc","_unused11","aiPlan","_unused12","legacyPlan","_unused13","_yield$import1","_useSecureStorage1","_unused14","_unused15","_yield$import10","upsertAITreatmentPlan","_unused16","riskKey","riskData","profilePresent","planPresent","source","trackAIError","code","severity","component","method","startOnboarding","session","currentStep","OnboardingStep","WELCOME","completedSteps","ybocsData","sessionState","OnboardingSessionState","ACTIVE","culturalContext","language","country","culturalBackground","communicationStyle","formality","directness","supportStyle","humorAcceptable","preferredPronoun","progress","totalSteps","estimatedTimeRemaining","updateUserProfile","_ref7","profileUpdate","updatedProfile","assign","profileKey","updateProfile","_x2","lastInsightsRef","React","useRef","insightsInFlightRef","insightsQueueRef","generateInsights","current","cached","safeStorageKey","parsed","INSIGHTS_CACHE_HIT","_unused17","insights","_unused18","INSIGHTS_CACHE_MISS","_unused19","cachedInsights","timestamp","_unused20","type","content","priority","queued","end","start","getTime","startISO","toISOString","endISO","dbCompulsions","_yield$Promise$all3","getCompulsions","_yield$Promise$all4","compList","today","toDateString","compulsionsKey","compulsionsRaw","allCompulsions","todayCompulsions","c","compulsions","moods","moodTracker","moodEntries","getMoodEntries","entry","mood_score","energy_level","anxiety_level","notes","trigger","created_at","moodError","behavioralData","exercises","achievements","assessments","hasProfile","interactionsCount","INSIGHTS_MISSING_REQUIRED_FIELDS","_unused21","unifiedPipeline","result","process","metadata","therapeutic","_toConsumableArray2","STORAGE_RETRY_ATTEMPT","key","_unused22","STORAGE_RETRY_SUCCESS","_unused23","STORAGE_RETRY_FAILED","_unused24","_yield$import11","insert","user_id","persistErr","cacheError","_unused25","_unused26","_unused27","awaited","triggerIntervention","_ref1","triggerContextualIntervention","currentContext","analysisId","riskAssessment","overallRisk","immediateRisk","riskFactors","protectiveFactors","interventionUrgency","userState","stressLevel","activityState","energyLevel","socialEngagement","environmentalFactors","patterns","userConfig","getDefaultConfig","recentInterventions","recentUserActivity","lastAppUsage","sessionDuration","deviceState","batteryLevel","isCharging","networkConnected","inFocus","_x3","unsubscribe","NetInfo","addEventListener","state","_state$isConnected","_state$isInternetReac","isInternetReachable","networkStatus","fetch","then","_state$isConnected2","_state$isInternetReac2","perf","globalThis","performance","memory","threshold","timer","setInterval","_perf$memory","used","usedJSHeapSize","usedHeap","_unused28","_unused29","clearInterval","willCall","contextValue","useMemo","jsx","Provider","value","useAI","useContext","useAIStatus","_useAI","useAIUserData","_useAI2","useAIActions","_useAI3"],"sources":["AIContext.tsx"],"sourcesContent":["/**\n * 🧠 Global AI Context Provider\n * \n * Tüm AI servislerini merkezi olarak yöneten React Context.\n * Sprint 1-7'deki tüm AI özelliklerini koordine eder.\n * \n * Features:\n * ✅ Centralized AI service management\n * ✅ Global AI state synchronization\n * ✅ Service initialization & health monitoring\n * ✅ Feature flag integration\n * ✅ Error handling & recovery\n */\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode, useMemo, useCallback } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { safeStorageKey } from '@/lib/queryClient';\nimport supabaseService from '@/services/supabase';\nimport { InteractionManager } from 'react-native';\nimport NetInfo from '@react-native-community/netinfo';\n\n// Auth\nimport { useAuth } from '@/contexts/SupabaseAuthContext';\n\n// AI Services - Sprint Integration\nimport { aiManager } from '@/features/ai/config/aiManager';\n// import { insightsCoordinator } from '@/features/ai/coordinators/insightsCoordinator'; // DEPRECATED - moved to UnifiedAIPipeline\nimport { unifiedPipeline } from '@/features/ai/core/UnifiedAIPipeline';\nimport contextIntelligenceEngine from '@/features/ai/context/contextIntelligence';\nimport adaptiveInterventionsEngine from '@/features/ai/interventions/adaptiveInterventions';\n\n// Alias for backward compatibility\nconst contextIntelligence = contextIntelligenceEngine;\nconst adaptiveInterventions = adaptiveInterventionsEngine;\nimport { jitaiEngine } from '@/features/ai/jitai/jitaiEngine';\nimport { ybocsAnalysisService } from '@/features/ai/services/ybocsAnalysisService';\n// Note: onboardingEngine removed - OnboardingFlowV3 uses direct state management\nimport { userProfilingService } from '@/features/ai/services/userProfilingService';\nimport { adaptiveTreatmentPlanningEngine as treatmentPlanningEngine } from '@/features/ai/engines/treatmentPlanningEngine';\n// Risk Assessment Service (advanced) - runtime optional\nimport { advancedRiskAssessmentService as riskAssessmentService } from '@/features/ai/services/riskAssessmentService';\n// Art Therapy Engine import'u yalnızca feature flag açıkken dinamik yüklenecek\n// AI Chat removed\n\n// Types\nimport type {\n  UserTherapeuticProfile as UserProfile,\n  TreatmentPlan,\n  OnboardingSession,\n  CulturalContext,\n  CommunicationStyle,\n  RiskAssessment,\n  OCDAnalysis\n} from '@/features/ai/types';\nimport { OnboardingStep, OnboardingSessionState } from '@/features/ai/types';\n\n// Telemetry\nimport { trackAIInteraction, trackAIError, AIEventType } from '@/features/ai/telemetry/aiTelemetry';\n\n// Feature Flags\nimport { FEATURE_FLAGS } from '@/constants/featureFlags';\n\n/**\n * 🎯 AI Context Interface\n */\ninterface AIContextType {\n  // Service Status\n  isInitialized: boolean;\n  isInitializing: boolean;\n  initializationError: string | null;\n  safeMode: boolean;\n  safeModeReason?: 'env' | 'memory' | 'errors';\n  \n  // Network Status\n  isOnline: boolean;\n  isConnected: boolean;\n  networkType: string | null;\n  \n  // User AI Data\n  userProfile: UserProfile | null;\n  treatmentPlan: TreatmentPlan | null;\n  currentRiskAssessment: RiskAssessment | null;\n  onboardingSession: OnboardingSession | null;\n  \n  // AI Capabilities\n  hasCompletedOnboarding: boolean;\n  availableFeatures: string[];\n  \n  // Actions\n  initializeAIServices: () => Promise<void>;\n  startOnboarding: () => Promise<OnboardingSession | null>;\n  updateUserProfile: (profile: Partial<UserProfile>) => Promise<void>;\n  generateInsights: () => Promise<any[]>;\n  // assessRisk removed\n  triggerIntervention: (context: any) => Promise<void>;\n  \n  // Chat Integration removed\n}\n\n/**\n * 🧠 AI Context Creation\n */\nconst AIContext = createContext<AIContextType | undefined>(undefined);\n\n/**\n * 🔧 AI Context Provider Props\n */\ninterface AIProviderProps {\n  children: ReactNode;\n}\n\n/**\n * 🚀 AI Context Provider Component\n */\nexport function AIProvider({ children }: AIProviderProps) {\n  const { user } = useAuth();\n  // Chat store removed\n  \n  // Service Status\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [initializationError, setInitializationError] = useState<string | null>(null);\n  \n  // 🔍 DEBUG: Monitor AIContext state (moved below availableFeatures declaration)\n  \n  // 🔍 DEBUG: AIContext mount\n  useEffect(() => {\n    console.log('🤖 AIContext mounted, user:', !!user?.id);\n    return () => console.log('🤖 AIContext unmounted');\n  }, []);\n  \n  // 🔍 DEBUG: User change effect (moved to main initialization effect below)\n  \n  // Network Status\n  const [isOnline, setIsOnline] = useState(true);\n  const [isConnected, setIsConnected] = useState(true);\n  const [networkType, setNetworkType] = useState<string | null>(null);\n  const [safeMode, setSafeMode] = useState<boolean>(false);\n  const [safeModeReason, setSafeModeReason] = useState<'env' | 'memory' | 'errors' | undefined>(undefined);\n  \n  // User AI Data\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [treatmentPlan, setTreatmentPlan] = useState<TreatmentPlan | null>(null);\n  const [currentRiskAssessment, setCurrentRiskAssessment] = useState<RiskAssessment | null>(null);\n  const [onboardingSession, setOnboardingSession] = useState<OnboardingSession | null>(null);\n  \n  // AI Capabilities\n  const [hasCompletedOnboarding, setHasCompletedOnboarding] = useState(false);\n  const [availableFeatures, setAvailableFeatures] = useState<string[]>([]);\n  \n  // 🔍 DEBUG: Monitor AIContext state\n  useEffect(() => {\n    console.log('🤖 AIContext State:', { isInitialized, isInitializing, featuresCount: availableFeatures.length });\n  }, [isInitialized, isInitializing, availableFeatures]);\n\n  /**\n   * 🔄 Initialize AI Services - Performance Optimized with Parallel Loading\n   */\n  const initializeAIServices = useCallback(async (): Promise<void> => {\n    console.log('🤖 initializeAIServices called:', { userId: !!user?.id, isInitializing });\n    if (!user?.id || isInitializing) {\n      console.log('🚫 initializeAIServices early return:', { reason: !user?.id ? 'no_user' : 'already_initializing' });\n      return;\n    }\n\n    console.log('🚀 Starting AI services initialization...');\n    setIsInitializing(true);\n    setInitializationError(null);\n    const startTime = Date.now();\n\n    try {\n      if (__DEV__) console.log('🚀 Initializing AI services for user:', user.id);\n\n      // Track initialization start (system-level event)\n      await trackAIInteraction(AIEventType.SYSTEM_STARTED, {\n        userId: user.id,\n        context: 'ai_context_initialization'\n      });\n\n      // Core manager initialization (must be first)\n      await aiManager.initialize();\n      // Environment doğrulaması: eğer AIManager prerequisites fail ise güvenli mod\n      if (!aiManager.isEnabled) {\n        setSafeMode(true);\n        setSafeModeReason('env');\n      }\n\n      // Prepare parallel service initialization tasks\n      const initializationTasks: Array<{ name: string; task: () => Promise<void>; enabled: boolean }> = [\n        {\n          name: 'AI_INSIGHTS',\n          enabled: FEATURE_FLAGS.isEnabled('AI_INSIGHTS'),\n          task: async () => {\n            // Insights now handled by UnifiedAIPipeline\n            console.log('✅ Insights handled by UnifiedAIPipeline');\n          }\n        },\n        {\n          name: 'AI_CONTEXT_INTELLIGENCE',\n          enabled: FEATURE_FLAGS.isEnabled('AI_CONTEXT_INTELLIGENCE'),\n          task: async () => {\n            if (contextIntelligence && typeof contextIntelligence.initialize === 'function') {\n              await contextIntelligence.initialize();\n            } else {\n              throw new Error('Context Intelligence service not available');\n            }\n          }\n        },\n        {\n          name: 'AI_ADAPTIVE_INTERVENTIONS',\n          enabled: FEATURE_FLAGS.isEnabled('AI_ADAPTIVE_INTERVENTIONS'),\n          task: async () => {\n            if (adaptiveInterventions && typeof adaptiveInterventions.initialize === 'function') {\n              await adaptiveInterventions.initialize();\n            } else {\n              throw new Error('Adaptive Interventions service not available');\n            }\n          }\n        },\n        {\n          name: 'AI_JITAI',\n          enabled: FEATURE_FLAGS.isEnabled('AI_JITAI_SYSTEM'),\n          task: async () => await jitaiEngine.initialize()\n        },\n        {\n          name: 'AI_YBOCS_ANALYSIS',\n          enabled: FEATURE_FLAGS.isEnabled('AI_YBOCS_ANALYSIS'),\n          task: async () => {\n            if (ybocsAnalysisService && typeof ybocsAnalysisService.initialize === 'function') {\n              await ybocsAnalysisService.initialize();\n            } else {\n              throw new Error('Y-BOCS Analysis service not available');\n            }\n          }\n        },\n        {\n          name: 'AI_USER_PROFILING',\n          enabled: FEATURE_FLAGS.isEnabled('AI_USER_PROFILING'),\n          task: async () => {\n            if (userProfilingService && typeof userProfilingService.initialize === 'function') {\n              await userProfilingService.initialize();\n            } else {\n              throw new Error('User Profiling service not available');\n            }\n          }\n        },\n        {\n          name: 'AI_EXTERNAL_SERVICE',\n          enabled: FEATURE_FLAGS.isEnabled('AI_EXTERNAL_API'),\n          task: async () => {\n            const { externalAIService } = await import('@/features/ai/services/externalAIService');\n            await externalAIService.initialize();\n          }\n        },\n        {\n          name: 'AI_CBT_ENGINE',\n          enabled: FEATURE_FLAGS.isEnabled('AI_CBT_ENGINE'),\n          task: async () => {\n            const { cbtEngine } = await import('@/features/ai/engines/cbtEngine');\n            await cbtEngine.initialize();\n          }\n        },\n        {\n          name: 'AI_INSIGHTS_ENGINE_V2',\n          enabled: FEATURE_FLAGS.isEnabled('AI_INSIGHTS_ENGINE_V2'),\n          task: async () => {\n            // Insights Engine v2 now handled by UnifiedAIPipeline\n            console.log('✅ Insights Engine v2 handled by UnifiedAIPipeline');\n          }\n        },\n        {\n          name: 'AI_PATTERN_RECOGNITION_V2',\n          enabled: FEATURE_FLAGS.isEnabled('AI_PATTERN_RECOGNITION_V2'),\n          task: async () => {\n            // Pattern Recognition now handled by UnifiedAIPipeline\n            console.log('✅ Pattern Recognition handled by UnifiedAIPipeline');\n          }\n        },\n        {\n          name: 'AI_SMART_NOTIFICATIONS',\n          enabled: FEATURE_FLAGS.isEnabled('AI_SMART_NOTIFICATIONS'),\n          task: async () => {\n            // Smart Notifications now handled by UnifiedAIPipeline\n            console.log('✅ Smart Notifications handled by UnifiedAIPipeline');\n          }\n        },\n        {\n          name: 'AI_THERAPEUTIC_PROMPTS',\n          enabled: FEATURE_FLAGS.isEnabled('AI_THERAPEUTIC_PROMPTS'),\n          task: async () => {\n            const { therapeuticPromptEngine } = await import('@/features/ai/prompts/therapeuticPrompts');\n            await therapeuticPromptEngine.initialize();\n          }\n        },\n        {\n          name: 'AI_TREATMENT_PLANNING',\n          enabled: FEATURE_FLAGS.isEnabled('AI_TREATMENT_PLANNING'),\n          task: async () => {\n            if (treatmentPlanningEngine && typeof treatmentPlanningEngine.initialize === \"function\") {\n              await treatmentPlanningEngine.initialize();\n            } else {\n              throw new Error('Treatment Planning Engine not available');\n            }\n          }\n        },\n        {\n          name: 'AI_ART_THERAPY',\n          enabled: FEATURE_FLAGS.isEnabled('AI_ART_THERAPY'),\n          task: async () => {\n            const { artTherapyEngine } = await import('@/features/ai/artTherapy/artTherapyEngine');\n            if (artTherapyEngine && typeof artTherapyEngine.initialize === 'function') {\n              await artTherapyEngine.initialize();\n            }\n          }\n        },\n        {\n          name: 'AI_RISK_ASSESSMENT',\n          enabled: FEATURE_FLAGS.isEnabled('AI_RISK_ASSESSMENT'),\n          task: async () => {\n            if (riskAssessmentService && typeof riskAssessmentService.initialize === \"function\") {\n              await riskAssessmentService.initialize();\n            } else {\n              throw new Error('Risk Assessment service not available');\n            }\n          }\n        }\n      ];\n\n      // Execute initialization tasks in parallel with individual error handling\n      const features: string[] = [];\n      const results = await Promise.allSettled(\n        initializationTasks\n          .filter(task => task.enabled)\n          .map(async (task) => {\n            try {\n              await task.task();\n              features.push(task.name);\n              if (__DEV__) console.log(`✅ ${task.name} initialized successfully`);\n              return { name: task.name, success: true };\n            } catch (error) {\n              if (__DEV__) console.warn(`⚠️ ${task.name} initialization failed:`, error);\n              try {\n                await trackAIInteraction(\n                  AIEventType.SYSTEM_STATUS,\n                  {\n                    event: 'service_init_failed',\n                    service: task.name,\n                    error: error instanceof Error ? error.message : String(error)\n                  },\n                  user?.id\n                );\n              } catch {}\n              return { name: task.name, success: false, error };\n            }\n          })\n      );\n\n      // Add always-available features (adjust total count accordingly)\n      let additionalFeatures = 0;\n      if (FEATURE_FLAGS.isEnabled('AI_CHAT')) {\n        features.push('AI_CHAT');\n        additionalFeatures++;\n      }\n      // OnboardingFlow varsayılan olarak aktiftir (flag kaldırıldı)\n      features.push('AI_ONBOARDING');\n      additionalFeatures++;\n      if (__DEV__) console.log('🎯 OnboardingFlow enabled (default)');\n\n      setAvailableFeatures(features);\n\n      // Load user data in background after UI updates (with basic retry)\n      InteractionManager.runAfterInteractions(() => {\n        let attempts = 0;\n        const tryLoad = async () => {\n          try {\n            await loadUserAIData();\n          } catch (e) {\n            if (attempts < 2) {\n              attempts++;\n              setTimeout(tryLoad, 300 * attempts);\n            }\n          }\n        };\n        tryLoad();\n      });\n\n      console.log('🎯 Setting isInitialized=true, availableFeatures count:', features.length);\n      setIsInitialized(true);\n      const initTime = Date.now() - startTime;\n      if (__DEV__) console.log(`✅ AI services initialized successfully in ${initTime}ms`);\n\n      // Track successful initialization with performance metrics\n      const enabledTaskCount = initializationTasks.filter(t => t.enabled).length;\n      await trackAIInteraction(AIEventType.INSIGHTS_DELIVERED, {\n        userId: user.id,\n        context: 'ai_context_initialized',\n        availableFeatures: features,\n        initializationTime: initTime,\n        successfulServices: features.length,\n        totalAttempted: enabledTaskCount + additionalFeatures  // Fixed: Include additional features in count\n      });\n\n    } catch (error) {\n      const initTime = Date.now() - startTime;\n      if (__DEV__) console.error('❌ AI services initialization failed:', error);\n      setInitializationError(error instanceof Error ? error.message : 'Unknown error');\n      \n      // Track initialization failure\n      await trackAIInteraction(AIEventType.CHAT_ERROR, {\n        userId: user.id,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        context: 'ai_context_initialization_failed',\n        initializationTime: initTime\n      });\n    } finally {\n      console.log('🏁 Setting isInitializing=false (initialization complete)');\n      setIsInitializing(false);\n    }\n  }, [user?.id]);\n\n  /**\n   * 📊 Load User AI Data\n   */\n  const loadUserAIData = async (): Promise<void> => {\n    if (!user?.id) {\n      if (__DEV__) console.warn('⚠️ loadUserAIData: No user ID available');\n      return;\n    }\n\n    // Güvenli user ID kontrolü\n    const userId = user.id;\n    if (typeof userId !== 'string' || userId.trim() === '') {\n      if (__DEV__) console.error('❌ loadUserAIData: Invalid user ID:', userId);\n      return;\n    }\n\n    try {\n      // Supabase çağrılarını paralel çalıştır\n      const [profileRowRes, planRowRes] = await Promise.all([\n        supabaseService.supabaseClient\n          .from('ai_profiles')\n          .select('onboarding_completed, profile_data')\n          .eq('user_id', userId)\n          .maybeSingle(),\n        supabaseService.supabaseClient\n          .from('ai_treatment_plans')\n          .select('plan_data')\n          .eq('user_id', userId)\n          .maybeSingle()\n      ]);\n\n      // Onboarding completion\n      let completed = false;\n      const profileRow = profileRowRes?.data as any;\n      if (profileRow) {\n        completed = !!profileRow.onboarding_completed;\n        if (profileRow.profile_data) {\n          setUserProfile(profileRow.profile_data);\n          try {\n            const { useSecureStorage } = await import('@/hooks/useSecureStorage');\n            const { setItem } = useSecureStorage();\n            await setItem(`ai_user_profile_${userId}`, profileRow.profile_data, true);\n          } catch {\n            try { await AsyncStorage.setItem(`ai_user_profile_${userId}`, JSON.stringify(profileRow.profile_data)); } catch {}\n          }\n        }\n      }\n\n      // Profile fallbacks (ai_* → legacy)\n      if (!profileRow?.profile_data) {\n        let loadedProfile: any | null = null;\n\n        // 1) encrypted ai_* local\n        try {\n          const { useSecureStorage } = await import('@/hooks/useSecureStorage');\n          const { getItem } = useSecureStorage();\n          const encLocal = await getItem<any>(`ai_user_profile_${userId}`, true);\n          if (encLocal) loadedProfile = encLocal;\n        } catch {}\n        // 1b) plain ai_* local\n        if (!loadedProfile) {\n          try {\n            const aiLocal = await AsyncStorage.getItem(`ai_user_profile_${userId}`);\n            if (aiLocal) loadedProfile = JSON.parse(aiLocal);\n          } catch {}\n        }\n\n        // 2) legacy local\n        if (!loadedProfile) {\n          try {\n            const legacy = await AsyncStorage.getItem(`user_profile_${userId}`);\n            if (legacy) loadedProfile = JSON.parse(legacy);\n          } catch {}\n        }\n\n        if (loadedProfile) {\n          setUserProfile(loadedProfile);\n          // normalize to ai_* keys (encrypted first)\n          try {\n            const { useSecureStorage } = await import('@/hooks/useSecureStorage');\n            const { setItem } = useSecureStorage();\n            await setItem(`ai_user_profile_${userId}`, loadedProfile, true);\n          } catch {\n            try { await AsyncStorage.setItem(`ai_user_profile_${userId}`, JSON.stringify(loadedProfile)); } catch {}\n          }\n\n          // background upsert (best-effort)\n          try {\n            const { supabaseService: svc } = await import('@/services/supabase');\n            await svc.upsertAIProfile(userId, loadedProfile, completed);\n          } catch {}\n        }\n      }\n\n      // Onboarding flag - prioritize AsyncStorage (most up-to-date)\n      // Check AsyncStorage first since it gets updated immediately on completion\n      const aiCompleted = await AsyncStorage.getItem(`ai_onboarding_completed_${userId}`);\n      if (aiCompleted === 'true') {\n        completed = true;\n      } else {\n        const legacyCompleted = await AsyncStorage.getItem(`onboarding_completed_${userId}`);\n        if (legacyCompleted === 'true') {\n          completed = true;\n        }\n      }\n      setHasCompletedOnboarding(completed);\n      // Migrate legacy/local keys to unified ai_* keys (best-effort)\n      try {\n        if (completed) {\n          await AsyncStorage.setItem(`ai_onboarding_completed_${userId}`, 'true');\n          // Optionally keep legacy for a short period; do not delete here to avoid race\n        }\n      } catch {}\n\n      // Treatment plan\n      const planRow = planRowRes?.data as any;\n      if (planRow?.plan_data) {\n        setTreatmentPlan(planRow.plan_data);\n        try {\n          const { useSecureStorage } = await import('@/hooks/useSecureStorage');\n          const { setItem } = useSecureStorage();\n          await setItem(`ai_treatment_plan_${userId}`, planRow.plan_data, true);\n        } catch {\n          try { await AsyncStorage.setItem(`ai_treatment_plan_${userId}`, JSON.stringify(planRow.plan_data)); } catch {}\n        }\n      } else {\n        // ai_* local (encrypted first)\n        let localPlan: any | null = null;\n        try {\n          const { useSecureStorage } = await import('@/hooks/useSecureStorage');\n          const { getItem } = useSecureStorage();\n          const enc = await getItem<any>(`ai_treatment_plan_${userId}`, true);\n          if (enc) localPlan = enc;\n        } catch {}\n        if (!localPlan) {\n          try {\n            const aiPlan = await AsyncStorage.getItem(`ai_treatment_plan_${userId}`);\n            if (aiPlan) localPlan = JSON.parse(aiPlan);\n          } catch {}\n        }\n\n        // legacy local\n        if (!localPlan) {\n          try {\n            const legacyPlan = await AsyncStorage.getItem(`treatment_plan_${userId}`);\n            if (legacyPlan) localPlan = JSON.parse(legacyPlan);\n          } catch {}\n        }\n\n        if (localPlan) {\n          setTreatmentPlan(localPlan);\n          try {\n            const { useSecureStorage } = await import('@/hooks/useSecureStorage');\n            const { setItem } = useSecureStorage();\n            await setItem(`ai_treatment_plan_${userId}`, localPlan, true);\n          } catch {\n            try { await AsyncStorage.setItem(`ai_treatment_plan_${userId}`, JSON.stringify(localPlan)); } catch {}\n          }\n          // background upsert\n          try {\n            const { supabaseService: svc } = await import('@/services/supabase');\n            await svc.upsertAITreatmentPlan(userId, localPlan, 'active');\n          } catch {}\n        }\n      }\n\n      // Load latest risk assessment\n      const riskKey = `ai_risk_assessment_${userId}`;\n      const riskData = await AsyncStorage.getItem(riskKey);\n      if (riskData) {\n        setCurrentRiskAssessment(JSON.parse(riskData));\n      }\n\n      // Telemetry: cross-device sync verification\n      await trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n        event: 'ai_context_sync_check',\n        profilePresent: !!(profileRow?.profile_data || userProfile),\n        planPresent: !!(planRow?.plan_data || treatmentPlan),\n        completed,\n        source: 'supabase_pull',\n      }, userId);\n\n    } catch (error) {\n      if (__DEV__) console.error('❌ Error loading user AI data:', error);\n      // Telemetry: Hata raporla\n      await trackAIError({\n        code: 'storage_error' as any,\n        message: 'Error loading user AI data',\n        severity: 'medium' as any,\n      }, {\n        component: 'AIContext',\n        method: 'loadUserAIData'\n      });\n    }\n  };\n\n  /**\n   * 🧭 Start Onboarding\n   */\n  const startOnboarding = useCallback(async (): Promise<OnboardingSession | null> => {\n    if (!user?.id) {\n      return null;\n    }\n\n    try {\n      // OnboardingFlowV3 uses direct state management, create simple session object\n      const session: OnboardingSession = {\n        id: `onboarding_${user.id}_${Date.now()}`,\n        userId: user.id,\n        startTime: new Date(),\n        currentStep: OnboardingStep.WELCOME,\n        completedSteps: [],\n        ybocsData: [],\n        userProfile: {},\n        sessionState: OnboardingSessionState.ACTIVE,\n        culturalContext: {\n          language: 'tr',\n          country: 'TR',\n          culturalBackground: ['turkish'],\n          communicationStyle: {\n            formality: 'warm',\n            directness: 'gentle',\n            supportStyle: 'encouraging',\n            humorAcceptable: false,\n            preferredPronoun: ''\n          } as CommunicationStyle\n        } as CulturalContext,\n        progress: {\n          totalSteps: 13,\n          completedSteps: 0,\n          estimatedTimeRemaining: 20\n        }\n      };\n      \n      setOnboardingSession(session);\n      return session;\n    } catch (error) {\n      if (__DEV__) console.error('❌ Error starting onboarding:', error);\n      return null;\n    }\n  }, [user?.id]);\n\n  /**\n   * 👤 Update User Profile\n   */\n  const updateUserProfile = useCallback(async (profileUpdate: Partial<UserProfile>): Promise<void> => {\n    if (!user?.id || !userProfile) return;\n\n    const userId = user.id;\n    if (typeof userId !== 'string' || userId.trim() === '') {\n      if (__DEV__) console.error('❌ updateUserProfile: Invalid user ID:', userId);\n      return;\n    }\n\n    try {\n      const updatedProfile = { ...userProfile, ...profileUpdate };\n      setUserProfile(updatedProfile);\n      \n      // Persist to storage with safe key\n      const profileKey = `ai_user_profile_${userId}`;\n      // Safe write with small retry/backoff\n      {\n        let attempts = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          try {\n            await AsyncStorage.setItem(profileKey, JSON.stringify(updatedProfile));\n            break;\n          } catch (e) {\n            if (attempts >= 2) break;\n            attempts++;\n            await new Promise(r => setTimeout(r, 200 * attempts));\n          }\n        }\n      }\n\n      // Update via service if available\n      if (FEATURE_FLAGS.isEnabled('AI_USER_PROFILING')) {\n        await userProfilingService.updateProfile(userId, profileUpdate as any);\n      }\n    } catch (error) {\n      if (__DEV__) console.error('❌ Error updating user profile:', error);\n    }\n  }, [user?.id, userProfile]);\n\n  /**\n   * 💡 Generate Insights (Offline-Aware)\n   */\n  // Simple cooldown to avoid rapid re-execution/rate-limit: 60s\n  const lastInsightsRef = React.useRef<number>(0);\n  const insightsInFlightRef = React.useRef<boolean>(false);\n  const insightsQueueRef = React.useRef<Promise<any[]> | null>(null);\n\n  const generateInsights = useCallback(async (): Promise<any[]> => {\n    if (!user?.id || !FEATURE_FLAGS.isEnabled('AI_INSIGHTS')) {\n      return [];\n    }\n\n    // Cooldown: skip if last call within 60s\n    const now = Date.now();\n    if (now - (lastInsightsRef.current || 0) < 60_000) {\n      try {\n        const cached = await AsyncStorage.getItem(`ai_cached_insights_${safeStorageKey(user.id)}`);\n        if (cached) {\n          const parsed = JSON.parse(cached);\n          try { await trackAIInteraction(AIEventType.INSIGHTS_CACHE_HIT, { userId: user.id, source: 'cooldown_cache' }, user.id); } catch {}\n          return parsed.insights || [];\n        }\n      } catch {}\n      try { await trackAIInteraction(AIEventType.INSIGHTS_CACHE_MISS, { userId: user.id, reason: 'cooldown_cache_empty' }, user.id); } catch {}\n      return [];\n    }\n\n    // Offline fallback\n    if (!isOnline) {\n      if (__DEV__) console.warn('📱 Offline mode: Using cached insights');\n      \n      try {\n        const cachedInsights = await AsyncStorage.getItem(`ai_cached_insights_${safeStorageKey(user.id)}`);\n        if (cachedInsights) {\n          const parsed = JSON.parse(cachedInsights);\n          // Return cached insights if less than 24 hours old\n          if (Date.now() - parsed.timestamp < 24 * 60 * 60 * 1000) {\n            try { await trackAIInteraction(AIEventType.INSIGHTS_CACHE_HIT, { userId: user.id, source: 'offline_cache' }, user.id); } catch {}\n            return parsed.insights || [];\n          }\n        }\n      } catch (error) {\n        if (__DEV__) console.error('❌ Error loading cached insights:', error);\n      }\n      \n      // Return offline message as insight\n      return [{\n        id: 'offline_notice',\n        type: 'system',\n        content: 'İnternet bağlantısı olmadığı için önceki öngörüler gösteriliyor. Bağlantı kurulduğunda güncel öngörüler yüklenecek.',\n        timestamp: new Date(),\n        priority: 'low'\n      }];\n    }\n\n    if (insightsInFlightRef.current) {\n      if (insightsQueueRef.current) {\n        if (__DEV__) console.warn('⏳ Insights in progress – returning queued promise');\n        return insightsQueueRef.current;\n      }\n      if (__DEV__) console.warn('⏳ Insights in progress – waiting for completion');\n    }\n    try {\n      insightsInFlightRef.current = true;\n      const queued = (async () => {\n      // 24 saatlik zaman penceresi\n      const end = new Date();\n      const start = new Date(end.getTime() - 24 * 60 * 60 * 1000);\n      const startISO = start.toISOString();\n      const endISO = end.toISOString();\n\n      // DB'den davranışsal veriler (paralel)\n      let dbCompulsions: any[] = [];\n      // let dbErpSessions: any[] = []; // Removed ERP sessions\n      try {\n        const [compList] = await Promise.all([\n          (async () => await (await import('@/services/supabase')).supabaseService.getCompulsions(user.id, startISO, endISO))(),\n\n        ]);\n        dbCompulsions = compList || [];\n        // dbErpSessions = erpList || []; // Removed ERP sessions\n      } catch (e) {\n        if (__DEV__) console.warn('⚠️ DB behavioral fetch failed, will use local fallbacks');\n      }\n\n      // Local fallbacks\n      const today = new Date().toDateString();\n      const compulsionsKey = `compulsions_${safeStorageKey(user.id)}`;\n      const compulsionsRaw = await AsyncStorage.getItem(compulsionsKey);\n      const allCompulsions = compulsionsRaw ? JSON.parse(compulsionsRaw) : [];\n      const todayCompulsions = allCompulsions.filter((c: any) => new Date(c.timestamp).toDateString() === today);\n\n      // ERP sessions removed - no longer needed\n      // const erpKey = `erp_sessions_${safeStorageKey(user.id)}_${today}`;\n      // const erpRaw = await AsyncStorage.getItem(erpKey);\n      // const todayErpSessions = erpRaw ? JSON.parse(erpRaw) : [];\n\n      const compulsions = dbCompulsions.length ? dbCompulsions : todayCompulsions;\n      // ERP sessions removed - no longer using erpSessions\n\n      // 📊 FIXED: Fetch mood data for AI pipeline analysis\n      let moods: any[] = [];\n      try {\n        const moodTracker = (await import('@/services/moodTrackingService')).default;\n        const moodEntries = await moodTracker.getMoodEntries(user.id, 30); // Last 30 days\n        moods = moodEntries.map((entry: any) => ({\n          id: entry.id,\n          mood_score: entry.mood_score,\n          energy_level: entry.energy_level,\n          anxiety_level: entry.anxiety_level,\n          notes: entry.notes || '',\n          trigger: entry.trigger || '',\n          created_at: entry.timestamp || entry.created_at,\n          timestamp: entry.timestamp || new Date(entry.created_at || Date.now()).getTime()\n        }));\n        console.log(`📊 Loaded ${moods.length} mood entries for AI analysis`);\n      } catch (moodError) {\n        console.warn('⚠️ Failed to load mood data for AI analysis:', moodError);\n      }\n\n      const behavioralData = {\n        compulsions,\n        moods, // ✅ FIXED: Now populated with real mood data\n        exercises: [], // ERP sessions removed\n        achievements: [],\n        assessments: []\n      };\n\n      // Veri yeterlilik guard'ı\n      const hasProfile = !!userProfile;\n      const interactionsCount = (compulsions?.length || 0); // ERP sessions removed\n      if (!hasProfile || interactionsCount === 0) {\n        try {\n          await trackAIInteraction(AIEventType.INSIGHTS_MISSING_REQUIRED_FIELDS, {\n            userId: user.id,\n            hasProfile,\n            interactionsCount\n          }, user.id);\n        } catch {}\n        // Kullanıcıya sade uyarı içeriği döndür\n        return [{\n          id: 'data_insufficient_notice',\n          type: 'system',\n          content: 'Daha anlamlı içgörüler için bugün en az bir kayıt ekleyin (kompulsiyon veya mood).',\n          timestamp: new Date(),\n          priority: 'low'\n        }];\n      }\n\n      // Use UnifiedAIPipeline for insights generation\n      if (unifiedPipeline) {\n        const result = await unifiedPipeline.process({\n          userId: user.id,\n          content: behavioralData || {},\n          type: 'data',\n          context: {\n            source: 'today',\n            timestamp: Date.now(),\n            metadata: { userProfile }\n          }\n        });\n        \n        // Convert unified result to insights format\n        const insights = [];\n        if (result.insights) {\n          if (result.insights.therapeutic) {\n            insights.push(...result.insights.therapeutic);\n          }\n          if (result.insights.progress) {\n            insights.push(...result.insights.progress);\n          }\n        }\n        \n        // Cache successful insights\n        if (insights && insights.length > 0) {\n          try {\n            // Safe cache write with 2 retries + telemetry\n            let attempts = 0;\n            while (true) {\n              try {\n                if (attempts > 0) {\n                  try { await trackAIInteraction(AIEventType.STORAGE_RETRY_ATTEMPT, { key: `ai_cached_insights_${safeStorageKey(user.id)}`, attempts }, user.id); } catch {}\n                }\n                await AsyncStorage.setItem(`ai_cached_insights_${safeStorageKey(user.id)}`, JSON.stringify({ insights, timestamp: Date.now() }));\n                try { await trackAIInteraction(AIEventType.STORAGE_RETRY_SUCCESS, { key: `ai_cached_insights_${safeStorageKey(user.id)}`, attempts }, user.id); } catch {}\n                break;\n              } catch (e) {\n                if (attempts >= 2) {\n                  try { await trackAIInteraction(AIEventType.STORAGE_RETRY_FAILED, { key: `ai_cached_insights_${safeStorageKey(user.id)}`, attempts }, user.id); } catch {}\n                  break;\n                }\n                attempts++;\n                await new Promise(r => setTimeout(r, 150 * attempts));\n              }\n            }\n            // Persist to Supabase (non-blocking)\n            try {\n              const { default: supabaseService } = await import('@/services/supabase');\n              await supabaseService.supabaseClient\n                .from('ai_insights')\n                .insert({ user_id: user.id, insights });\n            } catch (persistErr) {\n              if (__DEV__) console.warn('Persist ai_insights failed:', persistErr);\n            }\n          } catch (cacheError) {\n            if (__DEV__) console.warn('⚠️ Failed to cache insights:', cacheError);\n          }\n        }\n        \n        lastInsightsRef.current = Date.now();\n        // Fallback to cached if none generated\n        if (!insights || insights.length === 0) {\n          try {\n            const cached = await AsyncStorage.getItem(`ai_cached_insights_${safeStorageKey(user.id)}`);\n            if (cached) {\n              const parsed = JSON.parse(cached);\n              try { await trackAIInteraction(AIEventType.INSIGHTS_CACHE_HIT, { userId: user.id, source: 'post_generation_cache' }, user.id); } catch {}\n              return parsed.insights || [];\n            }\n          } catch {}\n        }\n        return insights || [];\n      } else {\n        if (__DEV__) console.warn(\"⚠️ UnifiedAIPipeline not available\");\n        // Try to load from cache as fallback\n        try {\n          const cached = await AsyncStorage.getItem(`ai_cached_insights_${safeStorageKey(user.id)}`);\n          if (cached) {\n            const parsed = JSON.parse(cached);\n            return parsed.insights || [];\n          }\n        } catch {}\n        return [];\n      }\n      })();\n      insightsQueueRef.current = queued;\n      const awaited = await queued;\n      return awaited;\n    } catch (error) {\n      if (__DEV__) console.error('❌ Error generating insights:', error);\n      return [];\n    } finally {\n      insightsInFlightRef.current = false;\n      insightsQueueRef.current = null;\n    }\n  }, [user?.id, userProfile, treatmentPlan, isOnline]);\n\n  /**\n   * 🛡️ Assess Risk\n   */\n  // assessRisk removed\n\n  /**\n   * 🎯 Trigger Intervention\n   */\n  const triggerIntervention = useCallback(async (context: any): Promise<void> => {\n    if (!user?.id || !FEATURE_FLAGS.isEnabled('AI_ADAPTIVE_INTERVENTIONS')) {\n      return;\n    }\n\n    try {\n      await (adaptiveInterventions as any).triggerContextualIntervention({\n        userId: user.id,\n        userProfile: userProfile as any,\n        currentContext: {\n          analysisId: `ctx_${Date.now()}`,\n          riskAssessment: { overallRisk: (currentRiskAssessment?.immediateRisk as any) || 'low', riskFactors: [], protectiveFactors: [], interventionUrgency: 'low' },\n          userState: { stressLevel: 'medium', activityState: 'unknown', energyLevel: 50, socialEngagement: 50 },\n          environmentalFactors: [],\n          insights: { patterns: [] }\n        },\n        userConfig: (adaptiveInterventions as any).getDefaultConfig(),\n        recentInterventions: [],\n        recentUserActivity: { lastAppUsage: new Date(), sessionDuration: 0 },\n        deviceState: { batteryLevel: 1, isCharging: false, networkConnected: true, inFocus: true }\n      });\n    } catch (error) {\n      if (__DEV__) console.error('❌ Error triggering intervention:', error);\n    }\n  }, [user?.id, userProfile, currentRiskAssessment]);\n\n  // Wrap non-memo callbacks if any were missed\n  // (generateInsights and updateUserProfile are already memoized)\n\n  /**\n   * 🌐 Network Status Monitoring\n   */\n  useEffect(() => {\n    const unsubscribe = NetInfo.addEventListener(state => {\n      if (__DEV__) console.log('🌐 Network state changed:', {\n        isConnected: state.isConnected,\n        isInternetReachable: state.isInternetReachable,\n        type: state.type\n      });\n      \n      setIsConnected(state.isConnected ?? false);\n      setIsOnline(state.isInternetReachable ?? false);\n      setNetworkType(state.type || null);\n      \n      // Track network changes for telemetry\n      trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n        networkStatus: state.isConnected ? 'connected' : 'disconnected',\n        networkType: state.type,\n        isInternetReachable: state.isInternetReachable,\n        userId: user?.id\n      });\n    });\n\n    // Get initial network state\n    NetInfo.fetch().then(state => {\n      setIsConnected(state.isConnected ?? false);\n      setIsOnline(state.isInternetReachable ?? false);\n      setNetworkType(state.type || null);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user?.id]);\n\n  // Bellek eşiği kontrolü (UI tarafı): 150MB üzeri → Safe Mode\n  useEffect(() => {\n    const perf: any = (globalThis as any).performance;\n    if (!perf || !perf.memory) return;\n    const threshold = 150 * 1024 * 1024;\n    const timer = setInterval(() => {\n      try {\n        const used = perf.memory?.usedJSHeapSize as number | undefined;\n        if (typeof used === 'number' && used > threshold) {\n          if (!safeMode) {\n            setSafeMode(true);\n            setSafeModeReason('memory');\n            try {\n              trackAIInteraction(AIEventType.SYSTEM_STATUS, {\n                event: 'memory_threshold_safe_mode',\n                usedHeap: used\n              });\n            } catch {}\n          }\n        }\n      } catch {}\n    }, 60_000);\n    return () => clearInterval(timer);\n  }, [safeMode]);\n\n  /**\n   * 🔄 Auto-initialize when user changes\n   */\n  useEffect(() => {\n    console.log('🤖 Main initialization effect:', { \n      userId: !!user?.id, \n      isInitialized, \n      isInitializing,\n      willCall: !!(user?.id && !isInitialized && !isInitializing)\n    });\n    if (user?.id && !isInitialized && !isInitializing) {\n      console.log('🤖 Calling initializeAIServices from main effect...');\n      initializeAIServices();\n    }\n  }, [user?.id, isInitialized, isInitializing, initializeAIServices]);\n\n  /**\n   * 🔄 Reset AI state when user signs out\n   */\n  useEffect(() => {\n    if (!user) {\n      // User signed out - reset all AI state\n      if (__DEV__) console.log('🔄 User signed out - resetting AI state');\n      setIsInitialized(false);\n      setUserProfile(null);\n      setTreatmentPlan(null);\n      setCurrentRiskAssessment(null);\n      setOnboardingSession(null);\n      setHasCompletedOnboarding(false);\n      setAvailableFeatures([]);\n    }\n  }, [user]);\n\n  /**\n   * 🧹 Cleanup on unmount\n   */\n  useEffect(() => {\n    return () => {\n      // Cleanup AI services if needed\n      setIsInitialized(false);\n      setUserProfile(null);\n      setTreatmentPlan(null);\n      setCurrentRiskAssessment(null);\n      setOnboardingSession(null);\n    };\n  }, []);\n\n  // Optimize context value with useMemo to prevent unnecessary re-renders\n  const contextValue: AIContextType = useMemo(() => ({\n    // Service Status\n    isInitialized,\n    isInitializing,\n    initializationError,\n    safeMode,\n    safeModeReason,\n    \n    // Network Status\n    isOnline,\n    isConnected,\n    networkType,\n    // safeMode dışa vurulmuyor; ileride UI için eklenebilir\n    \n    // User AI Data\n    userProfile,\n    treatmentPlan,\n    currentRiskAssessment,\n    onboardingSession,\n    \n    // AI Capabilities\n    hasCompletedOnboarding,\n    availableFeatures,\n    \n    // Actions\n    initializeAIServices,\n    startOnboarding,\n    updateUserProfile,\n    generateInsights,\n    triggerIntervention\n  }), [\n    isInitialized,\n    isInitializing,\n    initializationError,\n    safeMode,\n    safeModeReason,\n    isOnline,\n    isConnected,\n    networkType,\n    safeMode,\n    userProfile,\n    treatmentPlan,\n    currentRiskAssessment,\n    onboardingSession,\n    hasCompletedOnboarding,\n    availableFeatures,\n    initializeAIServices,\n    startOnboarding,\n    updateUserProfile,\n    generateInsights,\n    triggerIntervention\n  ]);\n\n  return (\n    <AIContext.Provider value={contextValue}>\n      {children}\n    </AIContext.Provider>\n  );\n}\n\n/**\n * 🪝 useAI Hook\n */\nexport function useAI(): AIContextType {\n  const context = useContext(AIContext);\n  if (context === undefined) {\n    throw new Error('useAI must be used within an AIProvider');\n  }\n  return context;\n}\n\n/**\n * 🎯 Selective AI Hooks for Performance\n */\n\n// For components that only need service status\nexport function useAIStatus() {\n  const { isInitialized, isInitializing, initializationError, availableFeatures } = useAI();\n  return { isInitialized, isInitializing, initializationError, availableFeatures };\n}\n\n// For components that only need user data\nexport function useAIUserData() {\n  const { userProfile, treatmentPlan, hasCompletedOnboarding } = useAI();\n  return { userProfile, treatmentPlan, hasCompletedOnboarding };\n}\n\n// For components that only need actions\nexport function useAIActions() {\n  const { \n    initializeAIServices, \n    startOnboarding, \n    updateUserProfile, \n    generateInsights, \n    triggerIntervention \n  } = useAI();\n  return { \n    initializeAIServices, \n    startOnboarding, \n    updateUserProfile, \n    generateInsights, \n    triggerIntervention \n  };\n}"],"mappings":"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","ignoreList":[]}