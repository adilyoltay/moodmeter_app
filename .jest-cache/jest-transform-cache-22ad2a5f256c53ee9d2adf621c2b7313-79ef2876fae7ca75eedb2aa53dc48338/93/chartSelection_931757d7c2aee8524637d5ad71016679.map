{"version":3,"names":["_lastKey","_lastResult","formatXLabel","item","timeRange","locale","key","date","label","result","k","hh","includes","split","h","parseInt","String","padStart","d","Date","daysShort","getDay","match","getDate","toString","Intl","DateTimeFormat","month","format","getXLabelVisibility","index","total","contentWidth","dw","Math","max","step","minLabelPx","ceil","emitSelectionHelper","args","_data$aggregated","data","chartWidth","dayWindowStart","dayWindowSize","AXIS_WIDTH","onSelectionChange","items","hourlyAverages","slice","map","dateKey","aggregated","n","length","totalCount","hasData","_rawHourlyDataPoints","hourItem","rp","rawHourlyDataPoints","entries","b","Number","count","found","left","right","check","_rawHourlyDataPoints2","it","Object","assign","x","labelText","dateSel","_String$split","_String$split2","_slicedToArray2","default","dstr","mon","day","year","getFullYear","monthsLongShort","getMonth","bucketCount"],"sources":["chartSelection.ts"],"sourcesContent":["import type { TimeRange, DailyAverage, AggregatedData, MoodJourneyExtended } from '@/types/mood';\n\nexport type SelectionPayload = {\n  date: string;\n  index: number;\n  totalCount: number;\n  label: string;\n  x: number;\n  chartWidth: number;\n  bucketCount: number;\n} | null;\n\n// Simple one-item memoization for formatXLabel\nlet _lastKey: string | null = null;\nlet _lastResult: string | null = null;\n\nexport function formatXLabel(item: DailyAverage | AggregatedData, timeRange: TimeRange, locale: string): string {\n  const key = `${timeRange}|${(item as any).date}|${(item as any).label || ''}|${locale}`;\n  if (_lastKey === key && _lastResult) return _lastResult;\n\n  let result = '';\n  if (timeRange === 'day') {\n    const k = ((item as any).date || '') as string; // YYYY-MM-DD#HH\n    const hh = k.includes('#') ? k.split('#')[1] : '00';\n    const h = parseInt(hh, 10) || 0;\n    result = String(h).padStart(2, '0');\n  } else if (timeRange === 'week') {\n    // Parse YYYY-MM-DD explicitly as local midnight\n    const d = new Date(`${(item as DailyAverage).date}T00:00:00`);\n    const daysShort = ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct'];\n    result = daysShort[d.getDay()];\n  } else if (timeRange === 'month') {\n    const label = (item as AggregatedData).label || '';\n    const match = label.match(/^(\\d+)/);\n    if (match) result = match[1];\n    else {\n      const d = new Date((item as AggregatedData).date);\n      result = d.getDate().toString();\n    }\n  } else {\n    const d = new Date((item as AggregatedData).date);\n    result = new Intl.DateTimeFormat(locale, { month: 'short' }).format(d);\n  }\n  _lastKey = key;\n  _lastResult = result;\n  return result;\n}\n\nexport function getXLabelVisibility(index: number, total: number, timeRange: TimeRange, contentWidth: number): boolean {\n  if (timeRange === 'day') {\n    const dw = contentWidth / Math.max(1, total);\n    let step = 1;\n    if (dw < 12) step = 4; // 0,4,8,12,16,20\n    else if (dw < 18) step = 3; // 0,3,6,9,12,15,18,21\n    else if (dw < 28) step = 2; // 0,2,4...\n    else step = 1; // her saat\n    return index % step === 0;\n  }\n  const minLabelPx = (timeRange === 'week') ? 18 : (timeRange === 'month') ? 22 : (timeRange === '6months') ? 28 : 36; // year\n  const step = Math.max(1, Math.ceil((total * minLabelPx) / Math.max(1, contentWidth)));\n  if (index === 0 || index === total - 1) return true;\n  return index % step === 0;\n}\n\nexport function emitSelectionHelper(args: {\n  data: MoodJourneyExtended;\n  timeRange: TimeRange;\n  contentWidth: number;\n  chartWidth: number;\n  dayWindowStart: number;\n  dayWindowSize: number;\n  index: number | null;\n  locale: string;\n  AXIS_WIDTH: number;\n  onSelectionChange?: (payload: SelectionPayload) => void;\n}): void {\n  const { data, timeRange, contentWidth, chartWidth, dayWindowStart, dayWindowSize, index, locale, AXIS_WIDTH, onSelectionChange } = args;\n  const items = (timeRange === 'day')\n    ? (((data.hourlyAverages || [])\n        .slice(dayWindowStart, dayWindowStart + dayWindowSize)\n        .map((h: any) => ({ date: h.dateKey })) ) as any[])\n    : (data.aggregated?.data || []);\n  const n = items.length;\n  if (index === null || index < 0 || index > n - 1) {\n    onSelectionChange?.(null);\n    return;\n  }\n\n  let totalCount = 0;\n  let hasData = false;\n  if (timeRange === 'day') {\n    const hourItem = items[index] as any; // { date: YYYY-MM-DD#HH }\n    const rp = (data as any).rawHourlyDataPoints?.[hourItem.date]?.entries || [];\n    totalCount = rp.length;\n    hasData = totalCount > 0;\n  } else {\n    const b = items[index] as AggregatedData;\n    totalCount = Number(b.count || 0);\n    hasData = totalCount > 0;\n  }\n\n  if (!hasData || totalCount === 0) {\n    let found = -1;\n    for (let step = 1; step < n; step++) {\n      const left = index - step;\n      const right = index + step;\n      const check = (k: number) => {\n        if (k < 0 || k >= n) return false;\n        if (timeRange === 'day') {\n          const it: any = items[k];\n          const rp = (data as any).rawHourlyDataPoints?.[it.date]?.entries || [];\n          return rp.length > 0;\n        } else {\n          return Number((items[k] as any).count || 0) > 0;\n        }\n      };\n      if (check(left)) { found = left; break; }\n      if (check(right)) { found = right; break; }\n    }\n    if (found === -1) { onSelectionChange?.(null); return; }\n    // Rekürsif çağrı yerine doğrudan payload üretelim\n    return emitSelectionHelper({ ...args, index: found });\n  }\n\n  const dw = contentWidth / Math.max(1, n);\n  const x = AXIS_WIDTH + (index * dw) + (dw / 2);\n  let labelText = '';\n  let dateSel = '';\n\n  if (timeRange === 'day') {\n    const it = items[index] as any; // { date: YYYY-MM-DD#HH }\n    const [dstr, hh] = String(it.date).split('#');\n    const d = new Date(`${dstr}T00:00:00.000Z`);\n    const h = parseInt(hh || '0', 10);\n    const mon = new Intl.DateTimeFormat(locale, { month: 'short' }).format(d);\n    const day = d.getDate();\n    const year = d.getFullYear();\n    labelText = `${day} ${mon} ${year} • ${String(h).padStart(2, '0')}:00`;\n    dateSel = it.date;\n  } else {\n    const b = items[index] as AggregatedData;\n    if (timeRange === 'week') {\n      const d = new Date(`${b.date}T00:00:00.000Z`);\n      const monthsLongShort = ['Oca','Şub','Mar','Nis','May','Haz','Tem','Ağu','Eyl','Eki','Kas','Ara'];\n      labelText = `${d.getDate()} ${monthsLongShort[d.getMonth()]} ${d.getFullYear()}`;\n    } else {\n      labelText = (b as any).label || '';\n    }\n    dateSel = b.date;\n  }\n\n  onSelectionChange?.({ date: dateSel, index, totalCount, label: labelText, x, chartWidth, bucketCount: n });\n}\n\n"],"mappings":"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","ignoreList":[]}