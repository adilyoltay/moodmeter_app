463de885b5d595d2459cc94d5a10712d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextInputEventBuilder = void 0;
var _base = require("./base");
var TextInputEventBuilder = exports.TextInputEventBuilder = {
  change: function change(text) {
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        text: text,
        target: 0,
        eventCount: 0
      }
    });
  },
  keyPress: function keyPress(key) {
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        key: key
      }
    });
  },
  submitEditing: function submitEditing(text) {
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        text: text,
        target: 0
      }
    });
  },
  endEditing: function endEditing(text) {
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        text: text,
        target: 0
      }
    });
  },
  selectionChange: function selectionChange(_ref) {
    var start = _ref.start,
      end = _ref.end;
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        selection: {
          start: start,
          end: end
        }
      }
    });
  },
  contentSizeChange: function contentSizeChange(_ref2) {
    var width = _ref2.width,
      height = _ref2.height;
    return Object.assign({}, (0, _base.baseSyntheticEvent)(), {
      nativeEvent: {
        contentSize: {
          width: width,
          height: height
        },
        target: 0
      }
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfYmFzZSIsInJlcXVpcmUiLCJUZXh0SW5wdXRFdmVudEJ1aWxkZXIiLCJleHBvcnRzIiwiY2hhbmdlIiwidGV4dCIsIk9iamVjdCIsImFzc2lnbiIsImJhc2VTeW50aGV0aWNFdmVudCIsIm5hdGl2ZUV2ZW50IiwidGFyZ2V0IiwiZXZlbnRDb3VudCIsImtleVByZXNzIiwia2V5Iiwic3VibWl0RWRpdGluZyIsImVuZEVkaXRpbmciLCJzZWxlY3Rpb25DaGFuZ2UiLCJfcmVmIiwic3RhcnQiLCJlbmQiLCJzZWxlY3Rpb24iLCJjb250ZW50U2l6ZUNoYW5nZSIsIl9yZWYyIiwid2lkdGgiLCJoZWlnaHQiLCJjb250ZW50U2l6ZSJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91c2VyLWV2ZW50L2V2ZW50LWJ1aWxkZXIvdGV4dC1pbnB1dC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFNpemUgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgdHlwZSB7IFRleHRSYW5nZSB9IGZyb20gJy4uL3V0aWxzL3RleHQtcmFuZ2UnO1xuaW1wb3J0IHsgYmFzZVN5bnRoZXRpY0V2ZW50IH0gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IFRleHRJbnB1dEV2ZW50QnVpbGRlciA9IHtcbiAgLyoqXG4gICAqIEV4cGVyaW1lbnRhbCB2YWx1ZXM6XG4gICAqIC0gaU9TOiBge1wiZXZlbnRDb3VudFwiOiA0LCBcInRhcmdldFwiOiA3NSwgXCJ0ZXh0XCI6IFwiVGVzdFwifWBcbiAgICogLSBBbmRyb2lkOiBge1wiZXZlbnRDb3VudFwiOiA2LCBcInRhcmdldFwiOiA1MywgXCJ0ZXh0XCI6IFwiVGVzXCJ9YFxuICAgKi9cbiAgY2hhbmdlOiAodGV4dDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmJhc2VTeW50aGV0aWNFdmVudCgpLFxuICAgICAgbmF0aXZlRXZlbnQ6IHsgdGV4dCwgdGFyZ2V0OiAwLCBldmVudENvdW50OiAwIH0sXG4gICAgfTtcbiAgfSxcblxuICAvKipcbiAgICogRXhwZXJpbWVudGFsIHZhbHVlczpcbiAgICogLSBpT1M6IGB7XCJldmVudENvdW50XCI6IDMsIFwia2V5XCI6IFwiYVwiLCBcInRhcmdldFwiOiA3NX1gXG4gICAqIC0gQW5kcm9pZDogYHtcImtleVwiOiBcImFcIn1gXG4gICAqL1xuICBrZXlQcmVzczogKGtleTogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmJhc2VTeW50aGV0aWNFdmVudCgpLFxuICAgICAgbmF0aXZlRXZlbnQ6IHsga2V5IH0sXG4gICAgfTtcbiAgfSxcblxuICAvKipcbiAgICogRXhwZXJpbWVudGFsIHZhbHVlczpcbiAgICogLSBpT1M6IGB7XCJldmVudENvdW50XCI6IDQsIFwidGFyZ2V0XCI6IDc1LCBcInRleHRcIjogXCJUZXN0XCJ9YFxuICAgKiAtIEFuZHJvaWQ6IGB7XCJ0YXJnZXRcIjogNTMsIFwidGV4dFwiOiBcIlRlc3RcIn1gXG4gICAqL1xuICBzdWJtaXRFZGl0aW5nOiAodGV4dDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmJhc2VTeW50aGV0aWNFdmVudCgpLFxuICAgICAgbmF0aXZlRXZlbnQ6IHsgdGV4dCwgdGFyZ2V0OiAwIH0sXG4gICAgfTtcbiAgfSxcblxuICAvKipcbiAgICogRXhwZXJpbWVudGFsIHZhbHVlczpcbiAgICogLSBpT1M6IGB7XCJldmVudENvdW50XCI6IDQsIFwidGFyZ2V0XCI6IDc1LCBcInRleHRcIjogXCJUZXN0XCJ9YFxuICAgKiAtIEFuZHJvaWQ6IGB7XCJ0YXJnZXRcIjogNTMsIFwidGV4dFwiOiBcIlRlc3RcIn1gXG4gICAqL1xuICBlbmRFZGl0aW5nOiAodGV4dDogc3RyaW5nKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmJhc2VTeW50aGV0aWNFdmVudCgpLFxuICAgICAgbmF0aXZlRXZlbnQ6IHsgdGV4dCwgdGFyZ2V0OiAwIH0sXG4gICAgfTtcbiAgfSxcblxuICAvKipcbiAgICogRXhwZXJpbWVudGFsIHZhbHVlczpcbiAgICogLSBpT1M6IGB7XCJzZWxlY3Rpb25cIjoge1wiZW5kXCI6IDQsIFwic3RhcnRcIjogNH0sIFwidGFyZ2V0XCI6IDc1fWBcbiAgICogLSBBbmRyb2lkOiBge1wic2VsZWN0aW9uXCI6IHtcImVuZFwiOiA0LCBcInN0YXJ0XCI6IDR9fWBcbiAgICovXG4gIHNlbGVjdGlvbkNoYW5nZTogKHsgc3RhcnQsIGVuZCB9OiBUZXh0UmFuZ2UpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uYmFzZVN5bnRoZXRpY0V2ZW50KCksXG4gICAgICBuYXRpdmVFdmVudDogeyBzZWxlY3Rpb246IHsgc3RhcnQsIGVuZCB9IH0sXG4gICAgfTtcbiAgfSxcblxuICAvKipcbiAgICogRXhwZXJpbWVudGFsIHZhbHVlczpcbiAgICogLSBpT1M6IGB7XCJjb250ZW50U2l6ZVwiOiB7XCJoZWlnaHRcIjogMjEuNjY2NjY2NjY2NjY2NjY4LCBcIndpZHRoXCI6IDExLjY2NjY2NjY2NjY2NjY2Nn0sIFwidGFyZ2V0XCI6IDc1fWBcbiAgICogLSBBbmRyb2lkOiBge1wiY29udGVudFNpemVcIjoge1wiaGVpZ2h0XCI6IDYxLjQ1NDU0NDA2NzM4MjgxLCBcIndpZHRoXCI6IDM1Mi43MjcyNjQ0MDQyOTY5fSwgXCJ0YXJnZXRcIjogNTN9YFxuICAgKi9cbiAgY29udGVudFNpemVDaGFuZ2U6ICh7IHdpZHRoLCBoZWlnaHQgfTogU2l6ZSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5iYXNlU3ludGhldGljRXZlbnQoKSxcbiAgICAgIG5hdGl2ZUV2ZW50OiB7IGNvbnRlbnRTaXplOiB7IHdpZHRoLCBoZWlnaHQgfSwgdGFyZ2V0OiAwIH0sXG4gICAgfTtcbiAgfSxcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLEtBQUEsR0FBQUMsT0FBQTtBQUVPLElBQU1DLHFCQUFxQixHQUFBQyxPQUFBLENBQUFELHFCQUFBLEdBQUc7RUFNbkNFLE1BQU0sRUFBRyxTQUFUQSxNQUFNQSxDQUFHQyxJQUFZLEVBQUs7SUFDeEIsT0FBQUMsTUFBQSxDQUFBQyxNQUFBLEtBQ0ssSUFBQVAsS0FBQSxDQUFBUSxrQkFBa0IsRUFBQyxDQUFDO01BQ3ZCQyxXQUFXLEVBQUU7UUFBRUosSUFBSSxFQUFKQSxJQUFJO1FBQUVLLE1BQU0sRUFBRSxDQUFDO1FBQUVDLFVBQVUsRUFBRTtNQUFFO0lBQUE7RUFFbEQsQ0FBQztFQU9EQyxRQUFRLEVBQUcsU0FBWEEsUUFBUUEsQ0FBR0MsR0FBVyxFQUFLO0lBQ3pCLE9BQUFQLE1BQUEsQ0FBQUMsTUFBQSxLQUNLLElBQUFQLEtBQUEsQ0FBQVEsa0JBQWtCLEVBQUMsQ0FBQztNQUN2QkMsV0FBVyxFQUFFO1FBQUVJLEdBQUEsRUFBQUE7TUFBSTtJQUFBO0VBRXZCLENBQUM7RUFPREMsYUFBYSxFQUFHLFNBQWhCQSxhQUFhQSxDQUFHVCxJQUFZLEVBQUs7SUFDL0IsT0FBQUMsTUFBQSxDQUFBQyxNQUFBLEtBQ0ssSUFBQVAsS0FBQSxDQUFBUSxrQkFBa0IsRUFBQyxDQUFDO01BQ3ZCQyxXQUFXLEVBQUU7UUFBRUosSUFBSSxFQUFKQSxJQUFJO1FBQUVLLE1BQU0sRUFBRTtNQUFFO0lBQUE7RUFFbkMsQ0FBQztFQU9ESyxVQUFVLEVBQUcsU0FBYkEsVUFBVUEsQ0FBR1YsSUFBWSxFQUFLO0lBQzVCLE9BQUFDLE1BQUEsQ0FBQUMsTUFBQSxLQUNLLElBQUFQLEtBQUEsQ0FBQVEsa0JBQWtCLEVBQUMsQ0FBQztNQUN2QkMsV0FBVyxFQUFFO1FBQUVKLElBQUksRUFBSkEsSUFBSTtRQUFFSyxNQUFNLEVBQUU7TUFBRTtJQUFBO0VBRW5DLENBQUM7RUFPRE0sZUFBZSxFQUFFLFNBQWpCQSxlQUFlQSxDQUFBQyxJQUFBLEVBQWlDO0lBQUEsSUFBNUJDLEtBQUssR0FBQUQsSUFBQSxDQUFMQyxLQUFLO01BQUVDLEdBQUEsR0FBQUYsSUFBQSxDQUFBRSxHQUFBO0lBQ3pCLE9BQUFiLE1BQUEsQ0FBQUMsTUFBQSxLQUNLLElBQUFQLEtBQUEsQ0FBQVEsa0JBQWtCLEVBQUMsQ0FBQztNQUN2QkMsV0FBVyxFQUFFO1FBQUVXLFNBQVMsRUFBRTtVQUFFRixLQUFLLEVBQUxBLEtBQUs7VUFBRUMsR0FBQSxFQUFBQTtRQUFJO01BQUU7SUFBQTtFQUU3QyxDQUFDO0VBT0RFLGlCQUFpQixFQUFFLFNBQW5CQSxpQkFBaUJBLENBQUFDLEtBQUEsRUFBK0I7SUFBQSxJQUExQkMsS0FBSyxHQUFBRCxLQUFBLENBQUxDLEtBQUs7TUFBRUMsTUFBQSxHQUFBRixLQUFBLENBQUFFLE1BQUE7SUFDM0IsT0FBQWxCLE1BQUEsQ0FBQUMsTUFBQSxLQUNLLElBQUFQLEtBQUEsQ0FBQVEsa0JBQWtCLEVBQUMsQ0FBQztNQUN2QkMsV0FBVyxFQUFFO1FBQUVnQixXQUFXLEVBQUU7VUFBRUYsS0FBSyxFQUFMQSxLQUFLO1VBQUVDLE1BQUEsRUFBQUE7UUFBTyxDQUFDO1FBQUVkLE1BQU0sRUFBRTtNQUFFO0lBQUE7RUFFN0Q7QUFDRixDQUFDIiwiaWdub3JlTGlzdCI6W119