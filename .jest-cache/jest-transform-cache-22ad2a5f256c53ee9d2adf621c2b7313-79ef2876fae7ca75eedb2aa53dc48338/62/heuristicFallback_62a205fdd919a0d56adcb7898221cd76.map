{"version":3,"names":["TEMPLATES","tr","anxiety","sleep","generic","en","detectScenario","messages","arguments","length","undefined","lastUser","filter","m","role","slice","raw","content","toLowerCase","test","detectLanguage","context","_therapeuticProfile","pref","therapeuticProfile","preferredLanguage","getHeuristicText","lang","scenario"],"sources":["heuristicFallback.ts"],"sourcesContent":["import type { AIMessage, ConversationContext } from '@/features/ai/types';\n\ntype Lang = 'tr' | 'en';\ntype Scenario = 'anxiety' | 'sleep' | 'generic';\n\nconst TEMPLATES: Record<Lang, Record<Scenario, string>> = {\n  tr: {\n    anxiety: 'Şu an zor bir an olabilir. Beraber kısa bir nefes çalışması yapalım: 4 saniye al, 4 saniye tut, 6 saniye ver. Hazır olduğunda düşünceni günlüğe not edebilirsin.',\n    sleep: 'Dinlenmekte zorlanıyorsan, ekran parlaklığını azalt ve 4-7-8 nefes tekniğini dene. Kısa bir gevşeme ile uykuya hazırlanabiliriz.',\n    // ✅ REMOVED: erp scenario - ERP module deleted\n    generic: 'Şu an dış servisler yanıt veremiyor ama beraberiz. Kısa bir nefes egzersizi deneyelim: 4-4-6. İstersen günlüğe kısa bir not ekleyebilirsin.'\n  },\n  en: {\n    anxiety: \"This might be a hard moment. Let's try a short breathing: inhale 4s, hold 4s, exhale 6s. When ready, jot a quick note in your journal.\",\n    sleep: 'If sleep is difficult, dim your screen and try 4-7-8 breathing. A short relaxation can help prepare for rest.',\n    // ✅ REMOVED: erp scenario - ERP module deleted\n    generic: \"External AI is unavailable for now, but I'm here. Try 4-4-6 breathing. You can also add a short journal note.\"\n  }\n};\n\nexport function detectScenario(messages: AIMessage[] = []): Scenario {\n  const lastUser = (messages || []).filter(m => m.role === 'user').slice(-1)[0];\n  const raw = (lastUser?.content || '').toLowerCase();\n  if (/panik|kayg|endişe|anx/i.test(raw)) return 'anxiety';\n  if (/uyku|gece|sleep/i.test(raw)) return 'sleep';\n  // ✅ REMOVED: ERP pattern detection - ERP module deleted\n  return 'generic';\n}\n\nexport function detectLanguage(context?: ConversationContext): Lang {\n  const pref = (context as any)?.therapeuticProfile?.preferredLanguage?.toLowerCase?.();\n  return pref === 'en' ? 'en' : 'tr';\n}\n\nexport function getHeuristicText(messages: AIMessage[] = [], context?: ConversationContext): string {\n  const lang = detectLanguage(context);\n  const scenario = detectScenario(messages);\n  return TEMPLATES[lang][scenario];\n}\n\n\n"],"mappings":";;;;;;AAKA,IAAMA,SAAiD,GAAG;EACxDC,EAAE,EAAE;IACFC,OAAO,EAAE,kKAAkK;IAC3KC,KAAK,EAAE,kIAAkI;IAEzIC,OAAO,EAAE;EACX,CAAC;EACDC,EAAE,EAAE;IACFH,OAAO,EAAE,wIAAwI;IACjJC,KAAK,EAAE,+GAA+G;IAEtHC,OAAO,EAAE;EACX;AACF,CAAC;AAEM,SAASE,cAAcA,CAAA,EAAuC;EAAA,IAAtCC,QAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACvD,IAAMG,QAAQ,GAAG,CAACJ,QAAQ,IAAI,EAAE,EAAEK,MAAM,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,IAAI,KAAK,MAAM;EAAA,EAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7E,IAAMC,GAAG,GAAG,CAAC,CAAAL,QAAQ,oBAARA,QAAQ,CAAEM,OAAO,KAAI,EAAE,EAAEC,WAAW,CAAC,CAAC;EACnD,IAAI,wBAAwB,CAACC,IAAI,CAACH,GAAG,CAAC,EAAE,OAAO,SAAS;EACxD,IAAI,kBAAkB,CAACG,IAAI,CAACH,GAAG,CAAC,EAAE,OAAO,OAAO;EAEhD,OAAO,SAAS;AAClB;AAEO,SAASI,cAAcA,CAACC,OAA6B,EAAQ;EAAA,IAAAC,mBAAA;EAClE,IAAMC,IAAI,GAAIF,OAAO,aAAAC,mBAAA,GAAPD,OAAO,CAAUG,kBAAkB,cAAAF,mBAAA,GAApCA,mBAAA,CAAsCG,iBAAiB,aAAvDH,mBAAA,CAAyDJ,WAAW,oBAApEI,mBAAA,CAAyDJ,WAAW,CAAG,CAAC;EACrF,OAAOK,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;AACpC;AAEO,SAASG,gBAAgBA,CAAA,EAAoE;EAAA,IAAnEnB,QAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEa,OAA6B,GAAAb,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxF,IAAMiB,IAAI,GAAGP,cAAc,CAACC,OAAO,CAAC;EACpC,IAAMO,QAAQ,GAAGtB,cAAc,CAACC,QAAQ,CAAC;EACzC,OAAOP,SAAS,CAAC2B,IAAI,CAAC,CAACC,QAAQ,CAAC;AAClC","ignoreList":[]}