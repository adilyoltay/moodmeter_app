b92777c1ae21d267e767fda43a8c3dc6
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LogBoxNotificationDismissButton;
var _View = _interopRequireDefault(require("../../Components/View/View"));
var _Image = _interopRequireDefault(require("../../Image/Image"));
var _StyleSheet = _interopRequireDefault(require("../../StyleSheet/StyleSheet"));
var _LogBoxButton = _interopRequireDefault(require("./LogBoxButton"));
var LogBoxStyle = _interopRequireWildcard(require("./LogBoxStyle"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function LogBoxNotificationDismissButton(props) {
  return (0, _jsxRuntime.jsx)(_View.default, {
    style: styles.container,
    children: (0, _jsxRuntime.jsx)(_LogBoxButton.default, {
      id: props.id,
      backgroundColor: {
        default: LogBoxStyle.getTextColor(0.3),
        pressed: LogBoxStyle.getTextColor(0.5)
      },
      hitSlop: {
        top: 12,
        right: 10,
        bottom: 12,
        left: 10
      },
      onPress: props.onPress,
      style: styles.press,
      children: (0, _jsxRuntime.jsx)(_Image.default, {
        source: require("./LogBoxImages/close.png"),
        style: styles.image
      })
    })
  });
}
var styles = _StyleSheet.default.create({
  container: {
    alignSelf: 'center',
    flexDirection: 'row',
    flexGrow: 0,
    flexShrink: 0,
    flexBasis: 'auto',
    marginLeft: 5
  },
  press: {
    height: 20,
    width: 20,
    borderRadius: 25,
    alignSelf: 'flex-end',
    alignItems: 'center',
    justifyContent: 'center'
  },
  image: {
    height: 8,
    width: 8,
    tintColor: LogBoxStyle.getBackgroundColor(1)
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVmlldyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX0ltYWdlIiwiX1N0eWxlU2hlZXQiLCJfTG9nQm94QnV0dG9uIiwiTG9nQm94U3R5bGUiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIlJlYWN0IiwiX2pzeFJ1bnRpbWUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIkxvZ0JveE5vdGlmaWNhdGlvbkRpc21pc3NCdXR0b24iLCJwcm9wcyIsImpzeCIsInN0eWxlIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY2hpbGRyZW4iLCJpZCIsImJhY2tncm91bmRDb2xvciIsImdldFRleHRDb2xvciIsInByZXNzZWQiLCJoaXRTbG9wIiwidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0Iiwib25QcmVzcyIsInByZXNzIiwic291cmNlIiwiaW1hZ2UiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiYWxpZ25TZWxmIiwiZmxleERpcmVjdGlvbiIsImZsZXhHcm93IiwiZmxleFNocmluayIsImZsZXhCYXNpcyIsIm1hcmdpbkxlZnQiLCJoZWlnaHQiLCJ3aWR0aCIsImJvcmRlclJhZGl1cyIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsInRpbnRDb2xvciIsImdldEJhY2tncm91bmRDb2xvciJdLCJzb3VyY2VzIjpbIkxvZ0JveE5vdGlmaWNhdGlvbkRpc21pc3NCdXR0b24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCBWaWV3IGZyb20gJy4uLy4uL0NvbXBvbmVudHMvVmlldy9WaWV3JztcbmltcG9ydCBJbWFnZSBmcm9tICcuLi8uLi9JbWFnZS9JbWFnZSc7XG5pbXBvcnQgU3R5bGVTaGVldCBmcm9tICcuLi8uLi9TdHlsZVNoZWV0L1N0eWxlU2hlZXQnO1xuaW1wb3J0IExvZ0JveEJ1dHRvbiBmcm9tICcuL0xvZ0JveEJ1dHRvbic7XG5pbXBvcnQgKiBhcyBMb2dCb3hTdHlsZSBmcm9tICcuL0xvZ0JveFN0eWxlJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9nQm94Tm90aWZpY2F0aW9uRGlzbWlzc0J1dHRvbihwcm9wczoge1xuICBpZDogc3RyaW5nLFxuICBvblByZXNzOiAoKSA9PiB2b2lkLFxufSk6IFJlYWN0Lk5vZGUge1xuICByZXR1cm4gKFxuICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgIDxMb2dCb3hCdXR0b25cbiAgICAgICAgaWQ9e3Byb3BzLmlkfVxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I9e3tcbiAgICAgICAgICBkZWZhdWx0OiBMb2dCb3hTdHlsZS5nZXRUZXh0Q29sb3IoMC4zKSxcbiAgICAgICAgICBwcmVzc2VkOiBMb2dCb3hTdHlsZS5nZXRUZXh0Q29sb3IoMC41KSxcbiAgICAgICAgfX1cbiAgICAgICAgaGl0U2xvcD17e1xuICAgICAgICAgIHRvcDogMTIsXG4gICAgICAgICAgcmlnaHQ6IDEwLFxuICAgICAgICAgIGJvdHRvbTogMTIsXG4gICAgICAgICAgbGVmdDogMTAsXG4gICAgICAgIH19XG4gICAgICAgIG9uUHJlc3M9e3Byb3BzLm9uUHJlc3N9XG4gICAgICAgIHN0eWxlPXtzdHlsZXMucHJlc3N9PlxuICAgICAgICA8SW1hZ2VcbiAgICAgICAgICBzb3VyY2U9e3JlcXVpcmUoJy4vTG9nQm94SW1hZ2VzL2Nsb3NlLnBuZycpfVxuICAgICAgICAgIHN0eWxlPXtzdHlsZXMuaW1hZ2V9XG4gICAgICAgIC8+XG4gICAgICA8L0xvZ0JveEJ1dHRvbj5cbiAgICA8L1ZpZXc+XG4gICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgYWxpZ25TZWxmOiAnY2VudGVyJyxcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBmbGV4R3JvdzogMCxcbiAgICBmbGV4U2hyaW5rOiAwLFxuICAgIGZsZXhCYXNpczogJ2F1dG8nLFxuICAgIG1hcmdpbkxlZnQ6IDUsXG4gIH0sXG4gIHByZXNzOiB7XG4gICAgaGVpZ2h0OiAyMCxcbiAgICB3aWR0aDogMjAsXG4gICAgYm9yZGVyUmFkaXVzOiAyNSxcbiAgICBhbGlnblNlbGY6ICdmbGV4LWVuZCcsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICB9LFxuICBpbWFnZToge1xuICAgIGhlaWdodDogOCxcbiAgICB3aWR0aDogOCxcbiAgICB0aW50Q29sb3I6IExvZ0JveFN0eWxlLmdldEJhY2tncm91bmRDb2xvcigxKSxcbiAgfSxcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQVVBLElBQUFBLEtBQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE1BQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFFLFdBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFHLGFBQUEsR0FBQUosc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFJLFdBQUEsR0FBQUMsdUJBQUEsQ0FBQUwsT0FBQTtBQUNB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