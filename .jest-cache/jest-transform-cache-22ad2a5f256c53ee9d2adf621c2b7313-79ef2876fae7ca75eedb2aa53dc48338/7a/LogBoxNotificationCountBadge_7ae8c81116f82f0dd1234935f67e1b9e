fa561bd94f9ea13212ee551a625ae098
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LogBoxNotificationCountBadge;
var _View = _interopRequireDefault(require("../../Components/View/View"));
var _StyleSheet = _interopRequireDefault(require("../../StyleSheet/StyleSheet"));
var _Text = _interopRequireDefault(require("../../Text/Text"));
var LogBoxStyle = _interopRequireWildcard(require("./LogBoxStyle"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function LogBoxNotificationCountBadge(props) {
  return (0, _jsxRuntime.jsx)(_View.default, {
    style: styles.outside,
    children: (0, _jsxRuntime.jsx)(_View.default, {
      style: [styles.inside, styles[props.level]],
      children: (0, _jsxRuntime.jsx)(_Text.default, {
        id: "logbox_notification_count_text",
        style: styles.text,
        children: props.count <= 1 ? '!' : props.count
      })
    })
  });
}
var styles = _StyleSheet.default.create({
  warn: {
    backgroundColor: LogBoxStyle.getWarningColor(1)
  },
  error: {
    backgroundColor: LogBoxStyle.getErrorColor(1)
  },
  outside: {
    padding: 2,
    borderRadius: 25,
    backgroundColor: '#fff',
    marginRight: 8
  },
  inside: {
    minWidth: 18,
    paddingLeft: 4,
    paddingRight: 4,
    borderRadius: 25,
    fontWeight: '600'
  },
  text: {
    color: LogBoxStyle.getTextColor(1),
    fontSize: 14,
    lineHeight: 18,
    textAlign: 'center',
    fontWeight: '600',
    textShadowColor: LogBoxStyle.getBackgroundColor(0.4),
    textShadowOffset: {
      width: 0,
      height: 0
    },
    textShadowRadius: 3
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVmlldyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX1N0eWxlU2hlZXQiLCJfVGV4dCIsIkxvZ0JveFN0eWxlIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJSZWFjdCIsIl9qc3hSdW50aW1lIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsIl90IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJMb2dCb3hOb3RpZmljYXRpb25Db3VudEJhZGdlIiwicHJvcHMiLCJqc3giLCJzdHlsZSIsInN0eWxlcyIsIm91dHNpZGUiLCJjaGlsZHJlbiIsImluc2lkZSIsImxldmVsIiwiaWQiLCJ0ZXh0IiwiY291bnQiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwid2FybiIsImJhY2tncm91bmRDb2xvciIsImdldFdhcm5pbmdDb2xvciIsImVycm9yIiwiZ2V0RXJyb3JDb2xvciIsInBhZGRpbmciLCJib3JkZXJSYWRpdXMiLCJtYXJnaW5SaWdodCIsIm1pbldpZHRoIiwicGFkZGluZ0xlZnQiLCJwYWRkaW5nUmlnaHQiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJnZXRUZXh0Q29sb3IiLCJmb250U2l6ZSIsImxpbmVIZWlnaHQiLCJ0ZXh0QWxpZ24iLCJ0ZXh0U2hhZG93Q29sb3IiLCJnZXRCYWNrZ3JvdW5kQ29sb3IiLCJ0ZXh0U2hhZG93T2Zmc2V0Iiwid2lkdGgiLCJoZWlnaHQiLCJ0ZXh0U2hhZG93UmFkaXVzIl0sInNvdXJjZXMiOlsiTG9nQm94Tm90aWZpY2F0aW9uQ291bnRCYWRnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IFZpZXcgZnJvbSAnLi4vLi4vQ29tcG9uZW50cy9WaWV3L1ZpZXcnO1xuaW1wb3J0IFN0eWxlU2hlZXQgZnJvbSAnLi4vLi4vU3R5bGVTaGVldC9TdHlsZVNoZWV0JztcbmltcG9ydCBUZXh0IGZyb20gJy4uLy4uL1RleHQvVGV4dCc7XG5pbXBvcnQgKiBhcyBMb2dCb3hTdHlsZSBmcm9tICcuL0xvZ0JveFN0eWxlJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9nQm94Tm90aWZpY2F0aW9uQ291bnRCYWRnZShwcm9wczoge1xuICBjb3VudDogbnVtYmVyLFxuICBsZXZlbDogJ2Vycm9yJyB8ICd3YXJuJyxcbn0pOiBSZWFjdC5Ob2RlIHtcbiAgcmV0dXJuIChcbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLm91dHNpZGV9PlxuICAgICAgey8qICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXR5cGVdICg+PTAuMTE0LjApIFRoaXMgc3VwcHJlc3Npb24gd2FzIGFkZGVkXG4gICAgICAgKiB3aGVuIGZpeGluZyB0aGUgdHlwZSBvZiBgU3R5bGVTaGVldC5jcmVhdGVgLiBSZW1vdmUgdGhpcyBjb21tZW50IHRvXG4gICAgICAgKiBzZWUgdGhlIGVycm9yLiAqL31cbiAgICAgIDxWaWV3IHN0eWxlPXtbc3R5bGVzLmluc2lkZSwgc3R5bGVzW3Byb3BzLmxldmVsXV19PlxuICAgICAgICA8VGV4dCBpZD1cImxvZ2JveF9ub3RpZmljYXRpb25fY291bnRfdGV4dFwiIHN0eWxlPXtzdHlsZXMudGV4dH0+XG4gICAgICAgICAge3Byb3BzLmNvdW50IDw9IDEgPyAnIScgOiBwcm9wcy5jb3VudH1cbiAgICAgICAgPC9UZXh0PlxuICAgICAgPC9WaWV3PlxuICAgIDwvVmlldz5cbiAgKTtcbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB3YXJuOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBMb2dCb3hTdHlsZS5nZXRXYXJuaW5nQ29sb3IoMSksXG4gIH0sXG4gIGVycm9yOiB7XG4gICAgYmFja2dyb3VuZENvbG9yOiBMb2dCb3hTdHlsZS5nZXRFcnJvckNvbG9yKDEpLFxuICB9LFxuICBvdXRzaWRlOiB7XG4gICAgcGFkZGluZzogMixcbiAgICBib3JkZXJSYWRpdXM6IDI1LFxuICAgIGJhY2tncm91bmRDb2xvcjogJyNmZmYnLFxuICAgIG1hcmdpblJpZ2h0OiA4LFxuICB9LFxuICBpbnNpZGU6IHtcbiAgICBtaW5XaWR0aDogMTgsXG4gICAgcGFkZGluZ0xlZnQ6IDQsXG4gICAgcGFkZGluZ1JpZ2h0OiA0LFxuICAgIGJvcmRlclJhZGl1czogMjUsXG4gICAgZm9udFdlaWdodDogJzYwMCcsXG4gIH0sXG4gIHRleHQ6IHtcbiAgICBjb2xvcjogTG9nQm94U3R5bGUuZ2V0VGV4dENvbG9yKDEpLFxuICAgIGZvbnRTaXplOiAxNCxcbiAgICBsaW5lSGVpZ2h0OiAxOCxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIGZvbnRXZWlnaHQ6ICc2MDAnLFxuICAgIHRleHRTaGFkb3dDb2xvcjogTG9nQm94U3R5bGUuZ2V0QmFja2dyb3VuZENvbG9yKDAuNCksXG4gICAgdGV4dFNoYWRvd09mZnNldDoge3dpZHRoOiAwLCBoZWlnaHQ6IDB9LFxuICAgIHRleHRTaGFkb3dSYWRpdXM6IDMsXG4gIH0sXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFVQSxJQUFBQSxLQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxXQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7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