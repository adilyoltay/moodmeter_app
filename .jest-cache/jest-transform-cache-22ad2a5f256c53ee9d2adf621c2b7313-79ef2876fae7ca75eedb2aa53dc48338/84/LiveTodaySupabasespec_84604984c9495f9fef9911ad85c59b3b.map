{"version":3,"names":["_getJestObj","mock","_require","require","createSupabaseTestClient","client","__esModule","default","supabaseClient","_interopRequireDefault","_asyncToGenerator2","_require4","jest","_require2","unifiedPipeline","_require3","userId","process","env","TEST_SEED_USER_ID","supabase","cleanup","_cleanup","apply","arguments","from","delete","ilike","eq","describe","beforeAll","TEST_MODE","TEST_TTL_MS","TEST_PIPELINE_STUB","EXPO_PUBLIC_ENABLE_AI","afterAll","it","moods","Array","length","_","i","timestamp","Date","now","mood_score","type","content","context","source","Promise","r","setTimeout","_yield$supabase$from$","select","limit","data","error","expect","toBeNull","toBeGreaterThan","second","metadata","toBe","triggerInvalidation","_yield$supabase$from$2"],"sources":["LiveTodaySupabase.spec.ts"],"sourcesContent":["/**\n * Live Supabase Tests â€” Today (QRlive)\n * Tags: [QRlive:today:fresh|cache|invalidate]\n */\n// Replace app supabase service with service-role client for live tests\njest.mock('@/services/supabase', () => {\n  const { createSupabaseTestClient } = require('./utils/supabaseTestClient');\n  const client = createSupabaseTestClient();\n  return {\n    __esModule: true,\n    default: { supabaseClient: client },\n    supabaseClient: client,\n  };\n});\n\nconst { unifiedPipeline } = require('@/features/ai/core/UnifiedAIPipeline');\nconst { createSupabaseTestClient } = require('./utils/supabaseTestClient');\n\nconst userId = process.env.TEST_SEED_USER_ID || '00000000-0000-0000-0000-000000000001';\nconst supabase = createSupabaseTestClient();\n\nasync function cleanup() {\n  await supabase.from('ai_cache').delete().ilike('cache_key', `unified:${userId}:%`).eq('user_id', userId);\n  await supabase.from('ai_telemetry').delete().eq('user_id', userId);\n}\n\ndescribe('Live Today Supabase', () => {\n  beforeAll(async () => {\n    process.env.TEST_MODE = '1';\n    process.env.TEST_TTL_MS = '5000';\n    process.env.TEST_PIPELINE_STUB = '0';\n    process.env.EXPO_PUBLIC_ENABLE_AI = 'true';\n    process.env.TEST_SEED_USER_ID = userId;\n    await cleanup();\n  });\n\n  afterAll(async () => {\n    await cleanup();\n  });\n\n  it('[QRlive:today:fresh] writes ai_cache on fresh run', async () => {\n    const moods = Array.from({ length: 10 }, (_, i) => ({ timestamp: Date.now() - i * 3600e3, mood_score: 7 }));\n    await unifiedPipeline.process({ userId, type: 'data', content: { moods }, context: { source: 'mood' } });\n    // Wait briefly to allow DB upsert\n    await new Promise(r => setTimeout(r, 150));\n    const { data, error } = await supabase\n      .from('ai_cache')\n      .select('cache_key, content, expires_at')\n      .eq('user_id', userId)\n      .ilike('cache_key', `unified:${userId}:%`)\n      .limit(1);\n    expect(error).toBeNull();\n    expect((data || []).length).toBeGreaterThan(0);\n  });\n\n  it('[QRlive:today:cache] reads from cache on second run', async () => {\n    const moods = Array.from({ length: 8 }, (_, i) => ({ timestamp: Date.now() - i * 1800e3, mood_score: 6.5 }));\n    await unifiedPipeline.process({ userId, type: 'data', content: { moods }, context: { source: 'mood' } });\n    const second = await unifiedPipeline.process({ userId, type: 'data', content: { moods }, context: { source: 'mood' } });\n    expect(second.metadata.source).toBe('cache');\n  });\n\n  it('[QRlive:today:invalidate] deletes ai_cache rows on invalidation', async () => {\n    await unifiedPipeline.triggerInvalidation('mood_added', userId);\n    await new Promise(r => setTimeout(r, 150));\n    const { data, error } = await supabase\n      .from('ai_cache')\n      .select('cache_key')\n      .eq('user_id', userId)\n      .ilike('cache_key', `unified:${userId}:%`);\n    expect(error).toBeNull();\n    expect((data || []).length).toBe(0);\n  });\n});\n\n\n"],"mappings":"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","ignoreList":[]}