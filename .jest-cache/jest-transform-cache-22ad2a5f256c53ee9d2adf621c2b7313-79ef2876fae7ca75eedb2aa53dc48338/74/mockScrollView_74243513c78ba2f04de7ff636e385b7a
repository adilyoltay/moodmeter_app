a7f5e18697c5229b250e27b77a450b48
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _jsxRuntime = require("react/jsx-runtime");
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var View = require("../Libraries/Components/View/View").default;
var requireNativeComponent = require("../Libraries/ReactNative/requireNativeComponent").default;
var React = require('react');
var RCTScrollView = requireNativeComponent('RCTScrollView');
function mockScrollView(BaseComponent) {
  var ScrollViewMock = function (_BaseComponent) {
    function ScrollViewMock() {
      (0, _classCallCheck2.default)(this, ScrollViewMock);
      return _callSuper(this, ScrollViewMock, arguments);
    }
    (0, _inherits2.default)(ScrollViewMock, _BaseComponent);
    return (0, _createClass2.default)(ScrollViewMock, [{
      key: "render",
      value: function render() {
        return (0, _jsxRuntime.jsxs)(RCTScrollView, Object.assign({}, this.props, {
          children: [this.props.refreshControl, (0, _jsxRuntime.jsx)(View, {
            children: this.props.children
          })]
        }));
      }
    }]);
  }(BaseComponent);
  return ScrollViewMock;
}
module.exports = mockScrollView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2dldFByb3RvdHlwZU9mMiIsIl9pbmhlcml0czIiLCJfanN4UnVudGltZSIsIl9jYWxsU3VwZXIiLCJ0IiwibyIsImUiLCJkZWZhdWx0IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiVmlldyIsInJlcXVpcmVOYXRpdmVDb21wb25lbnQiLCJSZWFjdCIsIlJDVFNjcm9sbFZpZXciLCJtb2NrU2Nyb2xsVmlldyIsIkJhc2VDb21wb25lbnQiLCJTY3JvbGxWaWV3TW9jayIsIl9CYXNlQ29tcG9uZW50IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJqc3hzIiwiT2JqZWN0IiwiYXNzaWduIiwicHJvcHMiLCJjaGlsZHJlbiIsInJlZnJlc2hDb250cm9sIiwianN4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIm1vY2tTY3JvbGxWaWV3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqL1xuXG4vKiBlc2xpbnQtZW52IGplc3QgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBWaWV3ID0gcmVxdWlyZSgnLi4vTGlicmFyaWVzL0NvbXBvbmVudHMvVmlldy9WaWV3JykuZGVmYXVsdDtcbmNvbnN0IHJlcXVpcmVOYXRpdmVDb21wb25lbnQgPVxuICByZXF1aXJlKCcuLi9MaWJyYXJpZXMvUmVhY3ROYXRpdmUvcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCcpLmRlZmF1bHQ7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBSQ1RTY3JvbGxWaWV3OiAkRmxvd0ZpeE1lID0gcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCgnUkNUU2Nyb2xsVmlldycpO1xuXG5mdW5jdGlvbiBtb2NrU2Nyb2xsVmlldyhCYXNlQ29tcG9uZW50OiAkRmxvd0ZpeE1lKSB7XG4gIGNsYXNzIFNjcm9sbFZpZXdNb2NrIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCk6IFJlYWN0Lk1peGVkRWxlbWVudCB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8UkNUU2Nyb2xsVmlldyB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgICAge3RoaXMucHJvcHMucmVmcmVzaENvbnRyb2x9XG4gICAgICAgICAgPFZpZXc+e3RoaXMucHJvcHMuY2hpbGRyZW59PC9WaWV3PlxuICAgICAgICA8L1JDVFNjcm9sbFZpZXc+XG4gICAgICApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gU2Nyb2xsVmlld01vY2s7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKG1vY2tTY3JvbGxWaWV3OiAkRmxvd0ZpeE1lKTtcbiJdLCJtYXBwaW5ncyI6IkFBWUEsWUFBWTs7QUFBQyxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUEsSUFBQUMsZ0JBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFFLGFBQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFHLDJCQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBQSxJQUFBSSxnQkFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQUssVUFBQSxHQUFBTixzQkFBQSxDQUFBQyxPQUFBO0FBQUEsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBQUEsU0FBQU8sV0FBQUMsQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsV0FBQUQsQ0FBQSxPQUFBTCxnQkFBQSxDQUFBTyxPQUFBLEVBQUFGLENBQUEsT0FBQU4sMkJBQUEsQ0FBQVEsT0FBQSxFQUFBSCxDQUFBLEVBQUFJLHlCQUFBLEtBQUFDLE9BQUEsQ0FBQUMsU0FBQSxDQUFBTCxDQUFBLEVBQUFDLENBQUEsWUFBQU4sZ0JBQUEsQ0FBQU8sT0FBQSxFQUFBSCxDQUFBLEVBQUFPLFdBQUEsSUFBQU4sQ0FBQSxDQUFBTyxLQUFBLENBQUFSLENBQUEsRUFBQUUsQ0FBQTtBQUFBLFNBQUFFLDBCQUFBLGNBQUFKLENBQUEsSUFBQVMsT0FBQSxDQUFBQyxTQUFBLENBQUFDLE9BQUEsQ0FBQUMsSUFBQSxDQUFBUCxPQUFBLENBQUFDLFNBQUEsQ0FBQUcsT0FBQSxpQ0FBQVQsQ0FBQSxhQUFBSSx5QkFBQSxZQUFBQSwwQkFBQSxhQUFBSixDQUFBO0FBRWIsSUFBTWEsSUFBSSxHQUFHckIsT0FBTyxvQ0FBb0MsQ0FBQyxDQUFDVyxPQUFPO0FBQ2pFLElBQU1XLHNCQUFzQixHQUMxQnRCLE9BQU8sa0RBQWtELENBQUMsQ0FBQ1csT0FBTztBQUNwRSxJQUFNWSxLQUFLLEdBQUd2QixPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLElBQU13QixhQUF5QixHQUFHRixzQkFBc0IsQ0FBQyxlQUFlLENBQUM7QUFFekUsU0FBU0csY0FBY0EsQ0FBQ0MsYUFBeUIsRUFBRTtFQUFBLElBQzNDQyxjQUFjLGFBQUFDLGNBQUE7SUFBQSxTQUFBRCxlQUFBO01BQUEsSUFBQTFCLGdCQUFBLENBQUFVLE9BQUEsUUFBQWdCLGNBQUE7TUFBQSxPQUFBcEIsVUFBQSxPQUFBb0IsY0FBQSxFQUFBRSxTQUFBO0lBQUE7SUFBQSxJQUFBeEIsVUFBQSxDQUFBTSxPQUFBLEVBQUFnQixjQUFBLEVBQUFDLGNBQUE7SUFBQSxXQUFBMUIsYUFBQSxDQUFBUyxPQUFBLEVBQUFnQixjQUFBO01BQUFHLEdBQUE7TUFBQUMsS0FBQSxFQUNsQixTQUFBQyxNQUFNQSxDQUFBLEVBQXVCO1FBQzNCLE9BQ0UsSUFBQTFCLFdBQUEsQ0FBQTJCLElBQUEsRUFBQ1QsYUFBYSxFQUFBVSxNQUFBLENBQUFDLE1BQUEsS0FBSyxJQUFJLENBQUNDLEtBQUs7VUFBQUMsUUFBQSxHQUMxQixJQUFJLENBQUNELEtBQUssQ0FBQ0UsY0FBYyxFQUMxQixJQUFBaEMsV0FBQSxDQUFBaUMsR0FBQSxFQUFDbEIsSUFBSTtZQUFBZ0IsUUFBQSxFQUFFLElBQUksQ0FBQ0QsS0FBSyxDQUFDQztVQUFRLENBQU8sQ0FBQztRQUFBLEVBQ3JCLENBQUM7TUFFcEI7SUFBQztFQUFBLEVBUjBCWCxhQUFhO0VBVTFDLE9BQU9DLGNBQWM7QUFDdkI7QUFFQWEsTUFBTSxDQUFDQyxPQUFPLEdBQUloQixjQUEyQiIsImlnbm9yZUxpc3QiOltdfQ==