{"version":3,"names":["_accessibility","require","_matchStringProp","matchAccessibilityValue","node","matcher","value","computeAriaValue","min","undefined","max","now","text","matchStringProp"],"sources":["../../../src/helpers/matchers/match-accessibility-value.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport type { TextMatch } from '../../matches';\nimport { computeAriaValue } from '../accessibility';\nimport { matchStringProp } from './match-string-prop';\n\nexport interface AccessibilityValueMatcher {\n  min?: number;\n  max?: number;\n  now?: number;\n  text?: TextMatch;\n}\n\nexport function matchAccessibilityValue(\n  node: ReactTestInstance,\n  matcher: AccessibilityValueMatcher,\n): boolean {\n  const value = computeAriaValue(node);\n  return (\n    (matcher.min === undefined || matcher.min === value?.min) &&\n    (matcher.max === undefined || matcher.max === value?.max) &&\n    (matcher.now === undefined || matcher.now === value?.now) &&\n    (matcher.text === undefined || matchStringProp(value?.text, matcher.text))\n  );\n}\n"],"mappings":";;;;;;AAGA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,gBAAA,GAAAD,OAAA;AASO,SAASE,uBAAuBA,CACrCC,IAAuB,EACvBC,OAAkC,EACzB;EACT,IAAMC,KAAK,GAAG,IAAAN,cAAA,CAAAO,gBAAgB,EAACH,IAAI,CAAC;EACpC,OACE,CAACC,OAAO,CAACG,GAAG,KAAKC,SAAS,IAAIJ,OAAO,CAACG,GAAG,MAAKF,KAAK,oBAALA,KAAK,CAAEE,GAAG,OACvDH,OAAO,CAACK,GAAG,KAAKD,SAAS,IAAIJ,OAAO,CAACK,GAAG,MAAKJ,KAAK,oBAALA,KAAK,CAAEI,GAAG,EAAC,KACxDL,OAAO,CAACM,GAAG,KAAKF,SAAS,IAAIJ,OAAO,CAACM,GAAG,MAAKL,KAAK,oBAALA,KAAK,CAAEK,GAAG,EAAC,KACxDN,OAAO,CAACO,IAAI,KAAKH,SAAS,IAAI,IAAAP,gBAAA,CAAAW,eAAe,EAACP,KAAK,oBAALA,KAAK,CAAEM,IAAI,EAAEP,OAAO,CAACO,IAAI,CAAC,CAAC;AAE9E","ignoreList":[]}