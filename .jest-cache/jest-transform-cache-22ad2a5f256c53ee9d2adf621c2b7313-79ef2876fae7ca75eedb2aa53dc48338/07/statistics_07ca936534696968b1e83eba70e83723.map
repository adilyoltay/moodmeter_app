{"version":3,"names":["quantiles","exports","arr","vals","map","Number","filter","n","isFinite","length","p25","NaN","p50","p75","a","Float64Array","from","sort","q","p","idx","lo","Math","floor","hi","ceil","t","recencyAlpha","ts","minTs","maxTs","max","min","lcg","seed","jitterXY","seedKey","xMaxPx","arguments","undefined","yMaxPx","h","i","charCodeAt","imul","rnd","jx","jy","energyToColor","e","alpha","isDark","raw","val","clamped","hue","lightness","round","deriveAnxietySeries","moods","energies","rawAnx","anx","v","allFives","every","avgMood","reduce","s","avgEnergy","m10","e10","derived","Array","fill"],"sources":["statistics.ts"],"sourcesContent":["export type IQR = { p25: number; p50: number; p75: number };\n\nexport const quantiles = (arr: number[]): IQR => {\n  const vals = (arr || []).map(Number).filter((n) => Number.isFinite(n));\n  if (vals.length === 0) return { p25: NaN, p50: NaN, p75: NaN };\n  const a = Float64Array.from(vals).sort();\n  const q = (p: number) => {\n    const idx = (a.length - 1) * p;\n    const lo = Math.floor(idx);\n    const hi = Math.ceil(idx);\n    if (lo === hi) return a[lo];\n    const t = idx - lo;\n    return a[lo] * (1 - t) + a[hi] * t;\n  };\n  return { p25: q(0.25), p50: q(0.5), p75: q(0.75) };\n};\n\nexport const recencyAlpha = (ts: number, minTs: number, maxTs: number) => {\n  if (maxTs === minTs) return 1;\n  const t = (ts - minTs) / (maxTs - minTs);\n  return 0.5 + 0.5 * Math.max(0, Math.min(1, t));\n};\n\nexport const lcg = (seed: number) => () => (seed = (seed * 1664525 + 1013904223) >>> 0) / 2 ** 32;\n\nexport const jitterXY = (seedKey: string, xMaxPx = 12, yMaxPx = 2.2) => {\n  let h = 2166136261;\n  for (let i = 0; i < seedKey.length; i++) {\n    h ^= seedKey.charCodeAt(i);\n    h = Math.imul(h, 16777619);\n  }\n  const rnd = lcg(h >>> 0);\n  return { jx: (rnd() - 0.5) * 2 * xMaxPx, jy: (rnd() - 0.5) * 2 * yMaxPx };\n};\n\nexport const energyToColor = (e: number, alpha: number = 1, isDark: boolean = false) => {\n  // e raw: often 1..10; normalize to 0..100\n  const raw = typeof e === 'number' && e <= 10 ? e * 10 : e;\n  const val = Number.isFinite(raw) ? (raw as number) : 60; // fallback mid\n  const clamped = Math.max(0, Math.min(100, val));\n  const hue = 200 - (180 * clamped) / 100; // 200° (low) → 20° (high)\n  const lightness = isDark ? 58 : 46; // a11y contrast tuning\n  const h = Number.isFinite(hue) ? Math.round(hue) : 200;\n  return `hsla(${h}, 65%, ${lightness}%, ${alpha})`;\n};\n\n// Derive anxiety series when all values are default 5's (fallback) and we have meaningful mood/energy\n// Returns:\n// - if rawAnx empty → [5]\n// - if all fives and moods/energies provided → array filled with derived value (same length as rawAnx or 1 when empty)\n// - else → rawAnx\nexport const deriveAnxietySeries = (moods: number[], energies: number[], rawAnx: number[]): number[] => {\n  const anx = (rawAnx || []).filter(v => Number.isFinite(v));\n  if (anx.length === 0) return [5];\n  const allFives = anx.every(v => v === 5);\n  if (allFives && (moods?.length || 0) > 0 && (energies?.length || 0) > 0) {\n    const avgMood = moods.reduce((s, v) => s + v, 0) / moods.length;\n    const avgEnergy = energies.reduce((s, v) => s + v, 0) / energies.length;\n    const m10 = Math.max(1, Math.min(10, Math.round(avgMood / 10)));\n    const e10 = Math.max(1, Math.min(10, Math.round(avgEnergy)));\n    let derived = 5;\n    if (m10 <= 3) derived = 7;\n    else if (m10 >= 8 && e10 <= 4) derived = 6;\n    else if (m10 <= 5 && e10 >= 7) derived = 8;\n    else if (m10 >= 7 && e10 >= 7) derived = 4;\n    else derived = Math.max(2, Math.min(8, 6 - (m10 - 5)));\n    return new Array(anx.length).fill(derived);\n  }\n  return anx;\n};\n"],"mappings":"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","ignoreList":[]}