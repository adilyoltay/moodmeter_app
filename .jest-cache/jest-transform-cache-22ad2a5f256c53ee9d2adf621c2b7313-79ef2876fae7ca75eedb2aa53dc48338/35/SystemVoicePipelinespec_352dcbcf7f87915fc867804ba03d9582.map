{"version":3,"names":["_getJestObj","mock","__esModule","default","supabaseClient","from","jest","fn","select","eq","maybeSingle","_asyncToGenerator2","data","error","upsert","delete","like","unifiedVoiceAnalysis","Error","_interopRequireDefault","require","_asyncStorage","_UnifiedAIPipeline","_require","actualTelemetry","requireActual","describe","beforeAll","process","env","TEST_MODE","TEST_TTL_MS","TEST_PIPELINE_STUB","TEST_SEED_USER_ID","EXPO_PUBLIC_ENABLE_AI","beforeEach","clearAllMocks","AsyncStorage","clear","it","_result$voice","userId","text","result","unifiedPipeline","type","content","context","source","expect","metadata","toBe","voice","toBeDefined","suggestion","toContain"],"sources":["SystemVoicePipeline.spec.tsx"],"sourcesContent":["/**\n * üß™ System-Mode Tests ‚Äî Voice (Real UnifiedAIPipeline)\n *\n * Minimal fallback path validation for voice analysis to clear System Voice gating.\n * Tag: [QRsys:voice:fallback]\n */\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { unifiedPipeline } from '@/features/ai/core/UnifiedAIPipeline';\n\n// Keep actual enums available\nconst actualTelemetry = jest.requireActual('@/features/ai/telemetry/aiTelemetry');\n\n// Mock Supabase to avoid network\njest.mock('@/services/supabase', () => ({\n  __esModule: true,\n  default: {\n    supabaseClient: {\n      from: jest.fn(() => ({\n        select: jest.fn(() => ({ eq: jest.fn(() => ({ maybeSingle: jest.fn(async () => ({ data: null, error: null })) })) })),\n        upsert: jest.fn(async () => ({ data: null, error: null })),\n        delete: jest.fn(() => ({ eq: jest.fn(async () => ({ data: null, error: null })) })),\n        like: jest.fn(() => ({ delete: jest.fn(() => ({ eq: jest.fn(async () => ({ data: null, error: null })) })) })),\n        eq: jest.fn(() => ({ maybeSingle: jest.fn(async () => ({ data: null, error: null })) })),\n      }))\n    }\n  }\n}));\n\n// Force the voice module to throw so pipeline uses heuristic fallback\njest.mock('@/features/ai/services/checkinService', () => ({\n  __esModule: true,\n  unifiedVoiceAnalysis: jest.fn(async () => { throw new Error('forced voice analysis failure'); })\n}));\n\ndescribe('System Voice - Unified Pipeline', () => {\n  beforeAll(() => {\n    process.env.TEST_MODE = '1';\n    process.env.TEST_TTL_MS = '5000';\n    process.env.TEST_PIPELINE_STUB = '0';\n    process.env.TEST_SEED_USER_ID = process.env.TEST_SEED_USER_ID || 'test-user-1';\n    process.env.EXPO_PUBLIC_ENABLE_AI = 'true';\n  });\n\n  beforeEach(async () => {\n    jest.clearAllMocks();\n    await (AsyncStorage as any).clear();\n  });\n\n  it('[QRsys:voice:fallback] uses heuristic fallback when voice analysis fails', async () => {\n    const userId = process.env.TEST_SEED_USER_ID || 'test-user-1';\n    const text = 'Bug√ºn biraz yorgun ve stresliyim, nefes egzersizi iyi gelebilir.';\n\n    const result = await unifiedPipeline.process({\n      userId,\n      type: 'voice',\n      content: text,\n      context: { source: 'today' }\n    });\n\n    expect(result.metadata.source).toBe('fresh');\n    expect(result.voice).toBeDefined();\n    // Heuristic generator sets a generic suggestion\n    expect(result.voice?.suggestion).toContain('Heuristic');\n  });\n});\n\n"],"mappings":"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","ignoreList":[]}