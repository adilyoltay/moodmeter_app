ed0f9afa27c098378b24b1a40ec34aee
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toBeCollapsed = toBeCollapsed;
exports.toBeExpanded = toBeExpanded;
var _jestMatcherUtils = require("jest-matcher-utils");
var _redent = _interopRequireDefault(require("redent"));
var _accessibility = require("../helpers/accessibility");
var _formatElement = require("../helpers/format-element");
var _utils = require("./utils");
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : {
    default: e
  };
}
function toBeExpanded(element) {
  var _this = this;
  (0, _utils.checkHostElement)(element, toBeExpanded, this);
  return {
    pass: (0, _accessibility.computeAriaExpanded)(element) === true,
    message: function message() {
      var matcher = (0, _jestMatcherUtils.matcherHint)(`${_this.isNot ? '.not' : ''}.toBeExpanded`, 'element', '');
      return [matcher, '', `Received element is ${_this.isNot ? '' : 'not '}expanded:`, (0, _redent.default)((0, _formatElement.formatElement)(element), 2)].join('\n');
    }
  };
}
function toBeCollapsed(element) {
  var _this2 = this;
  (0, _utils.checkHostElement)(element, toBeCollapsed, this);
  return {
    pass: (0, _accessibility.computeAriaExpanded)(element) === false,
    message: function message() {
      var matcher = (0, _jestMatcherUtils.matcherHint)(`${_this2.isNot ? '.not' : ''}.toBeCollapsed`, 'element', '');
      return [matcher, '', `Received element is ${_this2.isNot ? '' : 'not '}collapsed:`, (0, _redent.default)((0, _formatElement.formatElement)(element), 2)].join('\n');
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfamVzdE1hdGNoZXJVdGlscyIsInJlcXVpcmUiLCJfcmVkZW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9hY2Nlc3NpYmlsaXR5IiwiX2Zvcm1hdEVsZW1lbnQiLCJfdXRpbHMiLCJlIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0b0JlRXhwYW5kZWQiLCJlbGVtZW50IiwiX3RoaXMiLCJjaGVja0hvc3RFbGVtZW50IiwicGFzcyIsImNvbXB1dGVBcmlhRXhwYW5kZWQiLCJtZXNzYWdlIiwibWF0Y2hlciIsIm1hdGNoZXJIaW50IiwiaXNOb3QiLCJmb3JtYXRFbGVtZW50Iiwiam9pbiIsInRvQmVDb2xsYXBzZWQiLCJfdGhpczIiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvbWF0Y2hlcnMvdG8tYmUtZXhwYW5kZWQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBSZWFjdFRlc3RJbnN0YW5jZSB9IGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xuaW1wb3J0IHsgbWF0Y2hlckhpbnQgfSBmcm9tICdqZXN0LW1hdGNoZXItdXRpbHMnO1xuaW1wb3J0IHJlZGVudCBmcm9tICdyZWRlbnQnO1xuXG5pbXBvcnQgeyBjb21wdXRlQXJpYUV4cGFuZGVkIH0gZnJvbSAnLi4vaGVscGVycy9hY2Nlc3NpYmlsaXR5JztcbmltcG9ydCB7IGZvcm1hdEVsZW1lbnQgfSBmcm9tICcuLi9oZWxwZXJzL2Zvcm1hdC1lbGVtZW50JztcbmltcG9ydCB7IGNoZWNrSG9zdEVsZW1lbnQgfSBmcm9tICcuL3V0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHRvQmVFeHBhbmRlZCh0aGlzOiBqZXN0Lk1hdGNoZXJDb250ZXh0LCBlbGVtZW50OiBSZWFjdFRlc3RJbnN0YW5jZSkge1xuICBjaGVja0hvc3RFbGVtZW50KGVsZW1lbnQsIHRvQmVFeHBhbmRlZCwgdGhpcyk7XG5cbiAgcmV0dXJuIHtcbiAgICBwYXNzOiBjb21wdXRlQXJpYUV4cGFuZGVkKGVsZW1lbnQpID09PSB0cnVlLFxuICAgIG1lc3NhZ2U6ICgpID0+IHtcbiAgICAgIGNvbnN0IG1hdGNoZXIgPSBtYXRjaGVySGludChgJHt0aGlzLmlzTm90ID8gJy5ub3QnIDogJyd9LnRvQmVFeHBhbmRlZGAsICdlbGVtZW50JywgJycpO1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgbWF0Y2hlcixcbiAgICAgICAgJycsXG4gICAgICAgIGBSZWNlaXZlZCBlbGVtZW50IGlzICR7dGhpcy5pc05vdCA/ICcnIDogJ25vdCAnfWV4cGFuZGVkOmAsXG4gICAgICAgIHJlZGVudChmb3JtYXRFbGVtZW50KGVsZW1lbnQpLCAyKSxcbiAgICAgIF0uam9pbignXFxuJyk7XG4gICAgfSxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvQmVDb2xsYXBzZWQodGhpczogamVzdC5NYXRjaGVyQ29udGV4dCwgZWxlbWVudDogUmVhY3RUZXN0SW5zdGFuY2UpIHtcbiAgY2hlY2tIb3N0RWxlbWVudChlbGVtZW50LCB0b0JlQ29sbGFwc2VkLCB0aGlzKTtcblxuICByZXR1cm4ge1xuICAgIHBhc3M6IGNvbXB1dGVBcmlhRXhwYW5kZWQoZWxlbWVudCkgPT09IGZhbHNlLFxuICAgIG1lc3NhZ2U6ICgpID0+IHtcbiAgICAgIGNvbnN0IG1hdGNoZXIgPSBtYXRjaGVySGludChgJHt0aGlzLmlzTm90ID8gJy5ub3QnIDogJyd9LnRvQmVDb2xsYXBzZWRgLCAnZWxlbWVudCcsICcnKTtcbiAgICAgIHJldHVybiBbXG4gICAgICAgIG1hdGNoZXIsXG4gICAgICAgICcnLFxuICAgICAgICBgUmVjZWl2ZWQgZWxlbWVudCBpcyAke3RoaXMuaXNOb3QgPyAnJyA6ICdub3QgJ31jb2xsYXBzZWQ6YCxcbiAgICAgICAgcmVkZW50KGZvcm1hdEVsZW1lbnQoZWxlbWVudCksIDIpLFxuICAgICAgXS5qb2luKCdcXG4nKTtcbiAgICB9LFxuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsSUFBQUEsaUJBQUEsR0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUVBLElBQUFHLGNBQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLGNBQUEsR0FBQUosT0FBQTtBQUNBLElBQUFLLE1BQUEsR0FBQUwsT0FBQTtBQUEyQyxTQUFBRSx1QkFBQUksQ0FBQTtFQUFBLE9BQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFFcEMsU0FBU0csWUFBWUEsQ0FBNEJDLE9BQTBCLEVBQUU7RUFBQSxJQUFBQyxLQUFBO0VBQ2xGLElBQUFOLE1BQUEsQ0FBQU8sZ0JBQWdCLEVBQUNGLE9BQU8sRUFBRUQsWUFBWSxFQUFFLElBQUksQ0FBQztFQUU3QyxPQUFPO0lBQ0xJLElBQUksRUFBRSxJQUFBVixjQUFBLENBQUFXLG1CQUFtQixFQUFDSixPQUFPLENBQUMsS0FBSyxJQUFJO0lBQzNDSyxPQUFPLEVBQUUsU0FBVEEsT0FBT0EsQ0FBQSxFQUFRO01BQ2IsSUFBTUMsT0FBTyxHQUFHLElBQUFqQixpQkFBQSxDQUFBa0IsV0FBVyxFQUFDLEdBQUdOLEtBQUksQ0FBQ08sS0FBSyxHQUFHLE1BQU0sR0FBRyxFQUFFLGVBQWUsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDO01BQ3RGLE9BQU8sQ0FDTEYsT0FBTyxFQUNQLEVBQUUsRUFDRix1QkFBdUJMLEtBQUksQ0FBQ08sS0FBSyxHQUFHLEVBQUUsR0FBRyxNQUFNLFdBQVcsRUFDMUQsSUFBQWpCLE9BQUEsQ0FBQU8sT0FBTSxFQUFDLElBQUFKLGNBQUEsQ0FBQWUsYUFBYSxFQUFDVCxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FDbEMsQ0FBQ1UsSUFBSSxDQUFDLElBQUksQ0FBQztJQUNkO0VBQ0YsQ0FBQztBQUNIO0FBRU8sU0FBU0MsYUFBYUEsQ0FBNEJYLE9BQTBCLEVBQUU7RUFBQSxJQUFBWSxNQUFBO0VBQ25GLElBQUFqQixNQUFBLENBQUFPLGdCQUFnQixFQUFDRixPQUFPLEVBQUVXLGFBQWEsRUFBRSxJQUFJLENBQUM7RUFFOUMsT0FBTztJQUNMUixJQUFJLEVBQUUsSUFBQVYsY0FBQSxDQUFBVyxtQkFBbUIsRUFBQ0osT0FBTyxDQUFDLEtBQUssS0FBSztJQUM1Q0ssT0FBTyxFQUFFLFNBQVRBLE9BQU9BLENBQUEsRUFBUTtNQUNiLElBQU1DLE9BQU8sR0FBRyxJQUFBakIsaUJBQUEsQ0FBQWtCLFdBQVcsRUFBQyxHQUFHSyxNQUFJLENBQUNKLEtBQUssR0FBRyxNQUFNLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDO01BQ3ZGLE9BQU8sQ0FDTEYsT0FBTyxFQUNQLEVBQUUsRUFDRix1QkFBdUJNLE1BQUksQ0FBQ0osS0FBSyxHQUFHLEVBQUUsR0FBRyxNQUFNLFlBQVksRUFDM0QsSUFBQWpCLE9BQUEsQ0FBQU8sT0FBTSxFQUFDLElBQUFKLGNBQUEsQ0FBQWUsYUFBYSxFQUFDVCxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FDbEMsQ0FBQ1UsSUFBSSxDQUFDLElBQUksQ0FBQztJQUNkO0VBQ0YsQ0FBQztBQUNIIiwiaWdub3JlTGlzdCI6W119