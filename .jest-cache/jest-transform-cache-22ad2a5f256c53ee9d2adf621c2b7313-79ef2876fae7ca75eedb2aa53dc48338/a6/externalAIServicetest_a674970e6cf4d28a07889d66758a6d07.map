{"version":3,"names":["_externalAIService","require","describe","it","_asyncToGenerator2","default","externalAIService","isEnabled","res","getAIResponse","id","role","content","timestamp","Date","expect","provider","toBe","fallbackUsed","toBeTruthy","resPromise","maxTokens","resolves"],"sources":["externalAIService.test.ts"],"sourcesContent":["import { externalAIService } from '@/features/ai/services/externalAIService';\n\ndescribe('externalAIService heuristic fallback', () => {\n  it('returns fallback when service disabled', async () => {\n    // @ts-ignore - force disabled state\n    (externalAIService as any).isEnabled = false;\n    const res = await externalAIService.getAIResponse([\n      { id: '1', role: 'user', content: 'Merhaba', timestamp: new Date() }\n    ] as any, {} as any);\n    expect(res.provider).toBe('local');\n    expect(res.fallbackUsed).toBeTruthy();\n    expect(typeof res.content).toBe('string');\n  });\n\n  it('uses staged timeouts (3/10/30s) config', async () => {\n    // This test ensures code paths are present; not measuring real time.\n    // @ts-ignore\n    (externalAIService as any).isEnabled = true;\n    const resPromise = externalAIService.getAIResponse([] as any, {} as any, { maxTokens: 1 } as any);\n    expect(resPromise).resolves.toBeTruthy();\n  });\n});\n\n\n"],"mappings":";;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAEAC,QAAQ,CAAC,sCAAsC,EAAE,YAAM;EACrDC,EAAE,CAAC,wCAAwC,MAAAC,kBAAA,CAAAC,OAAA,EAAE,aAAY;IAEtDC,oCAAiB,CAASC,SAAS,GAAG,KAAK;IAC5C,IAAMC,GAAG,SAASF,oCAAiB,CAACG,aAAa,CAAC,CAChD;MAAEC,EAAE,EAAE,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE,SAAS;MAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC;IAAE,CAAC,CACrE,EAAS,CAAC,CAAQ,CAAC;IACpBC,MAAM,CAACP,GAAG,CAACQ,QAAQ,CAAC,CAACC,IAAI,CAAC,OAAO,CAAC;IAClCF,MAAM,CAACP,GAAG,CAACU,YAAY,CAAC,CAACC,UAAU,CAAC,CAAC;IACrCJ,MAAM,CAAC,OAAOP,GAAG,CAACI,OAAO,CAAC,CAACK,IAAI,CAAC,QAAQ,CAAC;EAC3C,CAAC,EAAC;EAEFd,EAAE,CAAC,wCAAwC,MAAAC,kBAAA,CAAAC,OAAA,EAAE,aAAY;IAGtDC,oCAAiB,CAASC,SAAS,GAAG,IAAI;IAC3C,IAAMa,UAAU,GAAGd,oCAAiB,CAACG,aAAa,CAAC,EAAE,EAAS,CAAC,CAAC,EAAS;MAAEY,SAAS,EAAE;IAAE,CAAQ,CAAC;IACjGN,MAAM,CAACK,UAAU,CAAC,CAACE,QAAQ,CAACH,UAAU,CAAC,CAAC;EAC1C,CAAC,EAAC;AACJ,CAAC,CAAC","ignoreList":[]}