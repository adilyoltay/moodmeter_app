{"version":3,"names":["_errors","require","UNSAFE_getByType","instance","getByTypeFn","type","findByType","error","ErrorWithStack","prepareErrorMessage","UNSAFE_getAllByType","getAllByTypeFn","results","findAllByType","length","UNSAFE_queryByType","queryByTypeFn","createQueryByError","UNSAFE_queryAllByType","_unused","bindUnsafeByTypeQueries","exports"],"sources":["../../src/queries/unsafe-type.ts"],"sourcesContent":["import type * as React from 'react';\nimport type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ErrorWithStack, prepareErrorMessage } from '../helpers/errors';\nimport { createQueryByError } from '../helpers/errors';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type UnsafeComponentType = React.ComponentType<any>;\n\nconst UNSAFE_getByType = (\n  instance: ReactTestInstance,\n): ((type: UnsafeComponentType) => ReactTestInstance) =>\n  function getByTypeFn(type: UnsafeComponentType) {\n    try {\n      return instance.findByType(type);\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByTypeFn);\n    }\n  };\n\nconst UNSAFE_getAllByType = (\n  instance: ReactTestInstance,\n): ((type: UnsafeComponentType) => Array<ReactTestInstance>) =>\n  function getAllByTypeFn(type: UnsafeComponentType) {\n    const results = instance.findAllByType(type);\n    if (results.length === 0) {\n      throw new ErrorWithStack('No instances found', getAllByTypeFn);\n    }\n    return results;\n  };\n\nconst UNSAFE_queryByType = (\n  instance: ReactTestInstance,\n): ((type: UnsafeComponentType) => ReactTestInstance | null) =>\n  function queryByTypeFn(type: UnsafeComponentType) {\n    try {\n      return UNSAFE_getByType(instance)(type);\n    } catch (error) {\n      return createQueryByError(error, queryByTypeFn);\n    }\n  };\n\nconst UNSAFE_queryAllByType =\n  (instance: ReactTestInstance): ((type: UnsafeComponentType) => Array<ReactTestInstance>) =>\n  (type: UnsafeComponentType) => {\n    try {\n      return UNSAFE_getAllByType(instance)(type);\n    } catch {\n      return [];\n    }\n  };\n\n// Unsafe aliases\nexport type UnsafeByTypeQueries = {\n  UNSAFE_getByType: <P>(type: React.ComponentType<P>) => ReactTestInstance;\n  UNSAFE_getAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;\n  UNSAFE_queryByType: <P>(type: React.ComponentType<P>) => ReactTestInstance | null;\n  UNSAFE_queryAllByType: <P>(type: React.ComponentType<P>) => Array<ReactTestInstance>;\n};\n\n// TODO: migrate to makeQueries pattern\nexport const bindUnsafeByTypeQueries = (instance: ReactTestInstance): UnsafeByTypeQueries => ({\n  UNSAFE_getByType: UNSAFE_getByType(instance),\n  UNSAFE_getAllByType: UNSAFE_getAllByType(instance),\n  UNSAFE_queryByType: UNSAFE_queryByType(instance),\n  UNSAFE_queryAllByType: UNSAFE_queryAllByType(instance),\n});\n"],"mappings":";;;;;;AAGA,IAAAA,OAAA,GAAAC,OAAA;AAMA,IAAMC,gBAAgB,GACpB,SADIA,gBAAgBA,CACpBC,QAA2B;EAAA,OAE3B,SAASC,WAAWA,CAACC,IAAyB,EAAE;IAC9C,IAAI;MACF,OAAOF,QAAQ,CAACG,UAAU,CAACD,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,MAAM,IAAIP,OAAA,CAAAQ,cAAc,CAAC,IAAAR,OAAA,CAAAS,mBAAmB,EAACF,KAAK,CAAC,EAAEH,WAAW,CAAC;IACnE;EACF,CAAC;AAAA;AAEH,IAAMM,mBAAmB,GACvB,SADIA,mBAAmBA,CACvBP,QAA2B;EAAA,OAE3B,SAASQ,cAAcA,CAACN,IAAyB,EAAE;IACjD,IAAMO,OAAO,GAAGT,QAAQ,CAACU,aAAa,CAACR,IAAI,CAAC;IAC5C,IAAIO,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAId,OAAA,CAAAQ,cAAc,CAAC,oBAAoB,EAAEG,cAAc,CAAC;IAChE;IACA,OAAOC,OAAO;EAChB,CAAC;AAAA;AAEH,IAAMG,kBAAkB,GACtB,SADIA,kBAAkBA,CACtBZ,QAA2B;EAAA,OAE3B,SAASa,aAAaA,CAACX,IAAyB,EAAE;IAChD,IAAI;MACF,OAAOH,gBAAgB,CAACC,QAAQ,CAAC,CAACE,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,OAAO,IAAAP,OAAA,CAAAiB,kBAAkB,EAACV,KAAK,EAAES,aAAa,CAAC;IACjD;EACF,CAAC;AAAA;AAEH,IAAME,qBAAqB,GACxB,SADGA,qBAAqBA,CACxBf,QAA2B;EAAA,OAC3B,UAAAE,IAAyB,EAAK;IAC7B,IAAI;MACF,OAAOK,mBAAmB,CAACP,QAAQ,CAAC,CAACE,IAAI,CAAC;IAC5C,CAAC,CAAC,OAAAc,OAAA,EAAM;MACN,OAAO,EAAE;IACX;EACF,CAAC;AAAA;AAWI,IAAMC,uBAAuB,GAAI,SAA3BA,uBAAuBA,CAAIjB,QAA2B;EAAA,OAA2B;IAC5FD,gBAAgB,EAAEA,gBAAgB,CAACC,QAAQ,CAAC;IAC5CO,mBAAmB,EAAEA,mBAAmB,CAACP,QAAQ,CAAC;IAClDY,kBAAkB,EAAEA,kBAAkB,CAACZ,QAAQ,CAAC;IAChDe,qBAAqB,EAAEA,qBAAqB,CAACf,QAAQ;EACvD,CAAC;AAAA,CAAC;AAACkB,OAAA,CAAAD,uBAAA,GAAAA,uBAAA","ignoreList":[]}