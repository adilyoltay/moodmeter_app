{"version":3,"names":["_act","_interopRequireDefault","require","_eventHandler","_componentTree","_errors","_hostComponentNames","_pointerEvents","_eventBuilder","_utils","e","__esModule","default","DEFAULT_MIN_PRESS_DURATION","exports","DEFAULT_LONG_PRESS_DELAY_MS","press","_x","_press","apply","arguments","_asyncToGenerator2","element","isHostElement","ErrorWithStack","type","basePress","config","longPress","_x2","_x3","_longPress","options","_options$duration","duration","_ref","isEnabledHostElement","hasPressEventHandler","emitDirectPressEvents","isEnabledTouchResponder","emitPressabilityPressEvents","hostParentElement","getHostParent","_x4","_x5","_x6","isPointerEventEnabled","isHostText","props","disabled","isHostTextInput","editable","onStartShouldSetResponder","getEventHandler","_x7","_x8","_x9","_emitDirectPressEvents","wait","dispatchEvent","EventBuilder","Common","touch","_x0","_x1","_x10","_emitPressabilityPressEvents","_options$duration2","responderGrant","responderRelease"],"sources":["../../../src/user-event/press/press.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\n\nimport act from '../../act';\nimport { getEventHandler } from '../../event-handler';\nimport type { HostTestInstance } from '../../helpers/component-tree';\nimport { getHostParent, isHostElement } from '../../helpers/component-tree';\nimport { ErrorWithStack } from '../../helpers/errors';\nimport { isHostText, isHostTextInput } from '../../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, wait } from '../utils';\n\n// These are constants defined in the React Native repo\n// See: https://github.com/facebook/react-native/blob/50e38cc9f1e6713228a91ad50f426c4f65e65e1a/packages/react-native/Libraries/Pressability/Pressability.js#L264\nexport const DEFAULT_MIN_PRESS_DURATION = 130;\nexport const DEFAULT_LONG_PRESS_DELAY_MS = 500;\n\nexport interface PressOptions {\n  duration?: number;\n}\n\nexport async function press(this: UserEventInstance, element: ReactTestInstance): Promise<void> {\n  if (!isHostElement(element)) {\n    throw new ErrorWithStack(\n      `press() works only with host elements. Passed element has type \"${element.type}\".`,\n      press,\n    );\n  }\n\n  await basePress(this.config, element, {\n    type: 'press',\n  });\n}\n\nexport async function longPress(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options?: PressOptions,\n): Promise<void> {\n  if (!isHostElement(element)) {\n    throw new ErrorWithStack(\n      `longPress() works only with host elements. Passed element has type \"${element.type}\".`,\n      longPress,\n    );\n  }\n\n  await basePress(this.config, element, {\n    type: 'longPress',\n    duration: options?.duration ?? DEFAULT_LONG_PRESS_DELAY_MS,\n  });\n}\n\ninterface BasePressOptions {\n  type: 'press' | 'longPress';\n  duration?: number;\n}\n\nconst basePress = async (\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n): Promise<void> => {\n  if (isEnabledHostElement(element) && hasPressEventHandler(element)) {\n    await emitDirectPressEvents(config, element, options);\n    return;\n  }\n\n  if (isEnabledTouchResponder(element)) {\n    await emitPressabilityPressEvents(config, element, options);\n    return;\n  }\n\n  const hostParentElement = getHostParent(element);\n  if (!hostParentElement) {\n    return;\n  }\n\n  await basePress(config, hostParentElement, options);\n};\n\nfunction isEnabledHostElement(element: HostTestInstance) {\n  if (!isPointerEventEnabled(element)) {\n    return false;\n  }\n\n  if (isHostText(element)) {\n    return element.props.disabled !== true;\n  }\n\n  if (isHostTextInput(element)) {\n    // @ts-expect-error - workaround incorrect ReactTestInstance type\n    return element.props.editable !== false;\n  }\n\n  return true;\n}\n\nfunction isEnabledTouchResponder(element: HostTestInstance) {\n  return isPointerEventEnabled(element) && element.props.onStartShouldSetResponder?.();\n}\n\nfunction hasPressEventHandler(element: HostTestInstance) {\n  return (\n    getEventHandler(element, 'press') ||\n    getEventHandler(element, 'longPress') ||\n    getEventHandler(element, 'pressIn') ||\n    getEventHandler(element, 'pressOut')\n  );\n}\n\n/**\n * Dispatches a press event sequence for host elements that have `onPress*` event handlers.\n */\nasync function emitDirectPressEvents(\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n  await dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n\n  await wait(config, options.duration);\n\n  // Long press events are emitted before `pressOut`.\n  if (options.type === 'longPress') {\n    await dispatchEvent(element, 'longPress', EventBuilder.Common.touch());\n  }\n\n  await dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n\n  // Regular press events are emitted after `pressOut` according to the React Native docs.\n  // See: https://reactnative.dev/docs/pressable#onpress\n  // Experimentally for very short presses (< 130ms) `press` events are actually emitted before `onPressOut`, but\n  // we will ignore that as in reality most pressed would be above the 130ms threshold.\n  if (options.type === 'press') {\n    await dispatchEvent(element, 'press', EventBuilder.Common.touch());\n  }\n}\n\nasync function emitPressabilityPressEvents(\n  config: UserEventConfig,\n  element: HostTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n\n  await dispatchEvent(element, 'responderGrant', EventBuilder.Common.responderGrant());\n\n  const duration = options.duration ?? DEFAULT_MIN_PRESS_DURATION;\n  await wait(config, duration);\n\n  await dispatchEvent(element, 'responderRelease', EventBuilder.Common.responderRelease());\n\n  // React Native will wait for minimal delay of DEFAULT_MIN_PRESS_DURATION\n  // before emitting the `pressOut` event. We need to wait here, so that\n  // `press()` function does not return before that.\n  if (DEFAULT_MIN_PRESS_DURATION - duration > 0) {\n    await act(() => wait(config, DEFAULT_MIN_PRESS_DURATION - duration));\n  }\n}\n"],"mappings":"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","ignoreList":[]}