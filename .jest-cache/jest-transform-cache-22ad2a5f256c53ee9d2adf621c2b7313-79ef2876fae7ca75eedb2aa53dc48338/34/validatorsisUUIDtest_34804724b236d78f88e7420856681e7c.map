{"version":3,"names":["_validators","require","describe","it","expect","isUUID","toBe","undefined"],"sources":["validators.isUUID.test.ts"],"sourcesContent":["import { isUUID } from '@/utils/validators';\n\ndescribe('isUUID', () => {\n  it('accepts valid UUIDs (generic versions)', () => {\n    expect(isUUID('123e4567-e89b-12d3-a456-426614174000')).toBe(true);\n    expect(isUUID('550e8400-e29b-41d4-a716-446655440000')).toBe(true);\n    expect(isUUID('550E8400-E29B-41D4-A716-446655440000')).toBe(true);\n  });\n\n  it('rejects non-UUIDs and local IDs', () => {\n    expect(isUUID('local_123')).toBe(false);\n    expect(isUUID('not-a-uuid')).toBe(false);\n    expect(isUUID('123e4567-e89b-12d3-a456-42661417400Z')).toBe(false);\n    expect(isUUID('')).toBe(false);\n    // @ts-expect-error ensure type guard handles undefined\n    expect(isUUID(undefined)).toBe(false);\n  });\n});\n\n\n"],"mappings":"AAAA,IAAAA,WAAA,GAAAC,OAAA;AAEAC,QAAQ,CAAC,QAAQ,EAAE,YAAM;EACvBC,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjDC,MAAM,CAAC,IAAAC,kBAAM,EAAC,sCAAsC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACjEF,MAAM,CAAC,IAAAC,kBAAM,EAAC,sCAAsC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACjEF,MAAM,CAAC,IAAAC,kBAAM,EAAC,sCAAsC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EACnE,CAAC,CAAC;EAEFH,EAAE,CAAC,iCAAiC,EAAE,YAAM;IAC1CC,MAAM,CAAC,IAAAC,kBAAM,EAAC,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IACvCF,MAAM,CAAC,IAAAC,kBAAM,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IACxCF,MAAM,CAAC,IAAAC,kBAAM,EAAC,sCAAsC,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAClEF,MAAM,CAAC,IAAAC,kBAAM,EAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAE9BF,MAAM,CAAC,IAAAC,kBAAM,EAACE,SAAS,CAAC,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;EACvC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}