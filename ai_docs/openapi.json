{
  "openapi": "3.1.0",
  "info": {
    "title": "Big Mood Detector Inference API",
    "description": "\n# Big Mood Detector Inference API\n\nClinical-grade mood prediction from wearable data using validated machine learning models.\n\n## Overview\n\nThis API provides mood episode prediction capabilities using two complementary approaches:\n- **Daily Features**: 12-element normalized feature vector from daily health summaries\n- **Minute Window**: 7-day minute-level activity data (10,080 data points)\n\n## Models\n\n### XGBoost Models (Seoul Study)\n- **Depression Risk**: AUC 0.80 (Korean cohort, MDD+BD patients)\n- **Manic Episodes**: AUC 0.98 (Korean cohort, BD patients)  \n- **Hypomanic Episodes**: AUC 0.95 (Korean cohort, BD patients)\n\n### PAT Transformer (Dartmouth)\n- **Depression Screening**: AUC 0.593 (US NHANES 2013-14)\n- **Current State Assessment**: Past 7 days analysis\n\n## Response Formats\n\n### Class-Based Format\nReturns probabilities for 5 mood classes:\n- `normal`: Baseline mood state\n- `depressive`: Depression episode indicators\n- `stressed`: Elevated stress markers\n- `anxious`: Anxiety episode markers  \n- `happy`: Positive mood elevation\n\n### MEA Format\nReturns direct mood metrics:\n- `mood`: 0-100 scale (higher = better mood)\n- `energy`: 1-10 scale (higher = more energy)\n- `anxiety`: 1-10 scale (higher = more anxious)\n\n## Feature Specification\n\n### Daily Features (12 elements, normalized [0,1])\n1. `hr_rest`: Resting heart rate (40-100 bpm range)\n2. `hr_mean`: Mean heart rate (40-120 bpm range)  \n3. `hr_var`: Heart rate variability (0-400 range)\n4. `hrv_sdnn_median`: HRV SDNN median (10-120 ms range)\n5. `hrv_rmssd`: HRV RMSSD (10-120 ms range)\n6. `steps`: Daily step count (0-20,000 range)\n7. `active_energy`: Active energy expenditure (0-1,500 kcal range)\n8. `stand_hours`: Standing hours (0-18 hours range)\n9. `sleep_duration_min`: Sleep duration (0-720 minutes range)\n10. `sleep_efficiency`: Sleep efficiency (0-1 ratio)\n11. `deep_sleep_ratio`: Deep sleep ratio (0-0.6 range)\n12. `vo2max`: VO2 Max fitness (20-60 ml/kg/min range)\n\n### Minute Window (10,080 elements)\n- 7 days \u00d7 1440 minutes of activity data\n- Base64-encoded Float32Array\n- Normalized activity counts [0,1]\n\n## Authentication\n\nOptional API key authentication via `Authorization: Bearer <token>` header.\nSet `AI_INFERENCE_KEY` environment variable to enable.\n\n## Rate Limits\n\n- Health endpoint: 30 requests/minute\n- Models endpoint: 10 requests/minute  \n- Inference endpoint: 60 requests/minute\n\n## Error Handling\n\nStandard HTTP status codes:\n- `200`: Success\n- `400`: Invalid request (validation errors)\n- `401`: Authentication required\n- `422`: Validation error (malformed data)\n- `429`: Rate limit exceeded\n- `500`: Internal server error\n\n## Clinical Use\n\n\u26a0\ufe0f **Research Tool Only**: Not FDA approved or clinically validated.\nResults should complement, not replace, clinical assessment.\n\n## Population Specificity\n\n- **XGBoost**: Trained on 168 Korean adults (18-35y) with mood disorders\n- **PAT**: Pre-trained on 21,538 US adults, fine-tuned on 2,800 with PHQ-9 scores\n- No validation across ethnicities, age groups, or comorbid conditions\n\n## Contact & Support\n\nFor technical support or research collaboration:\n- GitHub: https://github.com/Clarity-Digital-Twin/big-mood-detector\n- Documentation: https://big-mood-detector.readthedocs.io\n        ",
    "version": "2.0.0",
    "x-models-status": {
      "xgboost_models_loaded": 3,
      "pat_model_architecture": "ready",
      "total_model_size_mb": 15.3,
      "last_updated": "2025-09-09"
    },
    "contact": {
      "name": "Big Mood Detector API Support",
      "url": "https://github.com/Clarity-Digital-Twin/big-mood-detector",
      "email": "support@example.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "Health",
        "description": "Health check endpoint",
        "operationId": "health_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "summary": "List Models",
        "description": "List available models",
        "operationId": "list_models_v1_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/infer": {
      "post": {
        "summary": "Infer",
        "description": "Main inference endpoint",
        "operationId": "infer_v1_infer_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ClientInfo": {
        "properties": {
          "app": {
            "type": "string",
            "title": "App",
            "default": "unknown"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "1.0.0"
          }
        },
        "type": "object",
        "title": "ClientInfo"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InferRequest": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version",
            "default": "v1"
          },
          "input_type": {
            "type": "string",
            "title": "Input Type"
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          },
          "feature_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Version",
            "default": "v1"
          },
          "minute_window_b64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minute Window B64"
          },
          "scaler": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scaler",
            "default": "nhanes_v1"
          },
          "features_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features Hash"
          },
          "client": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClientInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "response_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format",
            "default": "class"
          }
        },
        "type": "object",
        "required": [
          "model",
          "input_type"
        ],
        "title": "InferRequest"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "examples": {
      "DailyFeaturesNormal": {
        "summary": "Normal mood state - daily features",
        "description": "Typical daily health metrics indicating normal mood state",
        "value": {
          "model": "big-mood-detector",
          "input_type": "daily_features_norm01",
          "features": [
            0.6,
            0.65,
            0.3,
            0.7,
            0.75,
            0.6,
            0.5,
            0.8,
            0.75,
            0.85,
            0.4,
            0.7
          ],
          "client": {
            "app": "obslessless-clean",
            "version": "3.0.0"
          }
        }
      },
      "DailyFeaturesDepressed": {
        "summary": "Depressive indicators - daily features",
        "description": "Health metrics suggesting depressive episode risk",
        "value": {
          "model": "big-mood-detector",
          "input_type": "daily_features_norm01",
          "features": [
            0.4,
            0.45,
            0.6,
            0.3,
            0.25,
            0.2,
            0.1,
            0.3,
            0.4,
            0.5,
            0.2,
            0.3
          ],
          "response_format": "mea",
          "client": {
            "app": "obslessless-clean",
            "version": "3.0.0"
          }
        }
      },
      "MinuteWindowRequest": {
        "summary": "PAT-Conv-L minute window request",
        "description": "7-day minute-level activity data for PAT analysis",
        "value": {
          "model": "pat-conv-l",
          "input_type": "minute_window_f32_b64",
          "minute_window_b64": "<base64-encoded-float32-array-10080-elements>",
          "scaler": "nhanes_v1",
          "client": {
            "app": "obslessless-clean",
            "version": "3.0.0"
          }
        }
      },
      "ClassResponse": {
        "summary": "Class-based prediction response",
        "value": {
          "model": "big-mood-detector",
          "model_version": "v1",
          "class_labels": [
            "normal",
            "depressive",
            "stressed",
            "anxious",
            "happy"
          ],
          "probs": [
            0.2,
            0.1,
            0.4,
            0.3,
            0.0
          ],
          "top_class": 2,
          "elapsed_ms": 45,
          "request_id": "uuid-string",
          "timestamp": "2025-09-09T12:34:56.789Z",
          "confidence": 0.4
        }
      },
      "MEAResponse": {
        "summary": "MEA format response",
        "value": {
          "model": "big-mood-detector",
          "model_version": "v1",
          "mood": 34,
          "energy": 5,
          "anxiety": 8,
          "confidence": 0.4,
          "elapsed_ms": 42,
          "request_id": "uuid-string",
          "timestamp": "2025-09-09T12:34:56.789Z"
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Optional API key authentication. Set AI_INFERENCE_KEY environment variable to enable."
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "Service health and status monitoring"
    },
    {
      "name": "Models",
      "description": "Available models and capabilities"
    },
    {
      "name": "Inference",
      "description": "Mood prediction endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://192.168.1.56:8814",
      "description": "Enhanced API server (current)"
    },
    {
      "url": "http://192.168.1.56:8811",
      "description": "Development server (legacy)"
    },
    {
      "url": "https://api.bigmooddetector.com",
      "description": "Production server (example)"
    }
  ]
}

